{"id": 1399, "question": "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.", "sql": "select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no\n\nthe sql query has a semantic error in the join condition. it's joining `team.team_fifa_api_id` with `team_attributes.team_api_id`, but according to the schema, it should be joining", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59\n\nIs the SQL semantically correct?"}
{"id": 826, "question": "Which user ID has the highest reputation?", "sql": "select id from users order by reputation desc limit 1", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes\n\nthe sql query correctly:\n1. selects the `id` field from the `users` table (which corresponds to the user id)\n2. orders by `reputation` in descending order to get the highest reputation first", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user ID has the highest reputation?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select id from users order by reputation desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 700, "question": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.", "sql": "select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no\n\nthe sql query has several issues:\n\n1. the column name should be `hascontentwarning` (camelcase) not `hascontentwarning`\n2. the query doesn't fully address the question about \"missing", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'\n\nIs the SQL semantically correct?"}
{"id": 1295, "question": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?", "sql": "select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no\n\nthe sql has several semantic errors:\n\n1. the date filtering is incorrect - `strftime('%y', laptimes.lap)` tries to extract a year from `laptimes.lap`, but `lap` is a lap number", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50\n\nIs the SQL semantically correct?"}
{"id": 328, "question": "What is the percentage of carcinogenic molecules in triple type bonds?", "sql": "select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no\n\nthe sql is not semantically correct. the query is calculating the percentage of triple bonds among carcinogenic molecules, but the question asks for the percentage of carcinogenic molecules that have triple bonds. these are fundamentally different calculations - one", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of carcinogenic molecules in triple type bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 1283, "question": "What is the average time in seconds of champion for each year, before year 1975?", "sql": "SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no\n\nthe sql query has several semantic issues:\n\n1. **missing where clause**: the question asks for data \"before year 1975\" but the sql doesn't filter by `races.year < 1975`.\n\n2. **", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average time in seconds of champion for each year, before year 1975?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year\n\nIs the SQL semantically correct?"}
{"id": 625, "question": "Name the foreign name of the card that has boros watermark? List out the type of this card.", "sql": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes\n\nthe sql query is semantically correct. it:\n\n1. selects the foreign name (`foreign_data.name`) and card type (`cards.type`) as requested\n2. joins the `cards` and `foreign", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the foreign name of the card that has boros watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'\n\nIs the SQL semantically correct?"}
{"id": 94, "question": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs", "sql": "SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no\n\nthe sql is not semantically correct. the main issue is with the join condition - it's joining `schools.cdscode` with `frpm.charter school number`, but these fields represent different things. the `cdscode` is", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'\n\nIs the SQL semantically correct?"}
{"id": 1654, "question": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.", "sql": "SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no\n\nthe sql query has a semantic issue with the age calculation. the query uses `strftime('%y', 'now') - strftime('%y', t1.birthday)` which only considers the year difference and ignores the month", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50\n\nIs the SQL semantically correct?"}
