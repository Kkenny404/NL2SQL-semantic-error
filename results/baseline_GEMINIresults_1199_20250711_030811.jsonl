{"id": 0, "question": "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.", "sql": "select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59\n\nIs the SQL semantically correct?"}
{"id": 1, "question": "Which user ID has the highest reputation?", "sql": "select id from users order by reputation desc limit 1", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user ID has the highest reputation?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select id from users order by reputation desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 2, "question": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.", "sql": "select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'\n\nIs the SQL semantically correct?"}
{"id": 3, "question": "In the 2015–2016 season, how many games were played in the Italian Serie A league?", "sql": "select sum(case when match.season = '2015/2016' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.country_id = 'I' and league.name = 'Serie A'", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the 2015–2016 season, how many games were played in the Italian Serie A league?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select sum(case when match.season = '2015/2016' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.country_id = 'I' and league.name = 'Serie A'\n\nIs the SQL semantically correct?"}
{"id": 4, "question": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?", "sql": "select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50\n\nIs the SQL semantically correct?"}
{"id": 5, "question": "What is the percentage of carcinogenic molecules in triple type bonds?", "sql": "select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of carcinogenic molecules in triple type bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 6, "question": "What is the average time in seconds of champion for each year, before year 1975?", "sql": "SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average time in seconds of champion for each year, before year 1975?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year\n\nIs the SQL semantically correct?"}
{"id": 7, "question": "Name the foreign name of the card that has boros watermark? List out the type of this card.", "sql": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the foreign name of the card that has boros watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'\n\nIs the SQL semantically correct?"}
{"id": 8, "question": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs", "sql": "SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'\n\nIs the SQL semantically correct?"}
{"id": 9, "question": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.", "sql": "SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50\n\nIs the SQL semantically correct?"}
{"id": 10, "question": "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.", "sql": "select client.client_id , account.account_id , account.frequency from district inner join account on district.district_id = account.district_id inner join client on district.district_id = client.district_id where district.a3 = 'east Bohemia' and account.date between 1995 and 2000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id , account.account_id , account.frequency from district inner join account on district.district_id = account.district_id inner join client on district.district_id = client.district_id where district.a3 = 'east Bohemia' and account.date between 1995 and 2000\n\nIs the SQL semantically correct?"}
{"id": 11, "question": "What is the percentage of blue female superheroes among all female superheroes?", "sql": "select cast(sum(case when colour.colour = 'Blue' then 1 else 0 end) as real) * 100 / count(*) from colour inner join superhero on colour.id = superhero.skin_colour_id inner join gender on superhero.gender_id = gender.id", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of blue female superheroes among all female superheroes?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select cast(sum(case when colour.colour = 'Blue' then 1 else 0 end) as real) * 100 / count(*) from colour inner join superhero on colour.id = superhero.skin_colour_id inner join gender on superhero.gender_id = gender.id\n\nIs the SQL semantically correct?"}
{"id": 12, "question": "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.", "sql": "SELECT schools.school FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 > 500 AND schools.magnet = 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.school FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 > 500 AND schools.magnet = 1\n\nIs the SQL semantically correct?"}
{"id": 13, "question": "How many sets are available just in Japanese and not in Magic: The Gathering Online?", "sql": "select count(sets.code) from sets inner join set_translations on sets.code = set_translations.setcode inner join foreign_data on set_translations.id = foreign_data.id where foreign_data.language = 'Japanese' and sets.mtgocode is null or sets.mtgocode = ''", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many sets are available just in Japanese and not in Magic: The Gathering Online?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(sets.code) from sets inner join set_translations on sets.code = set_translations.setcode inner join foreign_data on set_translations.id = foreign_data.id where foreign_data.language = 'Japanese' and sets.mtgocode is null or sets.mtgocode = ''\n\nIs the SQL semantically correct?"}
{"id": 14, "question": "How many bonds are created by bonding atoms with chlorine element?", "sql": "SELECT count(bond.bond_id) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bonds are created by bonding atoms with chlorine element?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(bond.bond_id) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'\n\nIs the SQL semantically correct?"}
{"id": 15, "question": "Name the driver with the most winning. Mention his nationality and what is his maximum point scores.", "sql": "select drivers.nationality , drivers.surname , avg(driverstandings.points) from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid group by drivers.driverid order by count(driverstandings.wins) desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the driver with the most winning. Mention his nationality and what is his maximum point scores.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.nationality , drivers.surname , avg(driverstandings.points) from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid group by drivers.driverid order by count(driverstandings.wins) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 16, "question": "Which active district has the highest average score in Reading?", "sql": "select schools.district from schools inner join satscores on schools.cdscode = satscores.cds where schools.statustype = 'Active' and schools.admlname1 = 'Reading' order by satscores.avgscrread desc limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which active district has the highest average score in Reading?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.district from schools inner join satscores on schools.cdscode = satscores.cds where schools.statustype = 'Active' and schools.admlname1 = 'Reading' order by satscores.avgscrread desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 17, "question": "What percentage of players have a strength and stamina score of more than 80?", "sql": "select cast(sum(case when player_attributes.stamina > 80 then 1 else 0 end) as real) * 100 / count(player.player_name) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of players have a strength and stamina score of more than 80?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select cast(sum(case when player_attributes.stamina > 80 then 1 else 0 end) as real) * 100 / count(player.player_name) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id\n\nIs the SQL semantically correct?"}
{"id": 18, "question": "How many majors are there in \"College of Humanities and Social Sciences\"?", "sql": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many majors are there in \"College of Humanities and Social Sciences\"?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\n\nIs the SQL semantically correct?"}
{"id": 19, "question": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.", "sql": "select cast(sum(case when races.time is not null then 1 else 0 end) as real) * 100 / count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year between 2007 and 2009", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when races.time is not null then 1 else 0 end) as real) * 100 / count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year between 2007 and 2009\n\nIs the SQL semantically correct?"}
{"id": 20, "question": "Please list the lap records for the circuits in Italy.", "sql": "select laptimes.time from circuits inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy' order by laptimes.lap desc limit 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the lap records for the circuits in Italy.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select laptimes.time from circuits inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy' order by laptimes.lap desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 21, "question": "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?", "sql": "select count(*) from patient where strftime('%Y' , admission) = '1997' and sex = 'F' and description = 'Inpatient'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(*) from patient where strftime('%Y' , admission) = '1997' and sex = 'F' and description = 'Inpatient'\n\nIs the SQL semantically correct?"}
{"id": 22, "question": "Give the number of \"Revival\" badges.", "sql": "SELECT count(id) FROM badges WHERE name = 'Revival'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the number of \"Revival\" badges.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(id) FROM badges WHERE name = 'Revival'\n\nIs the SQL semantically correct?"}
{"id": 23, "question": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?", "sql": "select client.birth_date from client inner join loan on client.district_id = loan.account_id where loan.amount = 98832 and loan.date = '1996-01-03'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.birth_date from client inner join loan on client.district_id = loan.account_id where loan.amount = 98832 and loan.date = '1996-01-03'\n\nIs the SQL semantically correct?"}
{"id": 24, "question": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?", "sql": "select cast((races.time - results.time) as real) * 100 / results.driverid from results inner join races on results.raceid = races.raceid inner join driverstandings on results.driverid = driverstandings.driverid where races.year = 2008 and races.name = 'Australian Grand Prix' order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast((races.time - results.time) as real) * 100 / results.driverid from results inner join races on results.raceid = races.raceid inner join driverstandings on results.driverid = driverstandings.driverid where races.year = 2008 and races.name = 'Australian Grand Prix' order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 25, "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?", "sql": "SELECT sum(CASE WHEN customers.segment = 'SME' THEN yearmonth.consumption ELSE 0 END) - sum(CASE WHEN customers.segment = 'LAM' THEN yearmonth.consumption ELSE 0 END) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'CZK' AND substr(yearmonth.date, 1, 4) = '2013'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(CASE WHEN customers.segment = 'SME' THEN yearmonth.consumption ELSE 0 END) - sum(CASE WHEN customers.segment = 'LAM' THEN yearmonth.consumption ELSE 0 END) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'CZK' AND substr(yearmonth.date, 1, 4) = '2013'\n\nIs the SQL semantically correct?"}
{"id": 26, "question": "What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?", "sql": "select results.time from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and results.rank = 2 order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select results.time from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and results.rank = 2 order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 27, "question": "Sort in descending order all patients by birthday for male patient with albumin not within range.", "sql": "select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.alb < 3.5 or laboratory.alb >= 5.5 order by patient.birthday asc", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Sort in descending order all patients by birthday for male patient with albumin not within range.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.alb < 3.5 or laboratory.alb >= 5.5 order by patient.birthday asc\n\nIs the SQL semantically correct?"}
{"id": 28, "question": "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?", "sql": "SELECT results.fastestlap FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.fastestlap FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 29, "question": "State the alternative languages available for card named Annul numbered 29.", "sql": "select set_translations.language from cards inner join set_translations on cards.id = set_translations.id where cards.name = 'annul' and cards.number = 29", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the alternative languages available for card named Annul numbered 29.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select set_translations.language from cards inner join set_translations on cards.id = set_translations.id where cards.name = 'annul' and cards.number = 29\n\nIs the SQL semantically correct?"}
{"id": 30, "question": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.", "sql": "select county , sum(virtual) from schools where county in ('San Diego' , 'Santa Barbara') group by county order by count(virtual) desc limit 1", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select county , sum(virtual) from schools where county in ('San Diego' , 'Santa Barbara') group by county order by count(virtual) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 31, "question": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.", "sql": "select distinct patient.id from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 50 and laboratory.plt > 100 and laboratory.plt <= 400", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.id from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 50 and laboratory.plt > 100 and laboratory.plt <= 400\n\nIs the SQL semantically correct?"}
{"id": 32, "question": "What percentage of KAM customers pay in euros?", "sql": "SELECT CAST(SUM(CASE WHEN Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Segment) FROM customers WHERE Segment = 'KAM'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of KAM customers pay in euros?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT CAST(SUM(CASE WHEN Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Segment) FROM customers WHERE Segment = 'KAM'\n\nIs the SQL semantically correct?"}
{"id": 33, "question": "What elements are in the TR004_8_9 bond atoms?", "sql": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR004_8_9'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What elements are in the TR004_8_9 bond atoms?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR004_8_9'\n\nIs the SQL semantically correct?"}
{"id": 34, "question": "Please list the year during which the race is held on circuits in Shanghai.", "sql": "select distinct races.year from races inner join circuits on races.circuitid = circuits.circuitid where circuits.location = 'Shanghai'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the year during which the race is held on circuits in Shanghai.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.year from races inner join circuits on races.circuitid = circuits.circuitid where circuits.location = 'Shanghai'\n\nIs the SQL semantically correct?"}
{"id": 35, "question": "List out the accounts who have the earliest trading date in 1995 ?", "sql": "select account.account_id from account inner join trans on account.account_id = trans.account_id where strftime('%Y' , trans.date) = '1995' order by account.date asc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the accounts who have the earliest trading date in 1995 ?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from account inner join trans on account.account_id = trans.account_id where strftime('%Y' , trans.date) = '1995' order by account.date asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 36, "question": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?", "sql": "SELECT T3.birth_date FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T3.birth_date FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03'\n\nIs the SQL semantically correct?"}
{"id": 37, "question": "Which customer paid the most in 2012/8/25?", "sql": "select customerid from transactions_1k where date = '2012-08-25' order by amount desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which customer paid the most in 2012/8/25?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customerid from transactions_1k where date = '2012-08-25' order by amount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 38, "question": "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?", "sql": "select avg(district.a15) from account inner join district on account.district_id = district.district_id where district.a3 between 4000 and 4999 and account.date between 1997 and 2000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select avg(district.a15) from account inner join district on account.district_id = district.district_id where district.a3 between 4000 and 4999 and account.date between 1997 and 2000\n\nIs the SQL semantically correct?"}
{"id": 39, "question": "What are the maximum points of British constructors?", "sql": "SELECT AVG(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the maximum points of British constructors?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT AVG(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\n\nIs the SQL semantically correct?"}
{"id": 40, "question": "What is the composition of element chlorine in percentage among the single bond molecules?", "sql": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the composition of element chlorine in percentage among the single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 41, "question": "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.", "sql": "select mailzip from schools where admfname1 = 'Avetik' and admlname2 = 'Atoian'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select mailzip from schools where admfname1 = 'Avetik' and admlname2 = 'Atoian'\n\nIs the SQL semantically correct?"}
{"id": 42, "question": "Who has the highest average finishing rate between the highest and shortest football player?", "sql": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) AND T2.finishing IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who has the highest average finishing rate between the highest and shortest football player?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) AND T2.finishing IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 43, "question": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?", "sql": "SELECT count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 2 AND examination.`ana pattern` = 'S' AND examination.`acl igm` * 1.2 > ( SELECT avg(examination.`acl igm`) FROM patient INNER JOIN examination ON patient.id = examination.id )", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 2 AND examination.`ana pattern` = 'S' AND examination.`acl igm` * 1.2 > ( SELECT avg(examination.`acl igm`) FROM patient INNER JOIN examination ON patient.id = examination.id )\n\nIs the SQL semantically correct?"}
{"id": 44, "question": "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.", "sql": "select school type , school name , latitude from schools where latitude = ( select max(latitude) from schools )", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select school type , school name , latitude from schools where latitude = ( select max(latitude) from schools )\n\nIs the SQL semantically correct?"}
{"id": 45, "question": "Among the members who incurred expenses in more than one event, who paid the most amount?", "sql": "select member.first_name , member.last_name from event inner join attendance on event.event_id = attendance.link_to_event inner join member on attendance.link_to_member = member.member_id group by member.first_name , member.last_name order by count(attendance.link_to_member) desc limit 1", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the members who incurred expenses in more than one event, who paid the most amount?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name from event inner join attendance on event.event_id = attendance.link_to_event inner join member on attendance.link_to_member = member.member_id group by member.first_name , member.last_name order by count(attendance.link_to_member) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 46, "question": "Please list the chains of the gas stations with transactions in euro.", "sql": "SELECT DISTINCT T3.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'Euro'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the chains of the gas stations with transactions in euro.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT T3.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'Euro'\n\nIs the SQL semantically correct?"}
{"id": 47, "question": "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?", "sql": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\n\nIs the SQL semantically correct?"}
{"id": 48, "question": "Which player is older, Aaron Lennon or Abdelaziz Barrada?", "sql": "SELECT player_name FROM player WHERE birthday = ( SELECT max(birthday) FROM player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' )", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which player is older, Aaron Lennon or Abdelaziz Barrada?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_name FROM player WHERE birthday = ( SELECT max(birthday) FROM player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' )\n\nIs the SQL semantically correct?"}
{"id": 49, "question": "Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?", "sql": "select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.sex = 'M' and laboratory.sc170 in ('-' , '+-') and examination.symptoms = 'vertigo'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.sex = 'M' and laboratory.sc170 in ('-' , '+-') and examination.symptoms = 'vertigo'\n\nIs the SQL semantically correct?"}
