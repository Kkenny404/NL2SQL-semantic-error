{"id": 0, "question": "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.", "sql": "select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59\n\nIs the SQL semantically correct?"}
{"id": 1, "question": "Which user ID has the highest reputation?", "sql": "select id from users order by reputation desc limit 1", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user ID has the highest reputation?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select id from users order by reputation desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 2, "question": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.", "sql": "select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'\n\nIs the SQL semantically correct?"}
{"id": 3, "question": "In the 2015–2016 season, how many games were played in the Italian Serie A league?", "sql": "select sum(case when match.season = '2015/2016' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.country_id = 'I' and league.name = 'Serie A'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the 2015–2016 season, how many games were played in the Italian Serie A league?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select sum(case when match.season = '2015/2016' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.country_id = 'I' and league.name = 'Serie A'\n\nIs the SQL semantically correct?"}
{"id": 4, "question": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?", "sql": "select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50\n\nIs the SQL semantically correct?"}
{"id": 5, "question": "What is the percentage of carcinogenic molecules in triple type bonds?", "sql": "select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of carcinogenic molecules in triple type bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 6, "question": "What is the average time in seconds of champion for each year, before year 1975?", "sql": "SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average time in seconds of champion for each year, before year 1975?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year\n\nIs the SQL semantically correct?"}
{"id": 7, "question": "Name the foreign name of the card that has boros watermark? List out the type of this card.", "sql": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the foreign name of the card that has boros watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'\n\nIs the SQL semantically correct?"}
{"id": 8, "question": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs", "sql": "SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'\n\nIs the SQL semantically correct?"}
{"id": 9, "question": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.", "sql": "SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50\n\nIs the SQL semantically correct?"}
{"id": 10, "question": "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.", "sql": "select client.client_id , account.account_id , account.frequency from district inner join account on district.district_id = account.district_id inner join client on district.district_id = client.district_id where district.a3 = 'east Bohemia' and account.date between 1995 and 2000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id , account.account_id , account.frequency from district inner join account on district.district_id = account.district_id inner join client on district.district_id = client.district_id where district.a3 = 'east Bohemia' and account.date between 1995 and 2000\n\nIs the SQL semantically correct?"}
{"id": 11, "question": "What is the percentage of blue female superheroes among all female superheroes?", "sql": "select cast(sum(case when colour.colour = 'Blue' then 1 else 0 end) as real) * 100 / count(*) from colour inner join superhero on colour.id = superhero.skin_colour_id inner join gender on superhero.gender_id = gender.id", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of blue female superheroes among all female superheroes?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select cast(sum(case when colour.colour = 'Blue' then 1 else 0 end) as real) * 100 / count(*) from colour inner join superhero on colour.id = superhero.skin_colour_id inner join gender on superhero.gender_id = gender.id\n\nIs the SQL semantically correct?"}
{"id": 12, "question": "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.", "sql": "SELECT schools.school FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 > 500 AND schools.magnet = 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.school FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 > 500 AND schools.magnet = 1\n\nIs the SQL semantically correct?"}
{"id": 13, "question": "How many sets are available just in Japanese and not in Magic: The Gathering Online?", "sql": "select count(sets.code) from sets inner join set_translations on sets.code = set_translations.setcode inner join foreign_data on set_translations.id = foreign_data.id where foreign_data.language = 'Japanese' and sets.mtgocode is null or sets.mtgocode = ''", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many sets are available just in Japanese and not in Magic: The Gathering Online?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(sets.code) from sets inner join set_translations on sets.code = set_translations.setcode inner join foreign_data on set_translations.id = foreign_data.id where foreign_data.language = 'Japanese' and sets.mtgocode is null or sets.mtgocode = ''\n\nIs the SQL semantically correct?"}
{"id": 14, "question": "How many bonds are created by bonding atoms with chlorine element?", "sql": "SELECT count(bond.bond_id) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bonds are created by bonding atoms with chlorine element?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(bond.bond_id) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'\n\nIs the SQL semantically correct?"}
{"id": 15, "question": "Name the driver with the most winning. Mention his nationality and what is his maximum point scores.", "sql": "select drivers.nationality , drivers.surname , avg(driverstandings.points) from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid group by drivers.driverid order by count(driverstandings.wins) desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the driver with the most winning. Mention his nationality and what is his maximum point scores.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.nationality , drivers.surname , avg(driverstandings.points) from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid group by drivers.driverid order by count(driverstandings.wins) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 16, "question": "Which active district has the highest average score in Reading?", "sql": "select schools.district from schools inner join satscores on schools.cdscode = satscores.cds where schools.statustype = 'Active' and schools.admlname1 = 'Reading' order by satscores.avgscrread desc limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which active district has the highest average score in Reading?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.district from schools inner join satscores on schools.cdscode = satscores.cds where schools.statustype = 'Active' and schools.admlname1 = 'Reading' order by satscores.avgscrread desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 17, "question": "What percentage of players have a strength and stamina score of more than 80?", "sql": "select cast(sum(case when player_attributes.stamina > 80 then 1 else 0 end) as real) * 100 / count(player.player_name) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of players have a strength and stamina score of more than 80?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select cast(sum(case when player_attributes.stamina > 80 then 1 else 0 end) as real) * 100 / count(player.player_name) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id\n\nIs the SQL semantically correct?"}
{"id": 18, "question": "How many majors are there in \"College of Humanities and Social Sciences\"?", "sql": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many majors are there in \"College of Humanities and Social Sciences\"?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\n\nIs the SQL semantically correct?"}
{"id": 19, "question": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.", "sql": "select cast(sum(case when races.time is not null then 1 else 0 end) as real) * 100 / count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year between 2007 and 2009", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when races.time is not null then 1 else 0 end) as real) * 100 / count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year between 2007 and 2009\n\nIs the SQL semantically correct?"}
{"id": 20, "question": "Please list the lap records for the circuits in Italy.", "sql": "select laptimes.time from circuits inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy' order by laptimes.lap desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the lap records for the circuits in Italy.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select laptimes.time from circuits inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy' order by laptimes.lap desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 21, "question": "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?", "sql": "select count(*) from patient where strftime('%Y' , admission) = '1997' and sex = 'F' and description = 'Inpatient'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(*) from patient where strftime('%Y' , admission) = '1997' and sex = 'F' and description = 'Inpatient'\n\nIs the SQL semantically correct?"}
{"id": 22, "question": "Give the number of \"Revival\" badges.", "sql": "SELECT count(id) FROM badges WHERE name = 'Revival'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the number of \"Revival\" badges.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(id) FROM badges WHERE name = 'Revival'\n\nIs the SQL semantically correct?"}
{"id": 23, "question": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?", "sql": "select client.birth_date from client inner join loan on client.district_id = loan.account_id where loan.amount = 98832 and loan.date = '1996-01-03'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.birth_date from client inner join loan on client.district_id = loan.account_id where loan.amount = 98832 and loan.date = '1996-01-03'\n\nIs the SQL semantically correct?"}
{"id": 24, "question": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?", "sql": "select cast((races.time - results.time) as real) * 100 / results.driverid from results inner join races on results.raceid = races.raceid inner join driverstandings on results.driverid = driverstandings.driverid where races.year = 2008 and races.name = 'Australian Grand Prix' order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast((races.time - results.time) as real) * 100 / results.driverid from results inner join races on results.raceid = races.raceid inner join driverstandings on results.driverid = driverstandings.driverid where races.year = 2008 and races.name = 'Australian Grand Prix' order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 25, "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?", "sql": "SELECT sum(CASE WHEN customers.segment = 'SME' THEN yearmonth.consumption ELSE 0 END) - sum(CASE WHEN customers.segment = 'LAM' THEN yearmonth.consumption ELSE 0 END) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'CZK' AND substr(yearmonth.date, 1, 4) = '2013'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(CASE WHEN customers.segment = 'SME' THEN yearmonth.consumption ELSE 0 END) - sum(CASE WHEN customers.segment = 'LAM' THEN yearmonth.consumption ELSE 0 END) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'CZK' AND substr(yearmonth.date, 1, 4) = '2013'\n\nIs the SQL semantically correct?"}
{"id": 26, "question": "What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?", "sql": "select results.time from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and results.rank = 2 order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select results.time from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and results.rank = 2 order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 27, "question": "Sort in descending order all patients by birthday for male patient with albumin not within range.", "sql": "select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.alb < 3.5 or laboratory.alb >= 5.5 order by patient.birthday asc", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Sort in descending order all patients by birthday for male patient with albumin not within range.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.alb < 3.5 or laboratory.alb >= 5.5 order by patient.birthday asc\n\nIs the SQL semantically correct?"}
{"id": 28, "question": "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?", "sql": "SELECT results.fastestlap FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.fastestlap FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 29, "question": "State the alternative languages available for card named Annul numbered 29.", "sql": "select set_translations.language from cards inner join set_translations on cards.id = set_translations.id where cards.name = 'annul' and cards.number = 29", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the alternative languages available for card named Annul numbered 29.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select set_translations.language from cards inner join set_translations on cards.id = set_translations.id where cards.name = 'annul' and cards.number = 29\n\nIs the SQL semantically correct?"}
{"id": 30, "question": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.", "sql": "select county , sum(virtual) from schools where county in ('San Diego' , 'Santa Barbara') group by county order by count(virtual) desc limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select county , sum(virtual) from schools where county in ('San Diego' , 'Santa Barbara') group by county order by count(virtual) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 31, "question": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.", "sql": "select distinct patient.id from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 50 and laboratory.plt > 100 and laboratory.plt <= 400", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.id from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 50 and laboratory.plt > 100 and laboratory.plt <= 400\n\nIs the SQL semantically correct?"}
{"id": 32, "question": "What percentage of KAM customers pay in euros?", "sql": "SELECT CAST(SUM(CASE WHEN Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Segment) FROM customers WHERE Segment = 'KAM'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of KAM customers pay in euros?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT CAST(SUM(CASE WHEN Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Segment) FROM customers WHERE Segment = 'KAM'\n\nIs the SQL semantically correct?"}
{"id": 33, "question": "What elements are in the TR004_8_9 bond atoms?", "sql": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR004_8_9'", "db_id": "toxicology", "label": true, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What elements are in the TR004_8_9 bond atoms?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR004_8_9'\n\nIs the SQL semantically correct?"}
{"id": 34, "question": "Please list the year during which the race is held on circuits in Shanghai.", "sql": "select distinct races.year from races inner join circuits on races.circuitid = circuits.circuitid where circuits.location = 'Shanghai'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the year during which the race is held on circuits in Shanghai.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.year from races inner join circuits on races.circuitid = circuits.circuitid where circuits.location = 'Shanghai'\n\nIs the SQL semantically correct?"}
{"id": 35, "question": "List out the accounts who have the earliest trading date in 1995 ?", "sql": "select account.account_id from account inner join trans on account.account_id = trans.account_id where strftime('%Y' , trans.date) = '1995' order by account.date asc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the accounts who have the earliest trading date in 1995 ?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from account inner join trans on account.account_id = trans.account_id where strftime('%Y' , trans.date) = '1995' order by account.date asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 36, "question": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?", "sql": "SELECT T3.birth_date FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T3.birth_date FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03'\n\nIs the SQL semantically correct?"}
{"id": 37, "question": "Which customer paid the most in 2012/8/25?", "sql": "select customerid from transactions_1k where date = '2012-08-25' order by amount desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which customer paid the most in 2012/8/25?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customerid from transactions_1k where date = '2012-08-25' order by amount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 38, "question": "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?", "sql": "select avg(district.a15) from account inner join district on account.district_id = district.district_id where district.a3 between 4000 and 4999 and account.date between 1997 and 2000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select avg(district.a15) from account inner join district on account.district_id = district.district_id where district.a3 between 4000 and 4999 and account.date between 1997 and 2000\n\nIs the SQL semantically correct?"}
{"id": 39, "question": "What are the maximum points of British constructors?", "sql": "SELECT AVG(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the maximum points of British constructors?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT AVG(T2.points) FROM constructors AS T1 INNER JOIN constructorStandings AS T2 ON T1.constructorId = T2.constructorId WHERE T1.nationality = 'British'\n\nIs the SQL semantically correct?"}
{"id": 40, "question": "What is the composition of element chlorine in percentage among the single bond molecules?", "sql": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the composition of element chlorine in percentage among the single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 41, "question": "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.", "sql": "select mailzip from schools where admfname1 = 'Avetik' and admlname2 = 'Atoian'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select mailzip from schools where admfname1 = 'Avetik' and admlname2 = 'Atoian'\n\nIs the SQL semantically correct?"}
{"id": 42, "question": "Who has the highest average finishing rate between the highest and shortest football player?", "sql": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) AND T2.finishing IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who has the highest average finishing rate between the highest and shortest football player?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) AND T2.finishing IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 43, "question": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?", "sql": "SELECT count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 2 AND examination.`ana pattern` = 'S' AND examination.`acl igm` * 1.2 > ( SELECT avg(examination.`acl igm`) FROM patient INNER JOIN examination ON patient.id = examination.id )", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 2 AND examination.`ana pattern` = 'S' AND examination.`acl igm` * 1.2 > ( SELECT avg(examination.`acl igm`) FROM patient INNER JOIN examination ON patient.id = examination.id )\n\nIs the SQL semantically correct?"}
{"id": 44, "question": "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.", "sql": "select school type , school name , latitude from schools where latitude = ( select max(latitude) from schools )", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select school type , school name , latitude from schools where latitude = ( select max(latitude) from schools )\n\nIs the SQL semantically correct?"}
{"id": 45, "question": "Among the members who incurred expenses in more than one event, who paid the most amount?", "sql": "select member.first_name , member.last_name from event inner join attendance on event.event_id = attendance.link_to_event inner join member on attendance.link_to_member = member.member_id group by member.first_name , member.last_name order by count(attendance.link_to_member) desc limit 1", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the members who incurred expenses in more than one event, who paid the most amount?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name from event inner join attendance on event.event_id = attendance.link_to_event inner join member on attendance.link_to_member = member.member_id group by member.first_name , member.last_name order by count(attendance.link_to_member) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 46, "question": "Please list the chains of the gas stations with transactions in euro.", "sql": "SELECT DISTINCT T3.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'Euro'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the chains of the gas stations with transactions in euro.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT T3.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'Euro'\n\nIs the SQL semantically correct?"}
{"id": 47, "question": "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?", "sql": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\n\nIs the SQL semantically correct?"}
{"id": 48, "question": "Which player is older, Aaron Lennon or Abdelaziz Barrada?", "sql": "SELECT player_name FROM player WHERE birthday = ( SELECT max(birthday) FROM player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' )", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which player is older, Aaron Lennon or Abdelaziz Barrada?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_name FROM player WHERE birthday = ( SELECT max(birthday) FROM player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' )\n\nIs the SQL semantically correct?"}
{"id": 49, "question": "Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?", "sql": "select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.sex = 'M' and laboratory.sc170 in ('-' , '+-') and examination.symptoms = 'vertigo'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.sex = 'M' and laboratory.sc170 in ('-' , '+-') and examination.symptoms = 'vertigo'\n\nIs the SQL semantically correct?"}
{"id": 50, "question": "Locate players with vision scores of 90 and above, state the country of these players.", "sql": "SELECT T1.player_name, T2.vision FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.vision > 89", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Locate players with vision scores of 90 and above, state the country of these players.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_name, T2.vision FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.vision > 89\n\nIs the SQL semantically correct?"}
{"id": 51, "question": "Describe the last accessed date and location of the users who received the outliers badge.", "sql": "SELECT users.lastaccessdate, users.location FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.name = 'Outliers'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Describe the last accessed date and location of the users who received the outliers badge.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT users.lastaccessdate, users.location FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.name = 'Outliers'\n\nIs the SQL semantically correct?"}
{"id": 52, "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.", "sql": "select phone , ext from schools where zip = '95203-3704'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select phone , ext from schools where zip = '95203-3704'\n\nIs the SQL semantically correct?"}
{"id": 53, "question": "What percentage was the budget for Parking to the total budget for the \"November Speaker\"?", "sql": "select cast(sum(case when budget.category = 'Parking' then budget.amount else 0 end) as real) * 100 / sum(budget.amount) from budget inner join event on budget.link_to_event = event.event_id", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage was the budget for Parking to the total budget for the \"November Speaker\"?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select cast(sum(case when budget.category = 'Parking' then budget.amount else 0 end) as real) * 100 / sum(budget.amount) from budget inner join event on budget.link_to_event = event.event_id\n\nIs the SQL semantically correct?"}
{"id": 54, "question": "List out the set name of the set code \"ALL\".", "sql": "select distinct sets.name from cards inner join set_translations on cards.id = set_translations.id inner join sets on set_translations.setcode = sets.code where set_translations.setcode = 'ALL'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the set name of the set code \"ALL\".\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct sets.name from cards inner join set_translations on cards.id = set_translations.id inner join sets on set_translations.setcode = sets.code where set_translations.setcode = 'ALL'\n\nIs the SQL semantically correct?"}
{"id": 55, "question": "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?", "sql": "select website from schools where admfname1 = 'Mike' and admlname1 = 'Dante'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select website from schools where admfname1 = 'Mike' and admlname1 = 'Dante'\n\nIs the SQL semantically correct?"}
{"id": 56, "question": "What is the average score of the posts owned by the user csgillespie?", "sql": "SELECT avg(posts.score) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score of the posts owned by the user csgillespie?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT avg(posts.score) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'\n\nIs the SQL semantically correct?"}
{"id": 57, "question": "What atoms comprise TR186?", "sql": "SELECT element FROM atom WHERE molecule_id = 'TR186'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What atoms comprise TR186?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT element FROM atom WHERE molecule_id = 'TR186'\n\nIs the SQL semantically correct?"}
{"id": 58, "question": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.", "sql": "SELECT team.team_long_name FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date LIKE '2014%' AND team_attributes.buildupplaydribblingclass = 'Normal' ORDER BY team_attributes.chancecreationpassing DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT team.team_long_name FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date LIKE '2014%' AND team_attributes.buildupplaydribblingclass = 'Normal' ORDER BY team_attributes.chancecreationpassing DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 59, "question": "Identify whether the chemical compound that contains Calcium is carcinogenic.", "sql": "select case when molecule.label = '+' then 'YES' else 'NO' end as yorn from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'ca'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify whether the chemical compound that contains Calcium is carcinogenic.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select case when molecule.label = '+' then 'YES' else 'NO' end as yorn from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'ca'\n\nIs the SQL semantically correct?"}
{"id": 60, "question": "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?", "sql": "SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720 GROUP BY T1.PostHistoryTypeId", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720 GROUP BY T1.PostHistoryTypeId\n\nIs the SQL semantically correct?"}
{"id": 61, "question": "List the title of posts which were edited by Vebjorn Ljosa.", "sql": "SELECT posts.title FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE posthistory.userdisplayname = 'Vebjorn Ljosa'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the title of posts which were edited by Vebjorn Ljosa.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT posts.title FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE posthistory.userdisplayname = 'Vebjorn Ljosa'\n\nIs the SQL semantically correct?"}
{"id": 62, "question": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?", "sql": "select cast(yearmonth.consumption as real) * 100 / yearmonth.consumption from yearmonth inner join transactions_1k on yearmonth.customerid = transactions_1k.customerid where transactions_1k.date = '2012-08-25' and transactions_1k.amount = 634.8", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select cast(yearmonth.consumption as real) * 100 / yearmonth.consumption from yearmonth inner join transactions_1k on yearmonth.customerid = transactions_1k.customerid where transactions_1k.date = '2012-08-25' and transactions_1k.amount = 634.8\n\nIs the SQL semantically correct?"}
{"id": 63, "question": "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.", "sql": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Brown' AND superhero.weight_kg < 100", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Brown' AND superhero.weight_kg < 100\n\nIs the SQL semantically correct?"}
{"id": 64, "question": "List the players' api id who had the highest above average overall ratings in 2010.", "sql": "SELECT player_api_id FROM Player_Attributes WHERE date LIKE '2010%' AND overall_rating > ( SELECT AVG(overall_rating) FROM Player_Attributes WHERE date LIKE '2010%' )", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the players' api id who had the highest above average overall ratings in 2010.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_api_id FROM Player_Attributes WHERE date LIKE '2010%' AND overall_rating > ( SELECT AVG(overall_rating) FROM Player_Attributes WHERE date LIKE '2010%' )\n\nIs the SQL semantically correct?"}
{"id": 65, "question": "Which event has the lowest cost?", "sql": "select event.event_name from expense inner join event on expense.expense_id = event.event_id order by expense.cost asc limit 1", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which event has the lowest cost?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select event.event_name from expense inner join event on expense.expense_id = event.event_id order by expense.cost asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 66, "question": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.", "sql": "select team.team_short_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.buildupplayspeed = 31 and team_attributes.buildupplaydribbling = 53 and team_attributes.buildupplaypassing = 32", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_short_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.buildupplayspeed = 31 and team_attributes.buildupplaydribbling = 53 and team_attributes.buildupplaypassing = 32\n\nIs the SQL semantically correct?"}
{"id": 67, "question": "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?", "sql": "SELECT count(schools.school) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'Los Angeles' AND frpm.`free meal count (k-12)` BETWEEN 500 AND 700", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT count(schools.school) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'Los Angeles' AND frpm.`free meal count (k-12)` BETWEEN 500 AND 700\n\nIs the SQL semantically correct?"}
{"id": 68, "question": "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?", "sql": "SELECT schools.website FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.numtsttakr BETWEEN 2000 AND 3000", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.website FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.numtsttakr BETWEEN 2000 AND 3000\n\nIs the SQL semantically correct?"}
{"id": 69, "question": "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.", "sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)\n\nIs the SQL semantically correct?"}
{"id": 70, "question": "What is the total score of the posts edited by Yevgeny and include the user's website URL.", "sql": "SELECT SUM(T2.Score), T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Yevgeny'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total score of the posts edited by Yevgeny and include the user's website URL.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT SUM(T2.Score), T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Yevgeny'\n\nIs the SQL semantically correct?"}
{"id": 71, "question": "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?", "sql": "select circuits.name from circuits inner join races on circuits.circuitid = races.circuitid where circuits.name in ('Silverstone Circuit' , 'Hockenheimring' , 'Hungaroring') order by circuits.lat desc limit 1", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select circuits.name from circuits inner join races on circuits.circuitid = races.circuitid where circuits.name in ('Silverstone Circuit' , 'Hockenheimring' , 'Hungaroring') order by circuits.lat desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 72, "question": "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.", "sql": "select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.sm in ('-' , '+-') order by patient.birthday desc limit 3", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.sm in ('-' , '+-') order by patient.birthday desc limit 3\n\nIs the SQL semantically correct?"}
{"id": 73, "question": "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?", "sql": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 > 10000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 > 10000\n\nIs the SQL semantically correct?"}
{"id": 74, "question": "What is the power ID of cryokinesis?", "sql": "select id from superpower where power_name = 'cryokinesis'", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the power ID of cryokinesis?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select id from superpower where power_name = 'cryokinesis'\n\nIs the SQL semantically correct?"}
{"id": 75, "question": "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?", "sql": "select schools.school , schools.fundingtype from schools inner join frpm on schools.cdscode = frpm.cdscode inner join satscores on satscores.cds = frpm.cdscode where satscores.cname = 'Riverside' and satscores.avgscrmath > 400 group by schools.school having avg(satscores.avgscrmath) > 400", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.school , schools.fundingtype from schools inner join frpm on schools.cdscode = frpm.cdscode inner join satscores on satscores.cds = frpm.cdscode where satscores.cname = 'Riverside' and satscores.avgscrmath > 400 group by schools.school having avg(satscores.avgscrmath) > 400\n\nIs the SQL semantically correct?"}
{"id": 76, "question": "How many badges has the user csgillespie obtained?", "sql": "SELECT count(badges.name) FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.displayname = 'csgillespie'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many badges has the user csgillespie obtained?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(badges.name) FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.displayname = 'csgillespie'\n\nIs the SQL semantically correct?"}
{"id": 77, "question": "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?", "sql": "select subtypes , supertypes from cards where name = 'Molimo , Maro-Sorcerer'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select subtypes , supertypes from cards where name = 'Molimo , Maro-Sorcerer'\n\nIs the SQL semantically correct?"}
{"id": 78, "question": "Identify the weakest attribute of the Black Panther.", "sql": "select attribute.attribute_name from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where superhero.superhero_name = 'Black Panther' order by hero_attribute.attribute_value asc limit 1", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the weakest attribute of the Black Panther.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select attribute.attribute_name from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where superhero.superhero_name = 'Black Panther' order by hero_attribute.attribute_value asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 79, "question": "Which top 4 leagues had the most games in the 2015-2016 season?", "sql": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which top 4 leagues had the most games in the 2015-2016 season?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 80, "question": "What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?", "sql": "SELECT cast(sum(CASE WHEN laboratory.ua <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / count(laboratory.id) FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.`u-pro` BETWEEN 0 AND 30", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(CASE WHEN laboratory.ua <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / count(laboratory.id) FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.`u-pro` BETWEEN 0 AND 30\n\nIs the SQL semantically correct?"}
{"id": 81, "question": "List all the sets available in Italian translation. State the total number of cards per set.", "sql": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the sets available in Italian translation. State the total number of cards per set.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\n\nIs the SQL semantically correct?"}
{"id": 82, "question": "Among the molecules which contain \"c\" element, which of them are not carcinogenic?", "sql": "select molecule.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'C' and molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the molecules which contain \"c\" element, which of them are not carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'C' and molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 83, "question": "For the set which had 'SS2' as the code, what is its magic card market id?", "sql": "SELECT mcmId FROM sets WHERE code = 'SS2'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the set which had 'SS2' as the code, what is its magic card market id?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT mcmId FROM sets WHERE code = 'SS2'\n\nIs the SQL semantically correct?"}
{"id": 84, "question": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs", "sql": "select schools.admfname1 , schools.city from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.charternum = '00D2'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.admfname1 , schools.city from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.charternum = '00D2'\n\nIs the SQL semantically correct?"}
{"id": 85, "question": "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.", "sql": "select drivers.forename , drivers.nationality , races.name from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid order by drivers.dob desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.nationality , races.name from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid order by drivers.dob desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 86, "question": "Which player is the tallest?", "sql": "SELECT id FROM Player ORDER BY height DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which player is the tallest?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT id FROM Player ORDER BY height DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 87, "question": "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?", "sql": "select foreign_data.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Italian'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Italian'\n\nIs the SQL semantically correct?"}
{"id": 88, "question": "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.", "sql": "SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE strftime('%Y', loan.date) = '1993' AND loan.duration > 12 ORDER BY loan.amount DESC LIMIT 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE strftime('%Y', loan.date) = '1993' AND loan.duration > 12 ORDER BY loan.amount DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 89, "question": "What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?", "sql": "select avg(laptimes.time) from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on results.raceid = races.raceid where drivers.forename = 'Sebastian' and drivers.surname = 'Vettel' and races.year = 2009", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select avg(laptimes.time) from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on results.raceid = races.raceid where drivers.forename = 'Sebastian' and drivers.surname = 'Vettel' and races.year = 2009\n\nIs the SQL semantically correct?"}
{"id": 90, "question": "List out the age of users who located in Vienna, Austria obtained the badge?", "sql": "select users.age from users inner join badges on users.id = badges.userid where users.location = 'Vienna , Austria'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the age of users who located in Vienna, Austria obtained the badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.age from users inner join badges on users.id = badges.userid where users.location = 'Vienna , Austria'\n\nIs the SQL semantically correct?"}
{"id": 91, "question": "Identify all the atoms that are connected to the atoms of the TR181 molecule.", "sql": "SELECT DISTINCT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify all the atoms that are connected to the atoms of the TR181 molecule.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181'\n\nIs the SQL semantically correct?"}
{"id": 92, "question": "Please list the countries of the gas stations with transactions taken place in June, 2013.", "sql": "select distinct gasstations.country from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where transactions_1k.date like '2013-06%'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the countries of the gas stations with transactions taken place in June, 2013.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select distinct gasstations.country from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where transactions_1k.date like '2013-06%'\n\nIs the SQL semantically correct?"}
{"id": 93, "question": "Which was Lewis Hamilton first race? What was his points recorded for his first race event?", "sql": "SELECT T3.year, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' ORDER BY T3.year LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was Lewis Hamilton first race? What was his points recorded for his first race event?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.year, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' ORDER BY T3.year LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 94, "question": "Which country had the gas station that sold the most expensive product id No.2 for one unit?", "sql": "SELECT gasstations.country FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid WHERE transactions_1k.productid = 2 ORDER BY transactions_1k.price DESC LIMIT 1", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which country had the gas station that sold the most expensive product id No.2 for one unit?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT gasstations.country FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid WHERE transactions_1k.productid = 2 ORDER BY transactions_1k.price DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 95, "question": "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?", "sql": "select artist from cards where text = 'Das perfekte Gegenmittel zu einer dichten Formation.'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select artist from cards where text = 'Das perfekte Gegenmittel zu einer dichten Formation.'\n\nIs the SQL semantically correct?"}
{"id": 96, "question": "How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?", "sql": "select sum(results.points) from results inner join driverstandings on results.driverid = driverstandings.driverid inner join drivers on driverstandings.driverid = drivers.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select sum(results.points) from results inner join driverstandings on results.driverid = driverstandings.driverid inner join drivers on driverstandings.driverid = drivers.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'\n\nIs the SQL semantically correct?"}
{"id": 97, "question": "Please list the diseases of the patients born after 1985-1-1 and have a normal Rhuematoid Factor.", "sql": "select distinct patient.diagnosis from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , patient.birthday) >= '1995' and laboratory.ra in ('-' , '+-')", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the diseases of the patients born after 1985-1-1 and have a normal Rhuematoid Factor.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.diagnosis from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , patient.birthday) >= '1995' and laboratory.ra in ('-' , '+-')\n\nIs the SQL semantically correct?"}
{"id": 98, "question": "How much did the Student_Club members spend on food in September Meeting?", "sql": "SELECT sum(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'September Meeting' AND budget.category = 'Food' AND member.position = 'Member'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much did the Student_Club members spend on food in September Meeting?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT sum(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'September Meeting' AND budget.category = 'Food' AND member.position = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 99, "question": "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?", "sql": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60\n\nIs the SQL semantically correct?"}
{"id": 100, "question": "How many clients who were born in 1920 stay in east Bohemia?", "sql": "SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'east Bohemia' AND client.birth_date LIKE '1920%'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many clients who were born in 1920 stay in east Bohemia?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'east Bohemia' AND client.birth_date LIKE '1920%'\n\nIs the SQL semantically correct?"}
{"id": 101, "question": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.", "sql": "select distinct team.team_long_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.chancecreationpassingclass = 'Normal' and team_attributes.date between '2014-01-01 00:00:00' and '2014-01-31 00:00:00' order by team_attributes.chancecreationpassing desc", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select distinct team.team_long_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.chancecreationpassingclass = 'Normal' and team_attributes.date between '2014-01-01 00:00:00' and '2014-01-31 00:00:00' order by team_attributes.chancecreationpassing desc\n\nIs the SQL semantically correct?"}
{"id": 102, "question": "Among products comments with 0 score, what is the total number of users ages 40 years old?", "sql": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among products comments with 0 score, what is the total number of users ages 40 years old?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\n\nIs the SQL semantically correct?"}
{"id": 103, "question": "Who finished second in the San Marino Grand Prix in 2006?", "sql": "SELECT T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'San Marino Grand Prix' AND T3.year = 2006 AND T1.position = 2", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who finished second in the San Marino Grand Prix in 2006?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'San Marino Grand Prix' AND T3.year = 2006 AND T1.position = 2\n\nIs the SQL semantically correct?"}
{"id": 104, "question": "List the creation date and age of the user that commented with webiste.", "sql": "SELECT comments.creationdate, users.age FROM users INNER JOIN comments ON users.id = comments.userid WHERE users.websiteurl LIKE '%http://%'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the creation date and age of the user that commented with webiste.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT comments.creationdate, users.age FROM users INNER JOIN comments ON users.id = comments.userid WHERE users.websiteurl LIKE '%http://%'\n\nIs the SQL semantically correct?"}
{"id": 105, "question": "What is the best lap time recorded? List the driver and race with such recorded lap time.", "sql": "SELECT laptimes.time, drivers.forename, drivers.surname, races.name FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid INNER JOIN races ON laptimes.raceid = races.raceid ORDER BY laptimes.time LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the best lap time recorded? List the driver and race with such recorded lap time.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT laptimes.time, drivers.forename, drivers.surname, races.name FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid INNER JOIN races ON laptimes.raceid = races.raceid ORDER BY laptimes.time LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 106, "question": "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.", "sql": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT races.url FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 107, "question": "For the driver who set the fastest lap speed, what is his nationality?", "sql": "select distinct drivers.nationality from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.raceid = laptimes.raceid where results.raceid = 348", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the driver who set the fastest lap speed, what is his nationality?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.nationality from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.raceid = laptimes.raceid where results.raceid = 348\n\nIs the SQL semantically correct?"}
{"id": 108, "question": "Which publisher published the slowest superhero?", "sql": "SELECT publisher.publisher_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which publisher published the slowest superhero?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT publisher.publisher_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 109, "question": "Who among KAM's customers consumed the most? How much did it consume?", "sql": "select customers.customerid , yearmonth.consumption from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' group by customers.customerid order by sum(yearmonth.consumption) desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who among KAM's customers consumed the most? How much did it consume?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customers.customerid , yearmonth.consumption from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' group by customers.customerid order by sum(yearmonth.consumption) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 110, "question": "What is the total score of the posts edited by Yevgeny and include the user's website URL.", "sql": "select sum(posts.score) , users.websiteurl from users inner join posts on users.id = posts.lasteditoruserid inner join comments on posts.id = comments.postid where users.displayname = 'Yevgeny'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total score of the posts edited by Yevgeny and include the user's website URL.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select sum(posts.score) , users.websiteurl from users inner join posts on users.id = posts.lasteditoruserid inner join comments on posts.id = comments.postid where users.displayname = 'Yevgeny'\n\nIs the SQL semantically correct?"}
{"id": 111, "question": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.", "sql": "select player.birthday - strftime('%Y' , player_attributes.date) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.sprint_speed >= 97 and player_attributes.date between '2013-01-01 00:00:00' and '2015-12-31 00:00:00'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.birthday - strftime('%Y' , player_attributes.date) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.sprint_speed >= 97 and player_attributes.date between '2013-01-01 00:00:00' and '2015-12-31 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 112, "question": "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?", "sql": "SELECT T3.code FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.raceId = 45 AND T1.q3 = '0:01:33'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.code FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.raceId = 45 AND T1.q3 = '0:01:33'\n\nIs the SQL semantically correct?"}
{"id": 113, "question": "How many clients opened their accounts in Jesenik branch were women?", "sql": "SELECT COUNT(T1.district_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.A2 = 'Jesenik' AND T4.gender = 'F'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many clients opened their accounts in Jesenik branch were women?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT COUNT(T1.district_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.A2 = 'Jesenik' AND T4.gender = 'F'\n\nIs the SQL semantically correct?"}
{"id": 114, "question": "How many races in the year 2010 are held on grand prixs outside Asia and Europe?", "sql": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Asia', 'Europe')", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many races in the year 2010 are held on grand prixs outside Asia and Europe?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Asia', 'Europe')\n\nIs the SQL semantically correct?"}
{"id": 115, "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?", "sql": "select manacost from cards where frameversion = 2003 and availability = 'mtgo' and layout = 'normal' and bordercolor = 'black'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select manacost from cards where frameversion = 2003 and availability = 'mtgo' and layout = 'normal' and bordercolor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 116, "question": "Among the posts owned by csgillespie, how many of them are root posts?", "sql": "select count(posts.parentid) from posts inner join users on posts.owneruserid = users.id where users.displayname = 'csgillespie' and posts.parentid is null", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the posts owned by csgillespie, how many of them are root posts?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(posts.parentid) from posts inner join users on posts.owneruserid = users.id where users.displayname = 'csgillespie' and posts.parentid is null\n\nIs the SQL semantically correct?"}
{"id": 117, "question": "How many superheroes with blonde hair are there?", "sql": "SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many superheroes with blonde hair are there?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'\n\nIs the SQL semantically correct?"}
{"id": 118, "question": "What was the longest time a driver had ever spent at a pit stop?", "sql": "select max(pitstops.duration) from drivers inner join pitstops on drivers.driverid = pitstops.driverid", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the longest time a driver had ever spent at a pit stop?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select max(pitstops.duration) from drivers inner join pitstops on drivers.driverid = pitstops.driverid\n\nIs the SQL semantically correct?"}
{"id": 119, "question": "For the earliest customer, what segment did he/she have?", "sql": "select segment from customers where customerid = ( select customerid from customers order by customerid asc limit 1 )", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the earliest customer, what segment did he/she have?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select segment from customers where customerid = ( select customerid from customers order by customerid asc limit 1 )\n\nIs the SQL semantically correct?"}
{"id": 120, "question": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.", "sql": "select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating = 77 and player_attributes.date = '2016-06-23%' order by player.birthday asc limit 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating = 77 and player_attributes.date = '2016-06-23%' order by player.birthday asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 121, "question": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?", "sql": "SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 4, 2) AS REAL) * 60 + CAST(SUBSTR(T2.fastestLapTime, 7) AS REAL)) AS average_fastest_lap_time_seconds FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 4, 2) AS REAL) * 60 + CAST(SUBSTR(T2.fastestLapTime, 7) AS REAL)) AS average_fastest_lap_time_seconds FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 122, "question": "List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.", "sql": "SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 23 AND T1.q2 IS NOT NULL", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 23 AND T1.q2 IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 123, "question": "What are the accounts that have gold credit cards?", "sql": "select account.account_id from account inner join disp on account.account_id = disp.account_id inner join card on disp.disp_id = card.disp_id where card.type in ('gold' , 'junior') group by account.account_id", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the accounts that have gold credit cards?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from account inner join disp on account.account_id = disp.account_id inner join card on disp.disp_id = card.disp_id where card.type in ('gold' , 'junior') group by account.account_id\n\nIs the SQL semantically correct?"}
{"id": 124, "question": "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.", "sql": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL GROUP BY name", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL GROUP BY name\n\nIs the SQL semantically correct?"}
{"id": 125, "question": "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?", "sql": "SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND strftime('%Y', patient.birthday) BETWEEN '1936' AND '1956' AND laboratory.cpk > 250", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND strftime('%Y', patient.birthday) BETWEEN '1936' AND '1956' AND laboratory.cpk > 250\n\nIs the SQL semantically correct?"}
{"id": 126, "question": "Chlorine is in what type of bond?", "sql": "SELECT DISTINCT bond.bond_type FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'te'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Chlorine is in what type of bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT bond.bond_type FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'te'\n\nIs the SQL semantically correct?"}
{"id": 127, "question": "Which Russian set of cards contains the most cards overall?", "sql": "select cards.name from cards inner join foreign_data on cards.uuid = foreign_data.uuid inner join set_translations on sets.code = set_translations.setcode inner join sets on set_translations.id = sets.code where foreign_data.language = 'Russian' order by sets.basesetsize desc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which Russian set of cards contains the most cards overall?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name from cards inner join foreign_data on cards.uuid = foreign_data.uuid inner join set_translations on sets.code = set_translations.setcode inner join sets on set_translations.id = sets.code where foreign_data.language = 'Russian' order by sets.basesetsize desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 128, "question": "How many cards in the set Coldsnap have a black border color?", "sql": "SELECT count(cards.id) FROM cards INNER JOIN sets ON cards.cardkingdomid = sets.mcmid WHERE sets.name = 'Coldsnap' AND cards.bordercolor = 'black'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards in the set Coldsnap have a black border color?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(cards.id) FROM cards INNER JOIN sets ON cards.cardkingdomid = sets.mcmid WHERE sets.name = 'Coldsnap' AND cards.bordercolor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 129, "question": "Identify all connected atoms with a triple bond.", "sql": "select connected.atom_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify all connected atoms with a triple bond.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select connected.atom_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 130, "question": "What is the percentage of blue female superheroes among all female superheroes?", "sql": "SELECT CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female'", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of blue female superheroes among all female superheroes?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female'\n\nIs the SQL semantically correct?"}
{"id": 131, "question": "Among the male superheroes, list the super hero names of superheroes with weight greater than the 79% average weight of all superheroes.", "sql": "select superhero.full_name from superhero inner join gender on superhero.gender_id = gender.id where gender.gender = 'Male' and weight_kg > ( select avg(weight_kg) from superhero ) * 0.79", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the male superheroes, list the super hero names of superheroes with weight greater than the 79% average weight of all superheroes.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select superhero.full_name from superhero inner join gender on superhero.gender_id = gender.id where gender.gender = 'Male' and weight_kg > ( select avg(weight_kg) from superhero ) * 0.79\n\nIs the SQL semantically correct?"}
{"id": 132, "question": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?", "sql": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.time IS NOT NULL", "db_id": "formula_1", "label": true, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many drivers managed to finish the race in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.time IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 133, "question": "What's the nationality of the customer who spent 548.4 in 2012/8/24?", "sql": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the nationality of the customer who spent 548.4 in 2012/8/24?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4\n\nIs the SQL semantically correct?"}
{"id": 134, "question": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?", "sql": "select home_team_goal , away_team_goal from match where date like '2008-09-24%'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select home_team_goal , away_team_goal from match where date like '2008-09-24%'\n\nIs the SQL semantically correct?"}
{"id": 135, "question": "What are the atoms of the triple bond with the molecule \"TR041\"?", "sql": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR447' AND T2.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the atoms of the triple bond with the molecule \"TR041\"?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR447' AND T2.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 136, "question": "Give the publisher ID of Star Trek.", "sql": "SELECT t.id FROM publisher AS t WHERE t.publisher_name = 'Star Trek'", "db_id": "superhero", "label": true, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the publisher ID of Star Trek.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT t.id FROM publisher AS t WHERE t.publisher_name = 'Star Trek'\n\nIs the SQL semantically correct?"}
{"id": 137, "question": "From race no. 50 to 100, how many finishers have been disqualified?", "sql": "SELECT count(results.driverid) FROM results INNER JOIN status ON results.statusid = status.statusid WHERE status.statusid = 2 AND results.raceid BETWEEN 50 AND 100", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From race no. 50 to 100, how many finishers have been disqualified?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT count(results.driverid) FROM results INNER JOIN status ON results.statusid = status.statusid WHERE status.statusid = 2 AND results.raceid BETWEEN 50 AND 100\n\nIs the SQL semantically correct?"}
{"id": 138, "question": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.", "sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY SUM(T2.heading_accuracy) / COUNT(T2.player_fifa_api_id) DESC LIMIT 10", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY SUM(T2.heading_accuracy) / COUNT(T2.player_fifa_api_id) DESC LIMIT 10\n\nIs the SQL semantically correct?"}
{"id": 139, "question": "Find the uuid of cards in which the old school format is restricted or banned.", "sql": "select distinct legalities.uuid from legalities inner join cards on legalities.uuid = cards.uuid where legalities.format = 'oldschool' and legalities.status = 'Banned' or legalities.status = 'Restricted'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the uuid of cards in which the old school format is restricted or banned.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct legalities.uuid from legalities inner join cards on legalities.uuid = cards.uuid where legalities.format = 'oldschool' and legalities.status = 'Banned' or legalities.status = 'Restricted'\n\nIs the SQL semantically correct?"}
{"id": 140, "question": "Which was Lewis Hamilton first race? What was his points recorded for his first race event?", "sql": "select races.name , results.points from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' order by races.year asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was Lewis Hamilton first race? What was his points recorded for his first race event?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.name , results.points from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' order by races.year asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 141, "question": "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?", "sql": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\n\nIs the SQL semantically correct?"}
{"id": 142, "question": "What was the gas consumption peak month for SME customers in 2013?", "sql": "select yearmonth.date from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and strftime('%Y' , yearmonth.date) = '2013' order by yearmonth.consumption desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the gas consumption peak month for SME customers in 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select yearmonth.date from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and strftime('%Y' , yearmonth.date) = '2013' order by yearmonth.consumption desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 143, "question": "How many cards are oversized, reprinted, and printed for promotions?", "sql": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards are oversized, reprinted, and printed for promotions?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\n\nIs the SQL semantically correct?"}
{"id": 144, "question": "What are the bonds that have phosphorus and nitrogen as their atom elements?", "sql": "select distinct bond.bond_id from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'p' or atom.element = 'n'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the bonds that have phosphorus and nitrogen as their atom elements?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select distinct bond.bond_id from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'p' or atom.element = 'n'\n\nIs the SQL semantically correct?"}
{"id": 145, "question": "How many Italian drivers haven't finished the race?", "sql": "select count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where drivers.nationality = 'Italian' and races.time is null", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many Italian drivers haven't finished the race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where drivers.nationality = 'Italian' and races.time is null\n\nIs the SQL semantically correct?"}
{"id": 146, "question": "Please list the zip code of all the charter schools in Fresno County Office of Education.", "sql": "SELECT schools.zip FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE frpm.`charter school (y/n)` = 1 AND schools.county = 'Fresno'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the zip code of all the charter schools in Fresno County Office of Education.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.zip FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE frpm.`charter school (y/n)` = 1 AND schools.county = 'Fresno'\n\nIs the SQL semantically correct?"}
{"id": 147, "question": "What is the amount of debt that client number 992 has, and how is this client doing with payments?", "sql": "select loan.amount , loan.status from client inner join loan on client.client_id = loan.account_id where client.client_id = 992", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the amount of debt that client number 992 has, and how is this client doing with payments?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select loan.amount , loan.status from client inner join loan on client.client_id = loan.account_id where client.client_id = 992\n\nIs the SQL semantically correct?"}
{"id": 148, "question": "Provide the eye colours of the heroes whose skin colours are gold.", "sql": "select superhero.eye_colour_id from superhero inner join colour on colour.id = superhero.skin_colour_id where colour.colour = 'Gold'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the eye colours of the heroes whose skin colours are gold.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select superhero.eye_colour_id from superhero inner join colour on colour.id = superhero.skin_colour_id where colour.colour = 'Gold'\n\nIs the SQL semantically correct?"}
{"id": 149, "question": "Which year recorded the most gas use paid in EUR?", "sql": "SELECT strftime('%Y', `date`) FROM transactions_1k WHERE price > 0 GROUP BY strftime('%Y', `date`) ORDER BY sum(price) DESC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which year recorded the most gas use paid in EUR?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT strftime('%Y', `date`) FROM transactions_1k WHERE price > 0 GROUP BY strftime('%Y', `date`) ORDER BY sum(price) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 150, "question": "State all of 3-D Man's attributes along with their values.", "sql": "SELECT T2.attribute_name, T1.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = '3-D Man'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State all of 3-D Man's attributes along with their values.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT T2.attribute_name, T1.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = '3-D Man'\n\nIs the SQL semantically correct?"}
{"id": 151, "question": "List the post IDs and badge names of the user Samuel in 2013.", "sql": "SELECT T1.Id, T3.Name FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN badges AS T3 ON T2.Id = T3.UserId WHERE T2.DisplayName = 'Samuel' AND STRFTIME('%Y', T3.Date) = '2013'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the post IDs and badge names of the user Samuel in 2013.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.Id, T3.Name FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN badges AS T3 ON T2.Id = T3.UserId WHERE T2.DisplayName = 'Samuel' AND STRFTIME('%Y', T3.Date) = '2013'\n\nIs the SQL semantically correct?"}
{"id": 152, "question": "How many users are awarded with more than 5 badges?", "sql": "select count(userid) from badges where name in ( select name from badges group by name having count(name) > 5 )", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many users are awarded with more than 5 badges?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(userid) from badges where name in ( select name from badges group by name having count(name) > 5 )\n\nIs the SQL semantically correct?"}
{"id": 153, "question": "How many British drivers who were born in 1980?", "sql": "select count(driverid) from drivers where nationality = 'Australian' and strftime('%Y' , dob) = '1980'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many British drivers who were born in 1980?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(driverid) from drivers where nationality = 'Australian' and strftime('%Y' , dob) = '1980'\n\nIs the SQL semantically correct?"}
{"id": 154, "question": "Identify the gender of the superhero who has the ability of Phoenix Force.", "sql": "SELECT superhero.gender_id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the gender of the superhero who has the ability of Phoenix Force.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superhero.gender_id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'\n\nIs the SQL semantically correct?"}
{"id": 155, "question": "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?", "sql": "SELECT T1.Id, T2.Comment FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.Id, T2.Comment FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\n\nIs the SQL semantically correct?"}
{"id": 156, "question": "How many cards that illusrtated in German have been reprinted?", "sql": "SELECT count(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isreprint = 1", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards that illusrtated in German have been reprinted?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isreprint = 1\n\nIs the SQL semantically correct?"}
{"id": 157, "question": "For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?", "sql": "select count(posts.owneruserid) from users inner join posts on users.id = posts.owneruserid inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Tiago Pasqualini'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(posts.owneruserid) from users inner join posts on users.id = posts.owneruserid inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Tiago Pasqualini'\n\nIs the SQL semantically correct?"}
{"id": 158, "question": "What is the percentage of element chlorine in carcinogenic molecules?", "sql": "select cast(sum(case when atom.element = 'pb' then 1 else 0 end) as real) * 100 / count(atom.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of element chlorine in carcinogenic molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when atom.element = 'pb' then 1 else 0 end) as real) * 100 / count(atom.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 159, "question": "What is the postal street address for the school with the 7th highest Math average? Indicate the school's name.", "sql": "select schools.mailstreet , schools.school from schools inner join satscores on schools.cdscode = satscores.cds order by satscores.avgscrmath desc limit 5 , 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the postal street address for the school with the 7th highest Math average? Indicate the school's name.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.mailstreet , schools.school from schools inner join satscores on schools.cdscode = satscores.cds order by satscores.avgscrmath desc limit 5 , 1\n\nIs the SQL semantically correct?"}
{"id": 160, "question": "Which user have only one post history per post and having at least 1000 views?", "sql": "SELECT T2.UserId FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId WHERE T1.Views >= 1000 GROUP BY T2.UserId HAVING COUNT(DISTINCT T2.PostId) = 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user have only one post history per post and having at least 1000 views?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.UserId FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId WHERE T1.Views >= 1000 GROUP BY T2.UserId HAVING COUNT(DISTINCT T2.PostId) = 1\n\nIs the SQL semantically correct?"}
{"id": 161, "question": "Please provide links to events for members who have paid more than 50 dollar.", "sql": "SELECT DISTINCT T1.link_to_event FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.cost > 50", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide links to events for members who have paid more than 50 dollar.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT DISTINCT T1.link_to_event FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.cost > 50\n\nIs the SQL semantically correct?"}
{"id": 162, "question": "When did the user known as 'IrishStat' create his or her account?", "sql": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: When did the user known as 'IrishStat' create his or her account?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\n\nIs the SQL semantically correct?"}
{"id": 163, "question": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.", "sql": "select member.first_name , member.last_name , income.amount from income inner join member on income.link_to_member = member.member_id where income.date_received = '9/9/2019'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name , income.amount from income inner join member on income.link_to_member = member.member_id where income.date_received = '9/9/2019'\n\nIs the SQL semantically correct?"}
{"id": 164, "question": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?", "sql": "select set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Tendo Ice Bridge' and foreign_data.language = 'French'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Tendo Ice Bridge' and foreign_data.language = 'French'\n\nIs the SQL semantically correct?"}
{"id": 165, "question": "How old is the youngest Japanese driver? What is his name?", "sql": "SELECT 2022 - strftime('%Y', dob) FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How old is the youngest Japanese driver? What is his name?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT 2022 - strftime('%Y', dob) FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 166, "question": "How many posts have a score of 10 on the list?", "sql": "select count(postid) from comments where score = 10", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many posts have a score of 10 on the list?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(postid) from comments where score = 10\n\nIs the SQL semantically correct?"}
{"id": 167, "question": "How many patients with a normal RF don't have thrombosis?", "sql": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients with a normal RF don't have thrombosis?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0\n\nIs the SQL semantically correct?"}
{"id": 168, "question": "What are the player api id of 10 heaviest players?", "sql": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the player api id of 10 heaviest players?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\n\nIs the SQL semantically correct?"}
{"id": 169, "question": "State the ID and age of patient with positive degree of coagulation.", "sql": "SELECT T1.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the ID and age of patient with positive degree of coagulation.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\n\nIs the SQL semantically correct?"}
{"id": 170, "question": "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.", "sql": "SELECT T2.`Percent (%) Eligible Free (K-12)`, T1.DOC AS `District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Alusine'", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.`Percent (%) Eligible Free (K-12)`, T1.DOC AS `District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Alusine'\n\nIs the SQL semantically correct?"}
{"id": 171, "question": "Name all the cards which have alternative language in Japanese.", "sql": "select cards.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'Japanese'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name all the cards which have alternative language in Japanese.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'Japanese'\n\nIs the SQL semantically correct?"}
{"id": 172, "question": "Which race has the shortest actual finishing time? Please give the name and year.", "sql": "select distinct races.name , races.year from results inner join races on results.raceid = races.raceid where results.milliseconds is null order by results.milliseconds asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which race has the shortest actual finishing time? Please give the name and year.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.name , races.year from results inner join races on results.raceid = races.raceid where results.milliseconds is null order by results.milliseconds asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 173, "question": "What is the percentage of incredibly powerful cards in the set Coldsnap?", "sql": "select cast(sum(case when cards.power is not null then 1 else 0 end) as real) * 100 / count(cards.power) from cards inner join sets on cards.cardkingdomid = sets.id where sets.name = 'Coldsnap' and cards.cardkingdomid is not null", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of incredibly powerful cards in the set Coldsnap?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when cards.power is not null then 1 else 0 end) as real) * 100 / count(cards.power) from cards inner join sets on cards.cardkingdomid = sets.id where sets.name = 'Coldsnap' and cards.cardkingdomid is not null\n\nIs the SQL semantically correct?"}
{"id": 174, "question": "How many tags have post count between 5,000 to 7,000?", "sql": "SELECT count(DISTINCT tags.tagname) FROM tags INNER JOIN posts ON tags.wikipostid = posts.id WHERE posts.viewcount BETWEEN 5000 AND 7000", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many tags have post count between 5,000 to 7,000?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(DISTINCT tags.tagname) FROM tags INNER JOIN posts ON tags.wikipostid = posts.id WHERE posts.viewcount BETWEEN 5000 AND 7000\n\nIs the SQL semantically correct?"}
{"id": 175, "question": "How many molecules without sulphur element is not having double bond?", "sql": "SELECT count(molecule.molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type != ' = ' AND atom.element != 's'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules without sulphur element is not having double bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(molecule.molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type != ' = ' AND atom.element != 's'\n\nIs the SQL semantically correct?"}
{"id": 176, "question": "Who among KAM's customers consumed the most? How much did it consume?", "sql": "SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' ORDER BY T2.Consumption DESC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who among KAM's customers consumed the most? How much did it consume?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' ORDER BY T2.Consumption DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 177, "question": "Which district has highest active loan?", "sql": "SELECT T3.A2 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'C' OR T1.status = 'D' GROUP BY T3.A2 ORDER BY COUNT(T1.loan_id) DESC LIMIT 1", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which district has highest active loan?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T3.A2 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'C' OR T1.status = 'D' GROUP BY T3.A2 ORDER BY COUNT(T1.loan_id) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 178, "question": "What are the toxicology elements associated with bond ID TR000_1_2?", "sql": "select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR005_16_26'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the toxicology elements associated with bond ID TR000_1_2?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR005_16_26'\n\nIs the SQL semantically correct?"}
{"id": 179, "question": "List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.", "sql": "SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE strftime('%Y', laboratory.`date`) > '1992' AND laboratory.pt < 14", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE strftime('%Y', laboratory.`date`) > '1992' AND laboratory.pt < 14\n\nIs the SQL semantically correct?"}
{"id": 180, "question": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?", "sql": "select case when sum(case when admission = '+' then 1 else 0 end) > sum(case when admission = '-' then 1 else 0 end) then 'in-patient' else 'outpatient' end from patient", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Are there more in-patient or outpatient who were male? What is the deviation in percentage?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select case when sum(case when admission = '+' then 1 else 0 end) > sum(case when admission = '-' then 1 else 0 end) then 'in-patient' else 'outpatient' end from patient\n\nIs the SQL semantically correct?"}
{"id": 181, "question": "Which gas station has the highest amount of revenue?", "sql": "select gasstations.gasstationid from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid order by transactions_1k.amount desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which gas station has the highest amount of revenue?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select gasstations.gasstationid from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid order by transactions_1k.amount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 182, "question": "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.", "sql": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SM NOT IN ('-', '+-') AND T1.SM IS NOT NULL ORDER BY T2.Birthday DESC LIMIT 3", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SM NOT IN ('-', '+-') AND T1.SM IS NOT NULL ORDER BY T2.Birthday DESC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 183, "question": "List the event names which were budgeted for the food.", "sql": "select event.event_name from event inner join budget on event.event_id = budget.link_to_event where budget.category = 'Food'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the event names which were budgeted for the food.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select event.event_name from event inner join budget on event.event_id = budget.link_to_event where budget.category = 'Food'\n\nIs the SQL semantically correct?"}
{"id": 184, "question": "What are the two most common first names among the school administrators? Indicate the district to which they administer.", "sql": "SELECT AdmFName, District, COUNT(*) AS NameCount FROM (SELECT AdmFName1 AS AdmFName, District FROM schools WHERE AdmFName1 IS NOT NULL UNION ALL SELECT AdmFName2, District FROM schools WHERE AdmFName2 IS NOT NULL UNION ALL SELECT AdmFName3, District FROM schools WHERE AdmFName3 IS NOT NULL) GROUP BY AdmFName, District ORDER BY NameCount DESC LIMIT 2", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the two most common first names among the school administrators? Indicate the district to which they administer.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT AdmFName, District, COUNT(*) AS NameCount FROM (SELECT AdmFName1 AS AdmFName, District FROM schools WHERE AdmFName1 IS NOT NULL UNION ALL SELECT AdmFName2, District FROM schools WHERE AdmFName2 IS NOT NULL UNION ALL SELECT AdmFName3, District FROM schools WHERE AdmFName3 IS NOT NULL) GROUP BY AdmFName, District ORDER BY NameCount DESC LIMIT 2\n\nIs the SQL semantically correct?"}
{"id": 185, "question": "How many elders obtained the \"Supporter\" badge?", "sql": "select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and users.age > 65", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many elders obtained the \"Supporter\" badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and users.age > 65\n\nIs the SQL semantically correct?"}
{"id": 186, "question": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.", "sql": "SELECT CAST(SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage_bad, SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS count_bad FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T1.publisher_name = 'Marvel Comics'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT CAST(SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage_bad, SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS count_bad FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T1.publisher_name = 'Marvel Comics'\n\nIs the SQL semantically correct?"}
{"id": 187, "question": "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?", "sql": "SELECT results.position FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.time desc LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.position FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.time desc LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 188, "question": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.", "sql": "SELECT sum(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - sum(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT sum(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - sum(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero\n\nIs the SQL semantically correct?"}
{"id": 189, "question": "Where is the hometown of Garrett Gerke?", "sql": "select zip_code.city from member inner join zip_code on member.zip = zip_code.zip_code where member.first_name = 'Garrett' and member.last_name = 'Girke'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Where is the hometown of Garrett Gerke?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select zip_code.city from member inner join zip_code on member.zip = zip_code.zip_code where member.first_name = 'Garrett' and member.last_name = 'Girke'\n\nIs the SQL semantically correct?"}
{"id": 190, "question": "Which race was Alex Yoong in when he was in track number less than 20?", "sql": "select races.name from results inner join races on results.raceid = races.raceid inner join drivers on results.driverid = drivers.driverid where drivers.surname = 'Yoong' and drivers.forename = 'Alex' and results.position < 10", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which race was Alex Yoong in when he was in track number less than 20?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.name from results inner join races on results.raceid = races.raceid inner join drivers on results.driverid = drivers.driverid where drivers.surname = 'Yoong' and drivers.forename = 'Alex' and results.position < 10\n\nIs the SQL semantically correct?"}
{"id": 191, "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.", "sql": "SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.crossing IS NOT NULL ORDER BY T1.crossing DESC LIMIT 5", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who are the top 5 players who perform better in crossing actions? Indicate their player id.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.crossing IS NOT NULL ORDER BY T1.crossing DESC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 192, "question": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.", "sql": "SELECT patient.id, patient.admission FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50 AND (laboratory.rbc < 3.5 OR laboratory.rbc > 6)", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id, patient.admission FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50 AND (laboratory.rbc < 3.5 OR laboratory.rbc > 6)\n\nIs the SQL semantically correct?"}
{"id": 193, "question": "How many members have education major in the College of Education & Human Services?", "sql": "select count(*) from member inner join major on member.link_to_major = major.major_id where major.college = 'College of Education & Human Services' and major.major_name = 'Education' and member.position = 'Member'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many members have education major in the College of Education & Human Services?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select count(*) from member inner join major on member.link_to_major = major.major_id where major.college = 'College of Education & Human Services' and major.major_name = 'Education' and member.position = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 194, "question": "Please provide the IDs of the 3 female clients with the largest loans.", "sql": "select client.client_id from client inner join loan on client.client_id = loan.loan_id where client.gender = 'F' order by loan.amount desc limit 3", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide the IDs of the 3 female clients with the largest loans.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id from client inner join loan on client.client_id = loan.loan_id where client.gender = 'F' order by loan.amount desc limit 3\n\nIs the SQL semantically correct?"}
{"id": 195, "question": "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.", "sql": "select distinct patient.diagnosis from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.dna >= 8", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.diagnosis from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.dna >= 8\n\nIs the SQL semantically correct?"}
{"id": 196, "question": "How many bond id have element iodine?", "sql": "SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bond id have element iodine?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'\n\nIs the SQL semantically correct?"}
{"id": 197, "question": "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.", "sql": "select examination.symptoms , patient.diagnosis from patient inner join examination on patient.id = examination.id order by patient.birthday asc limit 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select examination.symptoms , patient.diagnosis from patient inner join examination on patient.id = examination.id order by patient.birthday asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 198, "question": "What is the percentage of carbon in double-bond molecules?", "sql": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T2.bond_type = '='", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of carbon in double-bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T2.bond_type = '='\n\nIs the SQL semantically correct?"}
{"id": 199, "question": "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?", "sql": "SELECT sum(yearmonth.consumption), yearmonth.date FROM `yearmonth` INNER JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid WHERE transactions_1k.date = '2012-08-24' AND transactions_1k.price = 124.05", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(yearmonth.consumption), yearmonth.date FROM `yearmonth` INNER JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid WHERE transactions_1k.date = '2012-08-24' AND transactions_1k.price = 124.05\n\nIs the SQL semantically correct?"}
{"id": 200, "question": "Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?", "sql": "select count(badges.userid) from users inner join badges on users.id = badges.userid where users.displayname = 'csgillespie' and badges.date = '2011'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(badges.userid) from users inner join badges on users.id = badges.userid where users.displayname = 'csgillespie' and badges.date = '2011'\n\nIs the SQL semantically correct?"}
{"id": 201, "question": "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?", "sql": "SELECT results.time, races.url FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' ORDER BY results.points DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the champion of 2008's Australian Grand Prix and where can I know more about him?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.time, races.url FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' ORDER BY results.points DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 202, "question": "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?", "sql": "select code from drivers where nationality = 'Dutch' order by dob asc limit 3", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select code from drivers where nationality = 'Dutch' order by dob asc limit 3\n\nIs the SQL semantically correct?"}
{"id": 203, "question": "What elements are in a double type bond?", "sql": "SELECT DISTINCT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '='", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What elements are in a double type bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '='\n\nIs the SQL semantically correct?"}
{"id": 204, "question": "When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.", "sql": "SELECT laboratory.`date` FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.ldh >= 500 ORDER BY patient.`first date` DESC LIMIT 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT laboratory.`date` FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.ldh >= 500 ORDER BY patient.`first date` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 205, "question": "In the 2015–2016 season, how many games were played in the Italian Serie A league?", "sql": "SELECT count(match_api_id) FROM `match` WHERE season = '2015/2016'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the 2015–2016 season, how many games were played in the Italian Serie A league?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT count(match_api_id) FROM `match` WHERE season = '2015/2016'\n\nIs the SQL semantically correct?"}
{"id": 206, "question": "What is the border color of card \"Ancestor's Chosen\"?", "sql": "SELECT colors FROM cards WHERE name = 'Ancestor''s Chosen'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the border color of card \"Ancestor's Chosen\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT colors FROM cards WHERE name = 'Ancestor''s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 207, "question": "Write the contents of comments with a score of 17.", "sql": "SELECT text FROM comments WHERE score = 17", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write the contents of comments with a score of 17.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT text FROM comments WHERE score = 17\n\nIs the SQL semantically correct?"}
{"id": 208, "question": "What is the percentage of female patient had total protein not within the normal range?", "sql": "SELECT cast(sum(iif(laboratory.tp < 6.0 OR laboratory.tp > 8.5, 1, 0)) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F'", "db_id": "thrombosis_prediction", "label": true, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of female patient had total protein not within the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(iif(laboratory.tp < 6.0 OR laboratory.tp > 8.5, 1, 0)) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F'\n\nIs the SQL semantically correct?"}
{"id": 209, "question": "In 2012, who had the least consumption in LAM?", "sql": "select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date >= 201201 and yearmonth.date <= 201212 and customers.segment = 'LAM' order by yearmonth.consumption asc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In 2012, who had the least consumption in LAM?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date >= 201201 and yearmonth.date <= 201212 and customers.segment = 'LAM' order by yearmonth.consumption asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 210, "question": "What is the average overall rating of the football player Aaron Doran?", "sql": "SELECT avg(player_attributes.overall_rating) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Aaron Doran'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average overall rating of the football player Aaron Doran?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT avg(player_attributes.overall_rating) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Aaron Doran'\n\nIs the SQL semantically correct?"}
{"id": 211, "question": "Please list the surnames of all the Italian drivers.", "sql": "select surname from drivers where nationality = 'italian'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the surnames of all the Italian drivers.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select surname from drivers where nationality = 'italian'\n\nIs the SQL semantically correct?"}
{"id": 212, "question": "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.", "sql": "select name from cards where side is not null and ispromo = ( select ispromo from cards where side != 0 )", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select name from cards where side is not null and ispromo = ( select ispromo from cards where side != 0 )\n\nIs the SQL semantically correct?"}
{"id": 213, "question": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.", "sql": "SELECT T1.driverId FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY SUM(T2.duration) / COUNT(T2.duration) LIMIT 5", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.driverId FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY SUM(T2.duration) / COUNT(T2.duration) LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 214, "question": "Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".", "sql": "select users.reputation , users.upvotes from comments inner join users on comments.userid = users.id where comments.text = 'fine , you win :)'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.reputation , users.upvotes from comments inner join users on comments.userid = users.id where comments.text = 'fine , you win :)'\n\nIs the SQL semantically correct?"}
{"id": 215, "question": "Among the members who incurred expenses in more than one event, who paid the most amount?", "sql": "SELECT T1.member_id FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T2.cost) DESC LIMIT 1", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the members who incurred expenses in more than one event, who paid the most amount?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T1.member_id FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T2.cost) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 216, "question": "Identify the type of expenses and their total value approved for 'October Meeting' event.", "sql": "SELECT T3.event_name, SUM(T2.cost) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T2.approved = 'true'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the type of expenses and their total value approved for 'October Meeting' event.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T3.event_name, SUM(T2.cost) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T2.approved = 'true'\n\nIs the SQL semantically correct?"}
{"id": 217, "question": "How many percent of 'Gold' cards were issued prior to 1998?", "sql": "select cast(sum(case when issued < 1998 then 1 else 0 end) as real) * 100 / count(*) from card where type = 'gold'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many percent of 'Gold' cards were issued prior to 1998?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select cast(sum(case when issued < 1998 then 1 else 0 end) as real) * 100 / count(*) from card where type = 'gold'\n\nIs the SQL semantically correct?"}
{"id": 218, "question": "How much did the KAM customers consume in total in May 2013?", "sql": "SELECT sum(yearmonth.consumption) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.segment = 'KAM' AND yearmonth.date = 201305", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much did the KAM customers consume in total in May 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(yearmonth.consumption) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.segment = 'KAM' AND yearmonth.date = 201305\n\nIs the SQL semantically correct?"}
{"id": 219, "question": "How many of the account holders in South Bohemia still do not own credit cards?", "sql": "SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'south Bohemia' AND client.client_id NOT IN ( SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'south Bohemia' )", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many of the account holders in South Bohemia still do not own credit cards?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'south Bohemia' AND client.client_id NOT IN ( SELECT client.client_id FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN card ON disp.disp_id = card.disp_id INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'south Bohemia' )\n\nIs the SQL semantically correct?"}
{"id": 220, "question": "What are the maximum points of British constructors?", "sql": "select avg(constructorresults.points) from constructors inner join constructorresults on constructors.constructorid = constructorresults.constructorid where constructors.nationality = 'British'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the maximum points of British constructors?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select avg(constructorresults.points) from constructors inner join constructorresults on constructors.constructorid = constructorresults.constructorid where constructors.nationality = 'British'\n\nIs the SQL semantically correct?"}
{"id": 221, "question": "Locate players with vision scores of 90 and above, state the country of these players.", "sql": "SELECT DISTINCT country.name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id INNER JOIN league ON league.country_id = player.id INNER JOIN country ON country.id = league.country_id WHERE player_attributes.vision > 89", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Locate players with vision scores of 90 and above, state the country of these players.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT DISTINCT country.name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id INNER JOIN league ON league.country_id = player.id INNER JOIN country ON country.id = league.country_id WHERE player_attributes.vision > 89\n\nIs the SQL semantically correct?"}
{"id": 222, "question": "What is card number 4 in the set Coldsnap?", "sql": "select cards.name from cards inner join sets on cards.id = sets.id where cards.number = 4 and sets.name = 'Coldsnap'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is card number 4 in the set Coldsnap?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name from cards inner join sets on cards.id = sets.id where cards.number = 4 and sets.name = 'Coldsnap'\n\nIs the SQL semantically correct?"}
{"id": 223, "question": "Give the texts commented on the post about linear regression.", "sql": "SELECT posthistory.text FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE posts.title = 'How can I adapt ANOVA for binary data?'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the texts commented on the post about linear regression.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT posthistory.text FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE posts.title = 'How can I adapt ANOVA for binary data?'\n\nIs the SQL semantically correct?"}
{"id": 224, "question": "For the driver who set the fastest lap speed in race No.933, where does he come from?", "sql": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 933 ORDER BY results.fastestlapspeed DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the driver who set the fastest lap speed in race No.933, where does he come from?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 933 ORDER BY results.fastestlapspeed DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 225, "question": "Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.", "sql": "SELECT schools.admfname1, schools.admfname2, schools.admfname3, schools.admlname1, schools.admlname2, schools.admlname3 FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.numge1500 = ( SELECT max(numge1500) FROM satscores )", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Under whose administration is the school with the highest number of students scoring 1500 or more on the SAT? Indicate their full names.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.admfname1, schools.admfname2, schools.admfname3, schools.admlname1, schools.admlname2, schools.admlname3 FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.numge1500 = ( SELECT max(numge1500) FROM satscores )\n\nIs the SQL semantically correct?"}
{"id": 226, "question": "Please list the chains of the gas stations with transactions in euro.", "sql": "select distinct gasstations.chainid from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where transactions_1k.transactionid = 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the chains of the gas stations with transactions in euro.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select distinct gasstations.chainid from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where transactions_1k.transactionid = 1\n\nIs the SQL semantically correct?"}
{"id": 227, "question": "What are the accounts that have gold credit cards?", "sql": "SELECT T2.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type IN ('gold', 'junior') GROUP BY T2.account_id HAVING COUNT(DISTINCT T1.type) > 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the accounts that have gold credit cards?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T2.account_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type IN ('gold', 'junior') GROUP BY T2.account_id HAVING COUNT(DISTINCT T1.type) > 1\n\nIs the SQL semantically correct?"}
{"id": 228, "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?", "sql": "select count(major_id) from major where college = 'College of Agriculture and Applied Sciences' and department = 'School of Applied Sciences , Technology and Education'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select count(major_id) from major where college = 'College of Agriculture and Applied Sciences' and department = 'School of Applied Sciences , Technology and Education'\n\nIs the SQL semantically correct?"}
{"id": 229, "question": "List the full name of the top five members who spend the most money in the descending order of spending.", "sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name ORDER BY SUM(T2.cost) DESC LIMIT 5", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the full name of the top five members who spend the most money in the descending order of spending.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name ORDER BY SUM(T2.cost) DESC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 230, "question": "What is the average overall rating of the players born before the year 1986?", "sql": "SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE strftime('%Y', T1.birthday) < '1986'", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average overall rating of the players born before the year 1986?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT AVG(T2.overall_rating) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE strftime('%Y', T1.birthday) < '1986'\n\nIs the SQL semantically correct?"}
{"id": 231, "question": "What are the elements of the toxicology and label of molecule TR060?", "sql": "SELECT DISTINCT molecule.label, atom.element FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR060'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the elements of the toxicology and label of molecule TR060?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT molecule.label, atom.element FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR060'\n\nIs the SQL semantically correct?"}
{"id": 232, "question": "How many French drivers who obtain the laptime less than 02:00.00?", "sql": "select count(distinct drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where laptimes.milliseconds < 120 and drivers.nationality = 'French'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many French drivers who obtain the laptime less than 02:00.00?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(distinct drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where laptimes.milliseconds < 120 and drivers.nationality = 'French'\n\nIs the SQL semantically correct?"}
{"id": 233, "question": "Give the hero ID of superhero with the lowest attribute value.", "sql": "select hero_attribute.hero_id from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id order by hero_attribute.attribute_value asc limit 1", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the hero ID of superhero with the lowest attribute value.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select hero_attribute.hero_id from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id order by hero_attribute.attribute_value asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 234, "question": "What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?", "sql": "select users.reputation , users.views from posts inner join users on posts.owneruserid = users.id where users.displayname = 'Jarrod Dixon'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the reputation and view count of the user, who is known by his or her display name 'Jarrod Dixon'?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.reputation , users.views from posts inner join users on posts.owneruserid = users.id where users.displayname = 'Jarrod Dixon'\n\nIs the SQL semantically correct?"}
{"id": 236, "question": "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?", "sql": "SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50 AND laboratory.tg > 200", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50 AND laboratory.tg > 200\n\nIs the SQL semantically correct?"}
{"id": 237, "question": "List circuits which host 4 f1 races from year 1990 to 2000.", "sql": "SELECT DISTINCT circuits.name FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year BETWEEN 1990 AND 2000", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List circuits which host 4 f1 races from year 1990 to 2000.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT DISTINCT circuits.name FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year BETWEEN 1990 AND 2000\n\nIs the SQL semantically correct?"}
{"id": 238, "question": "How many high-level credit cards have \"OWNER\" type of disposition?", "sql": "select count(card.card_id) from card inner join disp on card.disp_id = disp.disp_id where card.type = 'gold' and disp.type = 'DISPONENT'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many high-level credit cards have \"OWNER\" type of disposition?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(card.card_id) from card inner join disp on card.disp_id = disp.disp_id where card.type = 'gold' and disp.type = 'DISPONENT'\n\nIs the SQL semantically correct?"}
{"id": 239, "question": "What percentage of carcinogenic-type molecules does not contain fluorine?", "sql": "SELECT cast(sum(CASE WHEN molecule.label = '+' AND atom.element != 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of carcinogenic-type molecules does not contain fluorine?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT cast(sum(CASE WHEN molecule.label = '+' AND atom.element != 'f' THEN 1 ELSE 0 END) AS REAL) * 100 / count(molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id\n\nIs the SQL semantically correct?"}
{"id": 240, "question": "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.", "sql": "SELECT T1.uuid, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T1.uuid, T2.text, T1.hasContentWarning FROM cards AS T1 INNER JOIN rulings AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Stephen Daniele'\n\nIs the SQL semantically correct?"}
{"id": 241, "question": "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?", "sql": "SELECT count(schools.cdscode) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.charter = 1 AND satscores.avgscrmath > 560", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT count(schools.cdscode) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.charter = 1 AND satscores.avgscrmath > 560\n\nIs the SQL semantically correct?"}
{"id": 242, "question": "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?", "sql": "select sum(iif(customers.currency = 'CZK' , yearmonth.consumption , 0)) - sum(iif(customers.currency = 'EUR' , yearmonth.consumption , 0)) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date between '2012-01-01' and '2012-12-31'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select sum(iif(customers.currency = 'CZK' , yearmonth.consumption , 0)) - sum(iif(customers.currency = 'EUR' , yearmonth.consumption , 0)) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date between '2012-01-01' and '2012-12-31'\n\nIs the SQL semantically correct?"}
{"id": 243, "question": "Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".", "sql": "select purchaseurls from cards where promotypes = 'bundle'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the websites where I can purchase the cards that have the promotional type of \"bundle\".\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select purchaseurls from cards where promotypes = 'bundle'\n\nIs the SQL semantically correct?"}
{"id": 244, "question": "Which user has the website URL listed at 'http://stackoverflow.com'", "sql": "select displayname from users where websiteurl = 'http://stackoverflow.com/u/1114'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user has the website URL listed at 'http://stackoverflow.com'\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select displayname from users where websiteurl = 'http://stackoverflow.com/u/1114'\n\nIs the SQL semantically correct?"}
{"id": 246, "question": "How many clients opened their accounts in Jesenik branch were women?", "sql": "select count(client.gender) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where district.a2 = 'Jesenik' and client.gender = 'F'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many clients opened their accounts in Jesenik branch were women?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(client.gender) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where district.a2 = 'Jesenik' and client.gender = 'F'\n\nIs the SQL semantically correct?"}
{"id": 247, "question": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?", "sql": "SELECT (SUM(CASE WHEN STRFTIME('%Y', T3.date) = '1997' THEN T3.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T3.date) = '1996' THEN T3.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN STRFTIME('%Y', T3.date) = '1996' THEN T3.amount ELSE 0 END) AS growth_rate FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT (SUM(CASE WHEN STRFTIME('%Y', T3.date) = '1997' THEN T3.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T3.date) = '1996' THEN T3.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN STRFTIME('%Y', T3.date) = '1996' THEN T3.amount ELSE 0 END) AS growth_rate FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'M'\n\nIs the SQL semantically correct?"}
{"id": 248, "question": "What is the total amount of Community College District closure in 1989 in the city of San Francisco?", "sql": "select count(schools.cdscode) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.city = 'San Francisco' and strftime('%Y' , schools.closeddate) = '1989' and schools.doctype = 'Community College District'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total amount of Community College District closure in 1989 in the city of San Francisco?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select count(schools.cdscode) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.city = 'San Francisco' and strftime('%Y' , schools.closeddate) = '1989' and schools.doctype = 'Community College District'\n\nIs the SQL semantically correct?"}
{"id": 249, "question": "What percentage of players have a strength and stamina score of more than 80?", "sql": "SELECT CAST(SUM(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM Player_Attributes WHERE strength IS NOT NULL AND stamina IS NOT NULL", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of players have a strength and stamina score of more than 80?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT CAST(SUM(CASE WHEN strength > 80 AND stamina > 80 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(id) FROM Player_Attributes WHERE strength IS NOT NULL AND stamina IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 250, "question": "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?", "sql": "SELECT count(schools.school) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.mailcity = 'Lakeport' AND satscores.avgscrread + satscores.avgscrmath + satscores.avgscrwrite >= 1500", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT count(schools.school) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.mailcity = 'Lakeport' AND satscores.avgscrread + satscores.avgscrmath + satscores.avgscrwrite >= 1500\n\nIs the SQL semantically correct?"}
{"id": 251, "question": "What is the least common element of all carcinogenic molecules?", "sql": "select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+' group by atom.element order by count(atom.element) asc limit 1", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the least common element of all carcinogenic molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+' group by atom.element order by count(atom.element) asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 252, "question": "Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.", "sql": "SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 161 AND T1.time = '0:01:27'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the player that got the lap time of 0:01:27 in the race No. 161? Show his introduction website.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.url FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 161 AND T1.time = '0:01:27'\n\nIs the SQL semantically correct?"}
{"id": 253, "question": "What are the toxicology elements associated with bond ID TR000_1_2?", "sql": "SELECT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_id = 'TR005_16_26'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the toxicology elements associated with bond ID TR000_1_2?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_id = 'TR005_16_26'\n\nIs the SQL semantically correct?"}
{"id": 254, "question": "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?", "sql": "SELECT customers.currency FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE substr(yearmonth.date, 1, 6) = '201306' AND yearmonth.consumption = 214582.17", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT customers.currency FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE substr(yearmonth.date, 1, 6) = '201306' AND yearmonth.consumption = 214582.17\n\nIs the SQL semantically correct?"}
{"id": 255, "question": "Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.", "sql": "SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.sex = 'M' AND laboratory.gpt >= 60", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide IDs for male patients with ALT glutamic pylvic transaminase (GPT) that have history of ALT glutamic pylvic transaminase (GPT) exceed the normal range.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.sex = 'M' AND laboratory.gpt >= 60\n\nIs the SQL semantically correct?"}
{"id": 256, "question": "Please list the full names of the students in the Student_Club that come from the Art and Design Department.", "sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the full names of the students in the Student_Club that come from the Art and Design Department.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T2.department = 'Art and Design'\n\nIs the SQL semantically correct?"}
{"id": 257, "question": "What elements are in a double type bond?", "sql": "select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id where bond.bond_type = '= '", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What elements are in a double type bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id where bond.bond_type = '= '\n\nIs the SQL semantically correct?"}
{"id": 258, "question": "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?", "sql": "select transactions_1k.amount , yearmonth.date , yearmonth.consumption from transactions_1k inner join yearmonth on transactions_1k.customerid = yearmonth.customerid where transactions_1k.date like '2012-01-01%'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select transactions_1k.amount , yearmonth.date , yearmonth.consumption from transactions_1k inner join yearmonth on transactions_1k.customerid = yearmonth.customerid where transactions_1k.date like '2012-01-01%'\n\nIs the SQL semantically correct?"}
{"id": 259, "question": "Calculate the total average cost that Elijah Allen spent in the events on September and October.", "sql": "select sum(expense.cost) / count(expense.expense_id) from member inner join expense on member.member_id = expense.link_to_member where member.first_name = 'Elijah' and member.last_name = 'Allen' and strftime('%Y' , expense.expense_date) = '9' and strftime('%m' , expense.expense_date) = '10'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the total average cost that Elijah Allen spent in the events on September and October.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select sum(expense.cost) / count(expense.expense_id) from member inner join expense on member.member_id = expense.link_to_member where member.first_name = 'Elijah' and member.last_name = 'Allen' and strftime('%Y' , expense.expense_date) = '9' and strftime('%m' , expense.expense_date) = '10'\n\nIs the SQL semantically correct?"}
{"id": 260, "question": "What is the lap record set by Lewis Hamilton in a Formula_1 race?", "sql": "SELECT MIN(T2.milliseconds) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the lap record set by Lewis Hamilton in a Formula_1 race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT MIN(T2.milliseconds) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 261, "question": "What is the difference between players 6 and 23's jumping scores?", "sql": "select sum(case when player_attributes.jumping = 6 then 1 else 0 end) - sum(case when player_attributes.jumping = 23 then 1 else 0 end) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference between players 6 and 23's jumping scores?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select sum(case when player_attributes.jumping = 6 then 1 else 0 end) - sum(case when player_attributes.jumping = 23 then 1 else 0 end) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id\n\nIs the SQL semantically correct?"}
{"id": 262, "question": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.", "sql": "SELECT County, COUNT(CDSCode) FROM schools WHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara') GROUP BY County ORDER BY COUNT(CDSCode) DESC LIMIT 1", "db_id": "california_schools", "label": true, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT County, COUNT(CDSCode) FROM schools WHERE Virtual = 'F' AND (County = 'San Diego' OR County = 'Santa Barbara') GROUP BY County ORDER BY COUNT(CDSCode) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 263, "question": "Please list the event names of all the events attended by Maya Mclean.", "sql": "SELECT T3.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN zip_code AS T4 ON T1.zip = T4.zip_code WHERE T1.first_name = 'Maya' AND T4.city = 'Mclean'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the event names of all the events attended by Maya Mclean.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T3.event_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member INNER JOIN event AS T3 ON T2.link_to_event = T3.event_id INNER JOIN zip_code AS T4 ON T1.zip = T4.zip_code WHERE T1.first_name = 'Maya' AND T4.city = 'Mclean'\n\nIs the SQL semantically correct?"}
{"id": 264, "question": "How many rare enchantment Abundance cards are there whose play format status are all legal?", "sql": "SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Abundance' AND T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.uuid NOT IN (SELECT T3.uuid FROM legalities AS T3 WHERE T3.status != 'Legal')", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many rare enchantment Abundance cards are there whose play format status are all legal?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(DISTINCT T1.id) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Abundance' AND T1.rarity = 'rare' AND T1.types = 'Enchantment' AND T1.uuid NOT IN (SELECT T3.uuid FROM legalities AS T3 WHERE T3.status != 'Legal')\n\nIs the SQL semantically correct?"}
{"id": 265, "question": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?", "sql": "SELECT SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS DIFF, CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS PERCENTAGE FROM Patient WHERE SEX = 'M'", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Are there more in-patient or outpatient who were male? What is the deviation in percentage?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS DIFF, CAST(SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) - SUM(CASE WHEN Admission = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / SUM(CASE WHEN Admission = '+' THEN 1 ELSE 0 END) AS PERCENTAGE FROM Patient WHERE SEX = 'M'\n\nIs the SQL semantically correct?"}
{"id": 266, "question": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.", "sql": "SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T2.label = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.molecule_id) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'h'\n\nIs the SQL semantically correct?"}
{"id": 268, "question": "How many carcinogenic molecules that consisted of Nitrogen?", "sql": "select count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'n' and molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many carcinogenic molecules that consisted of Nitrogen?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'n' and molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 269, "question": "List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?", "sql": "select member.first_name , member.last_name , expense.cost from member inner join expense on member.member_id = expense.link_to_member where member.member_id = 'rec4BLdZHS2Blfp4v'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the full name and total cost that member id \"rec4BLdZHS2Blfp4v\" incurred?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name , expense.cost from member inner join expense on member.member_id = expense.link_to_member where member.member_id = 'rec4BLdZHS2Blfp4v'\n\nIs the SQL semantically correct?"}
{"id": 270, "question": "What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?", "sql": "select avg(satscores.numtsttakr) from schools inner join satscores on schools.cdscode = satscores.cds where schools.opendate between '1980-01-01' and '1980-12-31'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average number of test takers from Fresno schools that opened between 1/1/1980 and 12/31/1980?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select avg(satscores.numtsttakr) from schools inner join satscores on schools.cdscode = satscores.cds where schools.opendate between '1980-01-01' and '1980-12-31'\n\nIs the SQL semantically correct?"}
{"id": 271, "question": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.", "sql": "SELECT count(DISTINCT schools.city) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.gsserved = 'K-8' AND schools.magnet = 1 AND frpm.`nslp provision status` = 'Multiple Provision Types'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT count(DISTINCT schools.city) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.gsserved = 'K-8' AND schools.magnet = 1 AND frpm.`nslp provision status` = 'Multiple Provision Types'\n\nIs the SQL semantically correct?"}
{"id": 272, "question": "In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?", "sql": "select races.name from races inner join circuits on races.circuitid = circuits.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.name = 'Austrian Grand Prix' order by laptimes.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.name from races inner join circuits on races.circuitid = circuits.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.name = 'Austrian Grand Prix' order by laptimes.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 273, "question": "For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?", "sql": "SELECT trans.amount FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN trans ON account.account_id = trans.account_id INNER JOIN loan ON account.account_id = loan.account_id ORDER BY loan.amount DESC LIMIT 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client who applied the biggest loan, what was his/her first amount of transaction after opened the account?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT trans.amount FROM client INNER JOIN disp ON client.client_id = disp.client_id INNER JOIN account ON disp.account_id = account.account_id INNER JOIN trans ON account.account_id = trans.account_id INNER JOIN loan ON account.account_id = loan.account_id ORDER BY loan.amount DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 274, "question": "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.", "sql": "SELECT DISTINCT CASE WHEN sum(transactions_1k.price / transactions_1k.amount) > 29 THEN 'high' ELSE 'low' END FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.`date` = yearmonth.`date` WHERE transactions_1k.productid = 5", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT CASE WHEN sum(transactions_1k.price / transactions_1k.amount) > 29 THEN 'high' ELSE 'low' END FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.`date` = yearmonth.`date` WHERE transactions_1k.productid = 5\n\nIs the SQL semantically correct?"}
{"id": 275, "question": "Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?", "sql": "select distinct patient.sex from patient inner join laboratory on patient.id = laboratory.id where laboratory.date = '1992-06-12' and laboratory.gpt = 9 and patient.sex = 'M'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Was the patient a man or a women whose ALT glutamic pylvic transaminase status got 9 on 1992-6-12?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.sex from patient inner join laboratory on patient.id = laboratory.id where laboratory.date = '1992-06-12' and laboratory.gpt = 9 and patient.sex = 'M'\n\nIs the SQL semantically correct?"}
{"id": 276, "question": "Which student has been entrusted to manage the budget for the Yearly Kickoff?", "sql": "select member.first_name , member.last_name from member inner join budget on member.member_id = budget.link_to_event inner join event on event.event_id = budget.link_to_event where event.event_name = 'Yearly Kickoff'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which student has been entrusted to manage the budget for the Yearly Kickoff?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name from member inner join budget on member.member_id = budget.link_to_event inner join event on event.event_id = budget.link_to_event where event.event_name = 'Yearly Kickoff'\n\nIs the SQL semantically correct?"}
{"id": 277, "question": "How many players were born after 1990?", "sql": "select count(id) from player where strftime('%Y' , birthday) = '1990'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many players were born after 1990?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select count(id) from player where strftime('%Y' , birthday) = '1990'\n\nIs the SQL semantically correct?"}
{"id": 278, "question": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.", "sql": "SELECT cast(sum(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / count(atom.element), molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR006'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT cast(sum(CASE WHEN atom.element = 'h' THEN 1 ELSE 0 END) AS REAL) * 100 / count(atom.element), molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.molecule_id = 'TR006'\n\nIs the SQL semantically correct?"}
{"id": 279, "question": "How many races in the year 2010 are held on grand prixs outside Asia and Europe?", "sql": "select count(races.raceid) from circuits inner join races on circuits.circuitid = races.circuitid where races.year = 2010 and circuits.country != 'Asia' or circuits.country != 'Europe'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many races in the year 2010 are held on grand prixs outside Asia and Europe?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(races.raceid) from circuits inner join races on circuits.circuitid = races.circuitid where races.year = 2010 and circuits.country != 'Asia' or circuits.country != 'Europe'\n\nIs the SQL semantically correct?"}
{"id": 280, "question": "How many molecules have a triple bond type?", "sql": "select count(molecule_id) from bond where bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules have a triple bond type?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule_id) from bond where bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 281, "question": "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?", "sql": "select distinct set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Korean'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Korean'\n\nIs the SQL semantically correct?"}
{"id": 282, "question": "For the patients with an abnormal activated partial prothrom bin time, how many of them does not have thrombosis?", "sql": "select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on patient.id = laboratory.id where examination.thrombosis = 3 and laboratory.aptt > 45", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients with an abnormal activated partial prothrom bin time, how many of them does not have thrombosis?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on patient.id = laboratory.id where examination.thrombosis = 3 and laboratory.aptt > 45\n\nIs the SQL semantically correct?"}
{"id": 283, "question": "Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?", "sql": "select artist from cards where side is null order by faceconvertedmanacost desc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the cards that doesn't have multiple faces on the same card, who is the illustrator of the card art that has the highest cost of converted mana?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select artist from cards where side is null order by faceconvertedmanacost desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 284, "question": "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?", "sql": "SELECT manacost FROM cards WHERE name = 'Ancestor`s Chosen'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the unconverted mana cost of the card \"Ancestor's Chosen\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT manacost FROM cards WHERE name = 'Ancestor`s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 286, "question": "How many users from New York have a teacher and supporter badge?", "sql": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'New York' AND T2.Name IN ('Supporter', 'Teacher') GROUP BY T1.Id HAVING COUNT(DISTINCT T2.Name) = 2", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many users from New York have a teacher and supporter badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Location = 'New York' AND T2.Name IN ('Supporter', 'Teacher') GROUP BY T1.Id HAVING COUNT(DISTINCT T2.Name) = 2\n\nIs the SQL semantically correct?"}
{"id": 287, "question": "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.", "sql": "select circuits.url from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2009 and races.name = 'Spanish Grand Prix'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select circuits.url from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2009 and races.name = 'Spanish Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 288, "question": "What is the percentage of incredibly powerful cards in the set Coldsnap?", "sql": "SELECT CAST(SUM(CASE WHEN T2.cardKingdomFoilId = T2.cardKingdomId AND T2.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Coldsnap'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of incredibly powerful cards in the set Coldsnap?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT CAST(SUM(CASE WHEN T2.cardKingdomFoilId = T2.cardKingdomId AND T2.cardKingdomId IS NOT NULL THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS percentage FROM sets AS T1 INNER JOIN cards AS T2 ON T1.code = T2.setCode WHERE T1.name = 'Coldsnap'\n\nIs the SQL semantically correct?"}
{"id": 289, "question": "How many patients with an Ig G higher than normal?", "sql": "select count(distinct examination.id) from examination inner join laboratory on examination.id = laboratory.id where examination.symptoms = 'abortion' and laboratory.igg < 900", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients with an Ig G higher than normal?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct examination.id) from examination inner join laboratory on examination.id = laboratory.id where examination.symptoms = 'abortion' and laboratory.igg < 900\n\nIs the SQL semantically correct?"}
{"id": 290, "question": "State the name of players who came from Belgium.", "sql": "SELECT DISTINCT T2.player_name FROM Player AS T2 JOIN Match AS T1 ON T2.player_api_id IN (T1.home_player_1, T1.home_player_2, T1.home_player_3, T1.home_player_4, T1.home_player_5, T1.home_player_6, T1.home_player_7, T1.home_player_8, T1.home_player_9, T1.home_player_10, T1.home_player_11, T1.away_player_1, T1.away_player_2, T1.away_player_3, T1.away_player_4, T1.away_player_5, T1.away_player_6, T1.away_player_7, T1.away_player_8, T1.away_player_9, T1.away_player_10, T1.away_player_11) JOIN Country AS T3 ON T1.country_id = T3.id WHERE T3.name = 'Belgium'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the name of players who came from Belgium.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT DISTINCT T2.player_name FROM Player AS T2 JOIN Match AS T1 ON T2.player_api_id IN (T1.home_player_1, T1.home_player_2, T1.home_player_3, T1.home_player_4, T1.home_player_5, T1.home_player_6, T1.home_player_7, T1.home_player_8, T1.home_player_9, T1.home_player_10, T1.home_player_11, T1.away_player_1, T1.away_player_2, T1.away_player_3, T1.away_player_4, T1.away_player_5, T1.away_player_6, T1.away_player_7, T1.away_player_8, T1.away_player_9, T1.away_player_10, T1.away_player_11) JOIN Country AS T3 ON T1.country_id = T3.id WHERE T3.name = 'Belgium'\n\nIs the SQL semantically correct?"}
{"id": 291, "question": "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?", "sql": "SELECT set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT set_translations.translation FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE sets.name = 'Eighth Edition' AND set_translations.language = 'Chinese Simplified'\n\nIs the SQL semantically correct?"}
{"id": 292, "question": "Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex?", "sql": "select count(cards.id) from cards inner join set_translations on cards.id = set_translations.id where set_translations.translation = 'Hauptset Zehnte Edition' and cards.artist = 'Adam Rex'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the cards in the set \"Hauptset Zehnte Edition\", how many of them are designed by Adam Rex?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.id) from cards inner join set_translations on cards.id = set_translations.id where set_translations.translation = 'Hauptset Zehnte Edition' and cards.artist = 'Adam Rex'\n\nIs the SQL semantically correct?"}
{"id": 293, "question": "Among all the posts posted by the most influential user, identify the percentage with a score above 50.", "sql": "select cast(sum(case when posts.score >= 50 then 1 else 0 end) as real) * 100 / count(posts.id) from posts inner join comments on posts.id = comments.postid inner join users on users.id = comments.userid where users.reputation = ( select max(reputation) from users )", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among all the posts posted by the most influential user, identify the percentage with a score above 50.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select cast(sum(case when posts.score >= 50 then 1 else 0 end) as real) * 100 / count(posts.id) from posts inner join comments on posts.id = comments.postid inner join users on users.id = comments.userid where users.reputation = ( select max(reputation) from users )\n\nIs the SQL semantically correct?"}
{"id": 294, "question": "Which client ID consumed the most in September 2013?", "sql": "select customerid from yearmonth where consumption = ( select max(consumption) from yearmonth where strftime('%Y-%m' , date) = '2013-09' )", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which client ID consumed the most in September 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customerid from yearmonth where consumption = ( select max(consumption) from yearmonth where strftime('%Y-%m' , date) = '2013-09' )\n\nIs the SQL semantically correct?"}
{"id": 295, "question": "What is the percentage of female patient were born after 1930?", "sql": "SELECT CAST(SUM(CASE WHEN strftime('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F'", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of female patient were born after 1930?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT CAST(SUM(CASE WHEN strftime('%Y', Birthday) > '1930' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(ID) FROM Patient WHERE SEX = 'F'\n\nIs the SQL semantically correct?"}
{"id": 296, "question": "What department offers the major that Pierce and Guidi took?", "sql": "SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name = 'Pierce' OR T1.last_name = 'Guidi'", "db_id": "student_club", "label": true, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What department offers the major that Pierce and Guidi took?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T2.department FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.last_name = 'Pierce' OR T1.last_name = 'Guidi'\n\nIs the SQL semantically correct?"}
{"id": 297, "question": "What was the longest time that Lewis Hamilton had spent at a pit stop?", "sql": "select max(pitstops.duration) from drivers inner join pitstops on drivers.driverid = pitstops.driverid where drivers.driverref = 'Lewis'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the longest time that Lewis Hamilton had spent at a pit stop?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select max(pitstops.duration) from drivers inner join pitstops on drivers.driverid = pitstops.driverid where drivers.driverref = 'Lewis'\n\nIs the SQL semantically correct?"}
{"id": 298, "question": "How many of the molecules are not carcinogenic?", "sql": "SELECT count(molecule_id) FROM molecule WHERE label = '-'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many of the molecules are not carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(molecule_id) FROM molecule WHERE label = '-'\n\nIs the SQL semantically correct?"}
{"id": 299, "question": "What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 0613360?", "sql": "SELECT GSserved FROM schools WHERE EdOpsCode = 'SPECON' AND NCESDist = '613360'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the lowest grade for the District Special Education Consortia School with National Center for Educational Statistics school district identification number of 0613360?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT GSserved FROM schools WHERE EdOpsCode = 'SPECON' AND NCESDist = '613360'\n\nIs the SQL semantically correct?"}
{"id": 300, "question": "State the race and year of race in which Michael Schumacher had his fastest lap.", "sql": "SELECT races.name, races.year FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY results.milliseconds LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the race and year of race in which Michael Schumacher had his fastest lap.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT races.name, races.year FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Michael' AND drivers.surname = 'Schumacher' ORDER BY results.milliseconds LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 301, "question": "How much is the average build up play speed of the Heart of Midlothian team?", "sql": "SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Heart of Midlothian'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much is the average build up play speed of the Heart of Midlothian team?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT AVG(T2.buildUpPlaySpeed) FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_fifa_api_id = T2.team_fifa_api_id WHERE T1.team_long_name = 'Heart of Midlothian'\n\nIs the SQL semantically correct?"}
{"id": 302, "question": "What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?", "sql": "SELECT cast(sum(CASE WHEN patient.admission = '-' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN patient.admission = '+' THEN 1 ELSE 0 END) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.diagnosis = 'SLE'", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of outpatient to inpatient followed up treatment among all the 'SLE' diagnosed patient?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(CASE WHEN patient.admission = '-' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN patient.admission = '+' THEN 1 ELSE 0 END) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.diagnosis = 'SLE'\n\nIs the SQL semantically correct?"}
{"id": 303, "question": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.", "sql": "SELECT county, sum(CASE WHEN virtual = 'N' THEN 1 ELSE 0 END) AS cnt FROM schools WHERE county IN ('San Diego', 'Santa Barbara') GROUP BY county ORDER BY cnt DESC LIMIT 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT county, sum(CASE WHEN virtual = 'N' THEN 1 ELSE 0 END) AS cnt FROM schools WHERE county IN ('San Diego', 'Santa Barbara') GROUP BY county ORDER BY cnt DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 304, "question": "What is the biggest monthly consumption of the customers who use euro as their currency?", "sql": "SELECT sum(yearmonth.consumption) / 12 FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'EUR'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the biggest monthly consumption of the customers who use euro as their currency?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(yearmonth.consumption) / 12 FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'EUR'\n\nIs the SQL semantically correct?"}
{"id": 305, "question": "How many users are awarded with more than 5 badges?", "sql": "SELECT count(DISTINCT userid) FROM badges WHERE name > 5", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many users are awarded with more than 5 badges?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(DISTINCT userid) FROM badges WHERE name > 5\n\nIs the SQL semantically correct?"}
{"id": 306, "question": "State the race and year of race in which Michael Schumacher had his fastest lap.", "sql": "select distinct races.name , races.year from results inner join races on results.raceid = races.raceid inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.driverid = laptimes.driverid where drivers.surname = 'Schumacher' and drivers.forename = 'Michael' and results.fastestlap = laptimes.milliseconds", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the race and year of race in which Michael Schumacher had his fastest lap.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.name , races.year from results inner join races on results.raceid = races.raceid inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.driverid = laptimes.driverid where drivers.surname = 'Schumacher' and drivers.forename = 'Michael' and results.fastestlap = laptimes.milliseconds\n\nIs the SQL semantically correct?"}
{"id": 307, "question": "Which football player has the shortest height?", "sql": "select player_name from player order by height asc limit 1", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which football player has the shortest height?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player_name from player order by height asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 308, "question": "How many card border with black color ? List out the card id.", "sql": "select count(id) from cards where bordercolor = 'black'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many card border with black color ? List out the card id.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(id) from cards where bordercolor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 309, "question": "How many players whose first names are Adam and weigh more than 170?", "sql": "select count(player.player_name) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id inner join team on team_attributes.team_fifa_api_id = team.team_fifa_api_id inner join team_attributes on team.team_api_id = team_attributes.team_fifa_api_id where team.team_long_name = 'Adam' and player.weight > 170", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many players whose first names are Adam and weigh more than 170?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select count(player.player_name) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id inner join team on team_attributes.team_fifa_api_id = team.team_fifa_api_id inner join team_attributes on team.team_api_id = team_attributes.team_fifa_api_id where team.team_long_name = 'Adam' and player.weight > 170\n\nIs the SQL semantically correct?"}
{"id": 310, "question": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?", "sql": "select count(atom.atom_id) from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on atom.atom_id = connected.atom_id where bond.bond_type = '-' and atom.element = 'i' or atom.element = 's'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many atoms with iodine and with sulfur type elements are there in single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(atom.atom_id) from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on atom.atom_id = connected.atom_id where bond.bond_type = '-' and atom.element = 'i' or atom.element = 's'\n\nIs the SQL semantically correct?"}
{"id": 311, "question": "Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.", "sql": "SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.position = 2 AND STRFTIME('%Y', T1.dob) > '1975'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.forename, T1.surname FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.position = 2 AND STRFTIME('%Y', T1.dob) > '1975'\n\nIs the SQL semantically correct?"}
{"id": 312, "question": "What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?", "sql": "select trans.amount from trans inner join disp on trans.account_id = disp.account_id inner join card on disp.disp_id = card.disp_id inner join client on client.client_id = disp.client_id where client.birth_date = '1996-10-21' order by trans.amount desc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the biggest amount of transaction that the client whose card was opened in 1996/10/21 made?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select trans.amount from trans inner join disp on trans.account_id = disp.account_id inner join card on disp.disp_id = card.disp_id inner join client on client.client_id = disp.client_id where client.birth_date = '1996-10-21' order by trans.amount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 313, "question": "What was the build up play speed class for \"Willem II\" on 2011/2/22?", "sql": "select team_attributes.buildupplayspeedclass from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team.team_long_name = 'Willem II' and team_attributes.date = '2012-02-22 00:00:00'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the build up play speed class for \"Willem II\" on 2011/2/22?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team_attributes.buildupplayspeedclass from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team.team_long_name = 'Willem II' and team_attributes.date = '2012-02-22 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 314, "question": "What is the average score of Lewis Hamilton among all the Turkish Grand Prix?", "sql": "SELECT AVG(T3.points) FROM races AS T1 INNER JOIN results AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId WHERE T1.name = 'Turkish Grand Prix' AND T2.forename = 'Lewis' AND T2.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score of Lewis Hamilton among all the Turkish Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT AVG(T3.points) FROM races AS T1 INNER JOIN results AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId WHERE T1.name = 'Turkish Grand Prix' AND T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 315, "question": "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.", "sql": "select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.rbc < 3.5 and laboratory.rbc >= 6.0 and patient.admission = '-'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.rbc < 3.5 and laboratory.rbc >= 6.0 and patient.admission = '-'\n\nIs the SQL semantically correct?"}
{"id": 316, "question": "Provide superheroes' names who have the adaptation power.", "sql": "SELECT superhero.full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation'", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide superheroes' names who have the adaptation power.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superhero.full_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Adaptation'\n\nIs the SQL semantically correct?"}
{"id": 317, "question": "How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?", "sql": "SELECT count(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id INNER JOIN examination ON patient.id = examination.id WHERE laboratory.ra = '+' AND examination.kct = '+'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients with a normal Rhuematoid Factor has a positive measure of degree of coagulation?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id INNER JOIN examination ON patient.id = examination.id WHERE laboratory.ra = '+' AND examination.kct = '+'\n\nIs the SQL semantically correct?"}
{"id": 318, "question": "How many double bonds does TR006 have and is it carcinogenic?", "sql": "select count(molecule.molecule_id) , molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' and molecule.molecule_id = 'TR006'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many double bonds does TR006 have and is it carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) , molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' and molecule.molecule_id = 'TR006'\n\nIs the SQL semantically correct?"}
{"id": 319, "question": "Which player has the highest overall rating? Indicate the player's api id.", "sql": "SELECT player_api_id FROM Player_Attributes WHERE overall_rating IS NOT NULL ORDER BY overall_rating DESC LIMIT 1", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which player has the highest overall rating? Indicate the player's api id.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_api_id FROM Player_Attributes WHERE overall_rating IS NOT NULL ORDER BY overall_rating DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 320, "question": "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?", "sql": "SELECT CAST(SUM(CASE WHEN FundingType = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(FundingType) FROM schools WHERE County = 'Santa Clara'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT CAST(SUM(CASE WHEN FundingType = 'Locally funded' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(FundingType) FROM schools WHERE County = 'Santa Clara'\n\nIs the SQL semantically correct?"}
{"id": 321, "question": "What is the unabbreviated mailing street address of the school with the highest FRPM count for K-12 students?", "sql": "SELECT T2.MailStreet FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1", "db_id": "california_schools", "label": true, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the unabbreviated mailing street address of the school with the highest FRPM count for K-12 students?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.MailStreet FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode ORDER BY T1.`FRPM Count (K-12)` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 322, "question": "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?", "sql": "select strftime('%Y' , patient.birthday) - strftime('%Y' , laboratory.date) as age from patient inner join laboratory on patient.id = laboratory.id where laboratory.date = '1991-10-21' and laboratory.ua = 8.4", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select strftime('%Y' , patient.birthday) - strftime('%Y' , laboratory.date) as age from patient inner join laboratory on patient.id = laboratory.id where laboratory.date = '1991-10-21' and laboratory.ua = 8.4\n\nIs the SQL semantically correct?"}
{"id": 323, "question": "How many adults who obtained the badge Supporter?", "sql": "select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and users.age between 19 and 65", "db_id": "codebase_community", "label": true, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many adults who obtained the badge Supporter?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and users.age between 19 and 65\n\nIs the SQL semantically correct?"}
{"id": 324, "question": "For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time?", "sql": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND T2.APTT < 45", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the examinations done after 1997/1/1, how many of them have the result of an inactivated partial prothrom bin time?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` > '1997-01-01' AND T2.APTT < 45\n\nIs the SQL semantically correct?"}
{"id": 325, "question": "Which was Lewis Hamilton first race? What was his points recorded for his first race event?", "sql": "SELECT races.year, driverstandings.points FROM races INNER JOIN driverstandings ON races.raceid = driverstandings.raceid INNER JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY races.year LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was Lewis Hamilton first race? What was his points recorded for his first race event?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT races.year, driverstandings.points FROM races INNER JOIN driverstandings ON races.raceid = driverstandings.raceid INNER JOIN drivers ON driverstandings.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY races.year LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 326, "question": "Rank schools by their average score in Writing where the score is greater than 499, showing their charter numbers.", "sql": "SELECT T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = 499", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Rank schools by their average score in Writing where the score is greater than 499, showing their charter numbers.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.CharterNum FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrWrite = 499\n\nIs the SQL semantically correct?"}
{"id": 327, "question": "Please list all the superpowers of 3-D Man.", "sql": "SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list all the superpowers of 3-D Man.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superpower.power_name FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superhero.superhero_name = '3-D Man'\n\nIs the SQL semantically correct?"}
{"id": 328, "question": "What is the number of committed crimes in 1995 in the district of the account with the id 532?", "sql": "SELECT T1.A15 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.account_id = 532", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the number of committed crimes in 1995 in the district of the account with the id 532?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.A15 FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T2.account_id = 532\n\nIs the SQL semantically correct?"}
{"id": 329, "question": "Among the sets in the block \"Ice Age\", how many of them have an Italian translation?", "sql": "select count(sets.name) from sets inner join set_translations on sets.code = set_translations.setcode where sets.block = 'Ice Age' and set_translations.language = 'Italian'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the sets in the block \"Ice Age\", how many of them have an Italian translation?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(sets.name) from sets inner join set_translations on sets.code = set_translations.setcode where sets.block = 'Ice Age' and set_translations.language = 'Italian'\n\nIs the SQL semantically correct?"}
{"id": 330, "question": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.", "sql": "select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_fifa_api_id where player.height > 180 group by player.player_name order by cast(sum(player_attributes.heading_accuracy) as real) / count(player_attributes.player_api_id) desc limit 10", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_fifa_api_id where player.height > 180 group by player.player_name order by cast(sum(player_attributes.heading_accuracy) as real) / count(player_attributes.player_api_id) desc limit 10\n\nIs the SQL semantically correct?"}
{"id": 331, "question": "What are the bond type and the atoms of the bond ID of TR001_6_9?", "sql": "select bond.bond_type , connected.atom_id2 , bond.molecule_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_id = 'TR001_6_9'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the bond type and the atoms of the bond ID of TR001_6_9?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_type , connected.atom_id2 , bond.molecule_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_id = 'TR001_6_9'\n\nIs the SQL semantically correct?"}
{"id": 332, "question": "On average how many carcinogenic molecules are single bonded?", "sql": "select cast(sum(case when bond.bond_type = '-' then 1 else 0 end) as real) / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id inner join connected on bond.bond_id = connected.bond_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: On average how many carcinogenic molecules are single bonded?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when bond.bond_type = '-' then 1 else 0 end) as real) / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id inner join connected on bond.bond_id = connected.bond_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 333, "question": "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?", "sql": "select races.circuitid from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on laptimes.raceid = races.raceid where drivers.driverref = 'Lewis' and results.fastestlaptime = 0.0 order by results.time asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.circuitid from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on laptimes.raceid = races.raceid where drivers.driverref = 'Lewis' and results.fastestlaptime = 0.0 order by results.time asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 334, "question": "How many drivers from the UN participated in the 2008 Australian Grand Prix?", "sql": "select count(drivers.driverid) from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid inner join driverstandings on drivers.driverid = driverstandings.driverid where races.name = 'Australian Grand Prix' and drivers.nationality = 'American' and races.year = 2008", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many drivers from the UN participated in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(drivers.driverid) from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid inner join driverstandings on drivers.driverid = driverstandings.driverid where races.name = 'Australian Grand Prix' and drivers.nationality = 'American' and races.year = 2008\n\nIs the SQL semantically correct?"}
{"id": 335, "question": "Count the fastest superheroes.", "sql": "select count(superhero.id) from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where attribute.attribute_name = 'Speed' and hero_attribute.attribute_value = 100", "db_id": "superhero", "label": true, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Count the fastest superheroes.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select count(superhero.id) from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where attribute.attribute_name = 'Speed' and hero_attribute.attribute_value = 100\n\nIs the SQL semantically correct?"}
{"id": 336, "question": "In the molecule containing sodium atoms, how many are non-carcinogenic?", "sql": "select count(molecule.molecule_id) from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'na' and molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the molecule containing sodium atoms, how many are non-carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'na' and molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 337, "question": "What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?", "sql": "SELECT text FROM comments WHERE creationdate = '2010-07-19 19:37:33.0'", "db_id": "codebase_community", "label": true, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT text FROM comments WHERE creationdate = '2010-07-19 19:37:33.0'\n\nIs the SQL semantically correct?"}
{"id": 338, "question": "Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?", "sql": "SELECT CASE WHEN T1.`T-CHO` < 250 THEN 'YES' ELSE 'NO' END FROM Laboratory AS T1 WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT CASE WHEN T1.`T-CHO` < 250 THEN 'YES' ELSE 'NO' END FROM Laboratory AS T1 WHERE T1.ID = 2927464 AND T1.Date = '1995-09-04'\n\nIs the SQL semantically correct?"}
{"id": 339, "question": "Among black card borders, which card has full artwork?", "sql": "select bordercolor from cards where isfullart = 1 and bordercolor = 'black'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among black card borders, which card has full artwork?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select bordercolor from cards where isfullart = 1 and bordercolor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 340, "question": "In 1996, which districts have the highest unemployment rate? List their branch location and district name.", "sql": "SELECT district_id, a2 FROM district ORDER BY a13 DESC LIMIT 1", "db_id": "financial", "label": true, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In 1996, which districts have the highest unemployment rate? List their branch location and district name.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT district_id, a2 FROM district ORDER BY a13 DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 341, "question": "How many male patients have elevated total bilirubin count?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 2.0", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many male patients have elevated total bilirubin count?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T2.`T-BIL` > 2.0\n\nIs the SQL semantically correct?"}
{"id": 342, "question": "How many unknown power cards contain info about the triggered ability", "sql": "SELECT COUNT(id) FROM cards WHERE power IS NULL AND text LIKE '%Triggered ability%'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many unknown power cards contain info about the triggered ability\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE power IS NULL AND text LIKE '%Triggered ability%'\n\nIs the SQL semantically correct?"}
{"id": 343, "question": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.", "sql": "select drivers.driverref from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and races.year = 2008 order by results.rank desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.driverref from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and races.year = 2008 order by results.rank desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 344, "question": "Name all the cards which have alternative language in Japanese.", "sql": "SELECT DISTINCT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' AND cards.isalternative = 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name all the cards which have alternative language in Japanese.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT DISTINCT cards.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Japanese' AND cards.isalternative = 1\n\nIs the SQL semantically correct?"}
{"id": 345, "question": "Among the account opened, how many female customers who were born before 1950 and stayed in Sokolov?", "sql": "SELECT count(client.district_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the account opened, how many female customers who were born before 1950 and stayed in Sokolov?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(client.district_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE client.gender = 'F' AND client.birth_date < '1950-01-01'\n\nIs the SQL semantically correct?"}
{"id": 346, "question": "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?", "sql": "select cast(sum(case when client.gender = 'F' then 1 else 0 end) as real) * 100 / count(client.gender) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where district.a11 > 10000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select cast(sum(case when client.gender = 'F' then 1 else 0 end) as real) * 100 / count(client.gender) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where district.a11 > 10000\n\nIs the SQL semantically correct?"}
{"id": 347, "question": "What is the date when the youngest user made his or her first post?", "sql": "SELECT posts.creaiondate FROM users INNER JOIN posts ON users.id = posts.owneruserid ORDER BY users.age LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the date when the youngest user made his or her first post?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT posts.creaiondate FROM users INNER JOIN posts ON users.id = posts.owneruserid ORDER BY users.age LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 348, "question": "What is the language of the card with the multiverse number 149934?", "sql": "select foreign_data.language from cards inner join foreign_data on cards.id = foreign_data.uuid where cards.multiverseid = 149934", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the language of the card with the multiverse number 149934?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.language from cards inner join foreign_data on cards.id = foreign_data.uuid where cards.multiverseid = 149934\n\nIs the SQL semantically correct?"}
{"id": 349, "question": "Please list the product description of the products bought in transactions in euro.", "sql": "select distinct products.description from products inner join transactions_1k on products.productid = transactions_1k.productid where transactions_1k.transactionid = 'Eur'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the product description of the products bought in transactions in euro.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select distinct products.description from products inner join transactions_1k on products.productid = transactions_1k.productid where transactions_1k.transactionid = 'Eur'\n\nIs the SQL semantically correct?"}
{"id": 350, "question": "List the full names of superheroes with missing weight.", "sql": "select full_name from superhero where weight_kg is null or weight_kg = 0", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the full names of superheroes with missing weight.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select full_name from superhero where weight_kg is null or weight_kg = 0\n\nIs the SQL semantically correct?"}
{"id": 351, "question": "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.", "sql": "select account.account_id from loan inner join account on loan.account_id = account.account_id where loan.duration > 12 and account.date > 1993 order by loan.amount desc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from loan inner join account on loan.account_id = account.account_id where loan.duration > 12 and account.date > 1993 order by loan.amount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 352, "question": "Among the cards with a white border color, how many of them have unknown power?", "sql": "SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the cards with a white border color, how many of them have unknown power?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND (power = '*' OR power IS NULL)\n\nIs the SQL semantically correct?"}
{"id": 353, "question": "What are the display names and ages of user who got the highest in views?", "sql": "SELECT DisplayName, Age FROM users ORDER BY Views DESC LIMIT 1", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the display names and ages of user who got the highest in views?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT DisplayName, Age FROM users ORDER BY Views DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 354, "question": "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.", "sql": "SELECT school, mailzip FROM schools WHERE admlname1 = 'Atoian' AND admfname1 = 'Avetik'", "db_id": "california_schools", "label": true, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT school, mailzip FROM schools WHERE admlname1 = 'Atoian' AND admfname1 = 'Avetik'\n\nIs the SQL semantically correct?"}
{"id": 355, "question": "Show me the season page of year when the race No. 901 took place.", "sql": "select distinct races.year from results inner join races on results.raceid = races.raceid where results.number = 901", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Show me the season page of year when the race No. 901 took place.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.year from results inner join races on results.raceid = races.raceid where results.number = 901\n\nIs the SQL semantically correct?"}
{"id": 356, "question": "How many races were there in 2005? Name all the races in descending order.", "sql": "select count(name) as num from races where year = '2005' order by name desc", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many races were there in 2005? Name all the races in descending order.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(name) as num from races where year = '2005' order by name desc\n\nIs the SQL semantically correct?"}
{"id": 357, "question": "How many types of cards does the artist Aaron Boyd illustrated about card art?", "sql": "SELECT count(DISTINCT TYPE) FROM cards WHERE artist = 'Aaron Boyd'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many types of cards does the artist Aaron Boyd illustrated about card art?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(DISTINCT TYPE) FROM cards WHERE artist = 'Aaron Boyd'\n\nIs the SQL semantically correct?"}
{"id": 358, "question": "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.", "sql": "select distinct cards.text , rulings.text , cards.hascontentwarning from cards inner join rulings on cards.uuid = rulings.uuid where cards.artist = 'Stephen Daniele'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct cards.text , rulings.text , cards.hascontentwarning from cards inner join rulings on cards.uuid = rulings.uuid where cards.artist = 'Stephen Daniele'\n\nIs the SQL semantically correct?"}
{"id": 359, "question": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.", "sql": "SELECT races.year, races.name, races.date, races.time FROM drivers INNER JOIN qualifying ON drivers.driverid = qualifying.driverid INNER JOIN races ON qualifying.raceid = races.raceid ORDER BY drivers.dob DESC LIMIT 1", "db_id": "formula_1", "label": true, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT races.year, races.name, races.date, races.time FROM drivers INNER JOIN qualifying ON drivers.driverid = qualifying.driverid INNER JOIN races ON qualifying.raceid = races.raceid ORDER BY drivers.dob DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 360, "question": "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?", "sql": "SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) FROM schools WHERE County = 'Orange' AND StatusType = 'Merged'", "db_id": "california_schools", "label": true, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT CAST(SUM(CASE WHEN DOC = 54 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN DOC = 52 THEN 1 ELSE 0 END) FROM schools WHERE County = 'Orange' AND StatusType = 'Merged'\n\nIs the SQL semantically correct?"}
{"id": 361, "question": "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.", "sql": "SELECT schools.mailstreet, satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode ORDER BY satscores.avgscrread ASC LIMIT 1", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.mailstreet, satscores.sname FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode ORDER BY satscores.avgscrread ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 362, "question": "For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?", "sql": "SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores WHERE AvgScrRead IS NOT NULL)", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the school with the highest average score in Reading in the SAT test, what is its FRPM count for students aged 5-17?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.`FRPM Count (Ages 5-17)` FROM satscores AS T1 INNER JOIN frpm AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrRead = (SELECT MAX(AvgScrRead) FROM satscores WHERE AvgScrRead IS NOT NULL)\n\nIs the SQL semantically correct?"}
{"id": 363, "question": "Please list the accounts whose district is Tabor that are eligible for loans.", "sql": "SELECT account.account_id FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.a2 = 'Tabor' AND account.frequency = 'POPLATEK MESICNE'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the accounts whose district is Tabor that are eligible for loans.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT account.account_id FROM account INNER JOIN district ON account.district_id = district.district_id WHERE district.a2 = 'Tabor' AND account.frequency = 'POPLATEK MESICNE'\n\nIs the SQL semantically correct?"}
{"id": 364, "question": "How many borderless cards are illustrated in Russian?", "sql": "select count(cards.id) from cards inner join set_translations on cards.id = set_translations.id where set_translations.language = 'Russian' and cards.bordercolor = 'borderless'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many borderless cards are illustrated in Russian?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.id) from cards inner join set_translations on cards.id = set_translations.id where set_translations.language = 'Russian' and cards.bordercolor = 'borderless'\n\nIs the SQL semantically correct?"}
{"id": 365, "question": "For the customers who paid in the euro, what is their average total price of the transactions?", "sql": "select sum(transactions_1k.price) / count(customers.customerid) from customers inner join transactions_1k on customers.customerid = transactions_1k.customerid where customers.currency = 'eur'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customers who paid in the euro, what is their average total price of the transactions?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select sum(transactions_1k.price) / count(customers.customerid) from customers inner join transactions_1k on customers.customerid = transactions_1k.customerid where customers.currency = 'eur'\n\nIs the SQL semantically correct?"}
{"id": 366, "question": "List the long name of teams with above-average build-up play passing in 2012.", "sql": "SELECT team.team_long_name FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing IS NOT NULL GROUP BY team.team_long_name HAVING sum(team_attributes.buildupplaypassing) / count(team.team_long_name) < team_attributes.buildupplaypassing", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the long name of teams with above-average build-up play passing in 2012.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT team.team_long_name FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date LIKE '2012%' AND team_attributes.buildupplaypassing IS NOT NULL GROUP BY team.team_long_name HAVING sum(team_attributes.buildupplaypassing) / count(team.team_long_name) < team_attributes.buildupplaypassing\n\nIs the SQL semantically correct?"}
{"id": 367, "question": "What is the ratio of customers who pay in EUR against customers who pay in CZK?", "sql": "select cast(sum(case when currency = 'EUR' then 1 else 0 end) as real) * 100 / sum(case when currency = 'CZK' then 1 else 0 end) from customers", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of customers who pay in EUR against customers who pay in CZK?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select cast(sum(case when currency = 'EUR' then 1 else 0 end) as real) * 100 / sum(case when currency = 'CZK' then 1 else 0 end) from customers\n\nIs the SQL semantically correct?"}
{"id": 368, "question": "What is the description about the ruling of card \"Condemn\"?", "sql": "select rulings.text from cards inner join rulings on cards.uuid = rulings.uuid where cards.name = 'Ancestor''s Chosen'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the description about the ruling of card \"Condemn\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select rulings.text from cards inner join rulings on cards.uuid = rulings.uuid where cards.name = 'Ancestor''s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 369, "question": "How many users last accessed the website after 2014/9/1?", "sql": "select count(id) from users where lastaccessdate >= '2014-09-01 00:00:00'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many users last accessed the website after 2014/9/1?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(id) from users where lastaccessdate >= '2014-09-01 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 370, "question": "When was the set of cards with \"Ancestor's Chosen\" released?", "sql": "select sets.releasedate from sets inner join cards on sets.id = cards.uuid where cards.name like 'Ancestor%s Chosen'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: When was the set of cards with \"Ancestor's Chosen\" released?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.releasedate from sets inner join cards on sets.id = cards.uuid where cards.name like 'Ancestor%s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 371, "question": "Which toxic element can be found in the molecule TR151?", "sql": "select element from atom where molecule_id = ( select molecule_id from molecule where molecule_id = 'TR151' ) and element = ( select element from atom where molecule_id = 'TR151' ) and element is not null", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which toxic element can be found in the molecule TR151?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select element from atom where molecule_id = ( select molecule_id from molecule where molecule_id = 'TR151' ) and element = ( select element from atom where molecule_id = 'TR151' ) and element is not null\n\nIs the SQL semantically correct?"}
{"id": 372, "question": "What was the highest score of the home team in the Netherlands Eredivisie league?", "sql": "select max(match.home_team_goal) from match inner join league on match.league_id = league.id inner join country on league.country_id = country.id where league.name = 'Netherlands Eredivisie'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the highest score of the home team in the Netherlands Eredivisie league?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select max(match.home_team_goal) from match inner join league on match.league_id = league.id inner join country on league.country_id = country.id where league.name = 'Netherlands Eredivisie'\n\nIs the SQL semantically correct?"}
{"id": 373, "question": "How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?", "sql": "SELECT COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'H' AND T1.label = '+'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many atoms belong to the molecule that element is hydrogen and labeled with carcinogenic compound?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'H' AND T1.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 374, "question": "List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.", "sql": "select distinct circuits.name , circuits.location , races.name from circuits inner join races on circuits.circuitid = races.circuitid where races.year = 2006 and circuits.country = 'USA'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List circuits in USA which hosted f1 races in 2006. State the name and location of circuit and the name of the race it hosted.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct circuits.name , circuits.location , races.name from circuits inner join races on circuits.circuitid = races.circuitid where races.year = 2006 and circuits.country = 'USA'\n\nIs the SQL semantically correct?"}
{"id": 375, "question": "Please list top two bonds that happened with the molecule TR006 in alphabetical order.", "sql": "select bond.bond_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.molecule_id = 'TR006' order by bond.bond_id asc limit 2", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list top two bonds that happened with the molecule TR006 in alphabetical order.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.molecule_id = 'TR006' order by bond.bond_id asc limit 2\n\nIs the SQL semantically correct?"}
{"id": 376, "question": "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?", "sql": "SELECT T2.forename, T2.url FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T1.time IS NOT NULL ORDER BY T1.time ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the champion of 2008's Australian Grand Prix and where can I know more about him?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.forename, T2.url FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.year = 2008 AND T3.name = 'Australian Grand Prix' AND T1.time IS NOT NULL ORDER BY T1.time ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 377, "question": "Give the name of the league had the most matches end as draw in the 2016 season?", "sql": "select league.name from match inner join league on match.league_id = league.id where match.season = '2015/2016' group by league.name order by sum(match.home_team_goal - match.away_team_goal) desc limit 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the name of the league had the most matches end as draw in the 2016 season?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select league.name from match inner join league on match.league_id = league.id where match.season = '2015/2016' group by league.name order by sum(match.home_team_goal - match.away_team_goal) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 378, "question": "What is the fastest lap number of the champion in 2009?", "sql": "SELECT T4.fastestLap FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN driverStandings AS T3 ON T2.raceId = T3.raceId INNER JOIN results AS T4 ON T2.raceId = T4.raceId AND T3.driverId = T4.driverId WHERE T1.year = 2009 AND T3.position = 1 AND T4.fastestLap IS NOT NULL ORDER BY T4.fastestLap LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the fastest lap number of the champion in 2009?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T4.fastestLap FROM seasons AS T1 INNER JOIN races AS T2 ON T1.year = T2.year INNER JOIN driverStandings AS T3 ON T2.raceId = T3.raceId INNER JOIN results AS T4 ON T2.raceId = T4.raceId AND T3.driverId = T4.driverId WHERE T1.year = 2009 AND T3.position = 1 AND T4.fastestLap IS NOT NULL ORDER BY T4.fastestLap LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 379, "question": "How many of the single bond type molecules are non-carcinogenic?", "sql": "select count(molecule.molecule_id) from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '-' and molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many of the single bond type molecules are non-carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '-' and molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 380, "question": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?", "sql": "SELECT cast((sum(iif(admission = '+', 1, 0)) - sum(iif(admission = '-', 1, 0))) AS REAL) * 100 / sum(iif(sex = 'M', 1, 0)) FROM patient", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Are there more in-patient or outpatient who were male? What is the deviation in percentage?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast((sum(iif(admission = '+', 1, 0)) - sum(iif(admission = '-', 1, 0))) AS REAL) * 100 / sum(iif(sex = 'M', 1, 0)) FROM patient\n\nIs the SQL semantically correct?"}
{"id": 381, "question": "State the racing year which has the fastest lap time?", "sql": "SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the racing year which has the fastest lap time?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.year FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.fastestLapTime IS NOT NULL ORDER BY T2.fastestLapTime ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 382, "question": "For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?", "sql": "select cast(sum(case when cards.isonlineonly = 1 then 1 else 0 end) as real) * 100 / count(cards.id) from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where set_translations.language = 'Portuguese (Brazil)'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the set of cards that has Brazil Portuguese translation, what is the percentage of them are only available online?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when cards.isonlineonly = 1 then 1 else 0 end) as real) * 100 / count(cards.id) from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where set_translations.language = 'Portuguese (Brazil)'\n\nIs the SQL semantically correct?"}
{"id": 383, "question": "What is the percentage of female patient had total protein not within the normal range?", "sql": "select cast(sum(case when patient.sex = 'F' then 1 else 0 end) as real) * 100 / count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where laboratory.tp < '6.0' or laboratory.tp > '8.5'", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of female patient had total protein not within the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select cast(sum(case when patient.sex = 'F' then 1 else 0 end) as real) * 100 / count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where laboratory.tp < '6.0' or laboratory.tp > '8.5'\n\nIs the SQL semantically correct?"}
{"id": 384, "question": "Is the set of cards with Adarkar Valkyrie only available outside the United States?", "sql": "select sets.isforeignonly from cards inner join sets on cards.id = sets.id where cards.name = 'Adarkar Valkyrie'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is the set of cards with Adarkar Valkyrie only available outside the United States?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.isforeignonly from cards inner join sets on cards.id = sets.id where cards.name = 'Adarkar Valkyrie'\n\nIs the SQL semantically correct?"}
{"id": 385, "question": "Which users have posted the most comments. List out the user's badge?", "sql": "SELECT T2.Name FROM comments AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId INNER JOIN users AS T3 ON T1.UserId = T3.Id GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which users have posted the most comments. List out the user's badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.Name FROM comments AS T1 INNER JOIN badges AS T2 ON T1.UserId = T2.UserId INNER JOIN users AS T3 ON T1.UserId = T3.Id GROUP BY T1.UserId ORDER BY COUNT(T1.Id) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 386, "question": "How much, in total, did client number 617 pay for all of the transactions in 1998?", "sql": "select sum(trans.amount) from client inner join disp on client.client_id = disp.client_id inner join trans on disp.account_id = trans.account_id where client.client_id = 617 and trans.date = '1998'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much, in total, did client number 617 pay for all of the transactions in 1998?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select sum(trans.amount) from client inner join disp on client.client_id = disp.client_id inner join trans on disp.account_id = trans.account_id where client.client_id = 617 and trans.date = '1998'\n\nIs the SQL semantically correct?"}
{"id": 387, "question": "List out the no. of districts that have female average salary is more than 6000 but less than 10000?", "sql": "SELECT count(*) FROM district INNER JOIN client ON district.district_id = client.district_id WHERE client.gender = 'F' AND district.a11 BETWEEN 6000 AND 10000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the no. of districts that have female average salary is more than 6000 but less than 10000?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(*) FROM district INNER JOIN client ON district.district_id = client.district_id WHERE client.gender = 'F' AND district.a11 BETWEEN 6000 AND 10000\n\nIs the SQL semantically correct?"}
{"id": 388, "question": "List the long name of teams with above-average build-up play passing in 2012.", "sql": "select team.team_long_name from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team_attributes.buildupplaypassing > 0.5 and team_attributes.date like '2012%' group by team.team_long_name having sum(team_attributes.buildupplaypassing) > 0", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the long name of teams with above-average build-up play passing in 2012.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_long_name from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team_attributes.buildupplaypassing > 0.5 and team_attributes.date like '2012%' group by team.team_long_name having sum(team_attributes.buildupplaypassing) > 0\n\nIs the SQL semantically correct?"}
{"id": 389, "question": "Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.", "sql": "SELECT cards.name FROM cards INNER JOIN sets ON cards.uuid = sets.code WHERE sets.name = 'Journey into Nyx Hero''s Path' ORDER BY cards.convertedmanacost DESC LIMIT 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT cards.name FROM cards INNER JOIN sets ON cards.uuid = sets.code WHERE sets.name = 'Journey into Nyx Hero''s Path' ORDER BY cards.convertedmanacost DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 390, "question": "What are the two most common first names among the school administrators? Indicate the district to which they administer.", "sql": "SELECT admfname1, district FROM schools GROUP BY admfname1, district ORDER BY count(admfname1) DESC LIMIT 2", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the two most common first names among the school administrators? Indicate the district to which they administer.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT admfname1, district FROM schools GROUP BY admfname1, district ORDER BY count(admfname1) DESC LIMIT 2\n\nIs the SQL semantically correct?"}
{"id": 391, "question": "Who has the highest average finishing rate between the highest and shortest football player?", "sql": "SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id ORDER BY player_attributes.finishing DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who has the highest average finishing rate between the highest and shortest football player?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player.player_name FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id ORDER BY player_attributes.finishing DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 392, "question": "What is the percentage difference of student badges given during 2010 and 2011?", "sql": "select cast(sum(case when date = 2010 then 1 else 0 end) as real) * 100 / sum(case when date = 2011 then 1 else 0 end) - cast(sum(case when date = 2011 then 1 else 0 end) as real) * 100 / sum(case when date = 2011 then 1 else 0 end) from badges where name = 'Students'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage difference of student badges given during 2010 and 2011?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select cast(sum(case when date = 2010 then 1 else 0 end) as real) * 100 / sum(case when date = 2011 then 1 else 0 end) - cast(sum(case when date = 2011 then 1 else 0 end) as real) * 100 / sum(case when date = 2011 then 1 else 0 end) from badges where name = 'Students'\n\nIs the SQL semantically correct?"}
{"id": 393, "question": "What percentage of Japanese translated sets are expansion sets?", "sql": "select cast(sum(case when sets.type = 'expansion' then 1 else 0 end) as real) * 100 / count(set_translations.setcode) from sets inner join set_translations on sets.code = set_translations.setcode", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of Japanese translated sets are expansion sets?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when sets.type = 'expansion' then 1 else 0 end) as real) * 100 / count(set_translations.setcode) from sets inner join set_translations on sets.code = set_translations.setcode\n\nIs the SQL semantically correct?"}
{"id": 394, "question": "What is the total score of the posts edited by Yevgeny and include the user's website URL.", "sql": "SELECT sum(posts.score), users.websiteurl FROM users INNER JOIN posthistory ON users.id = posthistory.userid INNER JOIN posts ON posthistory.postid = posts.id WHERE users.displayname = 'Yevgeny' GROUP BY users.websiteurl", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total score of the posts edited by Yevgeny and include the user's website URL.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT sum(posts.score), users.websiteurl FROM users INNER JOIN posthistory ON users.id = posthistory.userid INNER JOIN posts ON posthistory.postid = posts.id WHERE users.displayname = 'Yevgeny' GROUP BY users.websiteurl\n\nIs the SQL semantically correct?"}
{"id": 395, "question": "Please list the lap records for the circuits in Italy.", "sql": "SELECT DISTINCT laptimes.time FROM laptimes INNER JOIN races ON laptimes.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the lap records for the circuits in Italy.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT DISTINCT laptimes.time FROM laptimes INNER JOIN races ON laptimes.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE circuits.country = 'Italy'\n\nIs the SQL semantically correct?"}
{"id": 396, "question": "What is the name of tags used by John Salvatier's?", "sql": "select tags.tagname from users inner join posts on users.id = posts.owneruserid inner join tags on posts.id = tags.id where users.displayname = 'John Stauffer'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the name of tags used by John Salvatier's?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select tags.tagname from users inner join posts on users.id = posts.owneruserid inner join tags on posts.id = tags.id where users.displayname = 'John Stauffer'\n\nIs the SQL semantically correct?"}
{"id": 397, "question": "For the constructor which got the highest point in the race No. 9 , what is its introduction website?", "sql": "select constructors.url from constructors inner join results on constructors.constructorid = results.constructorid inner join constructorresults on results.constructorid = constructorresults.constructorid where results.raceid = 9 order by constructorresults.points desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the constructor which got the highest point in the race No. 9 , what is its introduction website?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select constructors.url from constructors inner join results on constructors.constructorid = results.constructorid inner join constructorresults on results.constructorid = constructorresults.constructorid where results.raceid = 9 order by constructorresults.points desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 398, "question": "For the first client who opened his/her account in Prague, what is his/her account ID?", "sql": "select account.account_id from account inner join client on account.district_id = client.district_id inner join district on client.district_id = district.district_id where district.a3 = 'Prague' order by client.client_id asc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the first client who opened his/her account in Prague, what is his/her account ID?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from account inner join client on account.district_id = client.district_id inner join district on client.district_id = district.district_id where district.a3 = 'Prague' order by client.client_id asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 399, "question": "Who is the owner of the post \"Eliciting priors from experts\"?", "sql": "SELECT ownerdisplayname FROM posts WHERE title = 'Eliciting priors from experts'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who is the owner of the post \"Eliciting priors from experts\"?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT ownerdisplayname FROM posts WHERE title = 'Eliciting priors from experts'\n\nIs the SQL semantically correct?"}
{"id": 400, "question": "Which budget category does the expense 'Posters' fall to?", "sql": "SELECT DISTINCT budget.category FROM budget INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'Posters'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which budget category does the expense 'Posters' fall to?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT DISTINCT budget.category FROM budget INNER JOIN expense ON budget.budget_id = expense.link_to_budget WHERE expense.expense_description = 'Posters'\n\nIs the SQL semantically correct?"}
{"id": 401, "question": "What is the best lap time recorded? List the driver and race with such recorded lap time.", "sql": "SELECT T2.milliseconds, T3.surname, T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId ORDER BY T2.milliseconds ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the best lap time recorded? List the driver and race with such recorded lap time.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.milliseconds, T3.surname, T1.year FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId ORDER BY T2.milliseconds ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 402, "question": "What is the display name of the user who is the owner of the most valuable post?", "sql": "select ownerdisplayname from posts where favoritecount = ( select max(favoritecount) from posts )", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the display name of the user who is the owner of the most valuable post?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select ownerdisplayname from posts where favoritecount = ( select max(favoritecount) from posts )\n\nIs the SQL semantically correct?"}
{"id": 403, "question": "List the name of students that have attended more than 7 events.", "sql": "SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name HAVING COUNT(T2.link_to_event) > 7", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the name of students that have attended more than 7 events.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T1.first_name, T1.last_name FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member GROUP BY T1.first_name, T1.last_name HAVING COUNT(T2.link_to_event) > 7\n\nIs the SQL semantically correct?"}
{"id": 404, "question": "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?", "sql": "SELECT T3.lap FROM drivers AS T1 INNER JOIN pitStops AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2011 AND T2.name = 'Australian Grand Prix'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.lap FROM drivers AS T1 INNER JOIN pitStops AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' AND T2.year = 2011 AND T2.name = 'Australian Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 405, "question": "In February 2012, what percentage of customers consumed more than 528.3?", "sql": "select cast(sum(case when consumption > 528.3 then 1 else 0 end) as real) * 100 / count(customerid) from yearmonth where date = '2012-02'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In February 2012, what percentage of customers consumed more than 528.3?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select cast(sum(case when consumption > 528.3 then 1 else 0 end) as real) * 100 / count(customerid) from yearmonth where date = '2012-02'\n\nIs the SQL semantically correct?"}
{"id": 406, "question": "What are the elements for bond id TR001_10_11?", "sql": "select distinct atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR001_10_11'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the elements for bond id TR001_10_11?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select distinct atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR001_10_11'\n\nIs the SQL semantically correct?"}
{"id": 407, "question": "What was the gas consumption peak month for SME customers in 2013?", "sql": "SELECT DISTINCT substr(yearmonth.date, 5, 2) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.segment = 'SME' AND substr(yearmonth.date, 1, 4) = '2013' ORDER BY yearmonth.consumption DESC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the gas consumption peak month for SME customers in 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT substr(yearmonth.date, 5, 2) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.segment = 'SME' AND substr(yearmonth.date, 1, 4) = '2013' ORDER BY yearmonth.consumption DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 408, "question": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?", "sql": "select 100 * (sum(loan.amount) - sum(loan.amount)) / sum(loan.amount) from loan inner join account on loan.account_id = account.account_id inner join client on account.district_id = client.district_id where client.gender = 'M' and 1996 > 1997", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select 100 * (sum(loan.amount) - sum(loan.amount)) / sum(loan.amount) from loan inner join account on loan.account_id = account.account_id inner join client on account.district_id = client.district_id where client.gender = 'M' and 1996 > 1997\n\nIs the SQL semantically correct?"}
{"id": 409, "question": "Name the foreign name of the card that has abzan watermark? List out the type of this card.", "sql": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the foreign name of the card that has abzan watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'abzan'\n\nIs the SQL semantically correct?"}
{"id": 410, "question": "How many credit card withdrawals were recorded after 1995?", "sql": "select count(account_id) from trans where strftime('%Y' , date) >= '1995' and operation = 'VYBER KARTOU'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many credit card withdrawals were recorded after 1995?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(account_id) from trans where strftime('%Y' , date) >= '1995' and operation = 'VYBER KARTOU'\n\nIs the SQL semantically correct?"}
{"id": 411, "question": "Among the patients with a normal Ig G level, how many of them have symptoms?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG BETWEEN 900 AND 2000 AND T2.Symptoms IS NOT NULL", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients with a normal Ig G level, how many of them have symptoms?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.IGG BETWEEN 900 AND 2000 AND T2.Symptoms IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 412, "question": "For the race happened on 2015/11/29, how many drivers finished the game?", "sql": "SELECT COUNT(*) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.time IS NOT NULL", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the race happened on 2015/11/29, how many drivers finished the game?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(*) FROM results AS T1 JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.date = '2015-11-29' AND T1.time IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 413, "question": "What is the height of the tallest player? Indicate his name.", "sql": "select height , player_name from player order by height desc limit 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the height of the tallest player? Indicate his name.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select height , player_name from player order by height desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 414, "question": "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.", "sql": "select posts.viewcount , users.displayname from comments inner join posts on comments.postid = posts.id inner join posthistory on posts.id = posthistory.postid inner join users on posts.owneruserid = users.id where posts.title = 'Computer game datasets' and posthistory.text = 'Computer game datasets'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select posts.viewcount , users.displayname from comments inner join posts on comments.postid = posts.id inner join posthistory on posts.id = posthistory.postid inner join users on posts.owneruserid = users.id where posts.title = 'Computer game datasets' and posthistory.text = 'Computer game datasets'\n\nIs the SQL semantically correct?"}
{"id": 415, "question": "What is the type of the card \"Ancestor's Chosen\" as originally printed?", "sql": "select originaltype from cards where name = 'Ancestor''s Chosen'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the type of the card \"Ancestor's Chosen\" as originally printed?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select originaltype from cards where name = 'Ancestor''s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 416, "question": "Calculate the average height for each superhero.", "sql": "select avg(height_cm) from superhero", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the average height for each superhero.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select avg(height_cm) from superhero\n\nIs the SQL semantically correct?"}
{"id": 417, "question": "Name all drivers in the 2010 Singapore Grand Prix order by their position stands.", "sql": "SELECT drivers.forename, drivers.surname FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix' ORDER BY results.position", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name all drivers in the 2010 Singapore Grand Prix order by their position stands.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2010 AND races.name = 'Singapore Grand Prix' ORDER BY results.position\n\nIs the SQL semantically correct?"}
{"id": 418, "question": "How many molecules are carcinogenic and have the bromine element?", "sql": "select count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+' and atom.element = 'br'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules are carcinogenic and have the bromine element?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+' and atom.element = 'br'\n\nIs the SQL semantically correct?"}
{"id": 419, "question": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.", "sql": "SELECT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', laboratory.date) = '1984' AND laboratory.plt BETWEEN 100 AND 400 AND strftime('%Y', patient.birthday) + 50 > strftime('%Y', laboratory.date)", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE strftime('%Y', laboratory.date) = '1984' AND laboratory.plt BETWEEN 100 AND 400 AND strftime('%Y', patient.birthday) + 50 > strftime('%Y', laboratory.date)\n\nIs the SQL semantically correct?"}
{"id": 420, "question": "What percentage of Slovakian gas stations are premium?", "sql": "SELECT cast(sum(CASE WHEN segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / count(country) FROM gasstations WHERE country = 'SVK'", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of Slovakian gas stations are premium?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT cast(sum(CASE WHEN segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / count(country) FROM gasstations WHERE country = 'SVK'\n\nIs the SQL semantically correct?"}
{"id": 421, "question": "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?", "sql": "select cast(sum(case when schools.opendate = 1980 then 1 else 0 end) as real) / 12 from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.county = 'Alameda' and schools.doctype = 'Elementary School District'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select cast(sum(case when schools.opendate = 1980 then 1 else 0 end) as real) / 12 from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.county = 'Alameda' and schools.doctype = 'Elementary School District'\n\nIs the SQL semantically correct?"}
{"id": 422, "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.", "sql": "SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 3", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = 'right' ORDER BY potential ASC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 423, "question": "Who was the driver that got the best lap time in the race No. 348? Give his full name.", "sql": "select drivers.surname , drivers.forename from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.driverid = laptimes.driverid where results.raceid = 348 order by laptimes.time asc limit 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the driver that got the best lap time in the race No. 348? Give his full name.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.surname , drivers.forename from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.driverid = laptimes.driverid where results.raceid = 348 order by laptimes.time asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 424, "question": "For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal.", "sql": "select laboratory.tp - laboratory.tp from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'F' and laboratory.tp > 8.5", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all female patient with total protein (TP) beyond the normal index, what is the deviation of their TP idex from the normal.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select laboratory.tp - laboratory.tp from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'F' and laboratory.tp > 8.5\n\nIs the SQL semantically correct?"}
{"id": 425, "question": "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.", "sql": "select schools.admemail1 , schools.school from schools inner join satscores on schools.cdscode = satscores.cds where satscores.numge1500 group by schools.admemail1 , schools.school order by count(satscores.numge1500) limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.admemail1 , schools.school from schools inner join satscores on schools.cdscode = satscores.cds where satscores.numge1500 group by schools.admemail1 , schools.school order by count(satscores.numge1500) limit 1\n\nIs the SQL semantically correct?"}
{"id": 426, "question": "Please give the name of the race held on the circuits in Germany.", "sql": "select distinct races.name from races inner join circuits on races.circuitid = circuits.circuitid where circuits.country = 'Germany'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please give the name of the race held on the circuits in Germany.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.name from races inner join circuits on races.circuitid = circuits.circuitid where circuits.country = 'Germany'\n\nIs the SQL semantically correct?"}
{"id": 427, "question": "For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?", "sql": "select distinct drivers.nationality from qualifying inner join drivers on qualifying.driverid = drivers.driverid where qualifying.raceid = 355 and qualifying.q2 = '0:01:40'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the driver who had the Q2 time as 0:01:40 in the qualifying race No. 355, what is his nationality?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.nationality from qualifying inner join drivers on qualifying.driverid = drivers.driverid where qualifying.raceid = 355 and qualifying.q2 = '0:01:40'\n\nIs the SQL semantically correct?"}
{"id": 428, "question": "How many percent of 'Gold' cards were issued prior to 1998?", "sql": "SELECT cast(sum(CASE WHEN TYPE = 'gold' THEN 1 ELSE 0 END) AS REAL) * 100 / count(card_id) FROM card WHERE strftime('%Y', issued) < '1998'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many percent of 'Gold' cards were issued prior to 1998?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT cast(sum(CASE WHEN TYPE = 'gold' THEN 1 ELSE 0 END) AS REAL) * 100 / count(card_id) FROM card WHERE strftime('%Y', issued) < '1998'\n\nIs the SQL semantically correct?"}
{"id": 429, "question": "What is the best lap time recorded? List the driver and race with such recorded lap time.", "sql": "select drivers.surname , races.name from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid inner join laptimes on results.raceid = laptimes.raceid order by laptimes.time asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the best lap time recorded? List the driver and race with such recorded lap time.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.surname , races.name from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid inner join laptimes on results.raceid = laptimes.raceid order by laptimes.time asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 430, "question": "What is the percentage of Story Spotlight cards that do not have a text box? List them by their ID.", "sql": "select cast(sum(case when isstoryspotlight = 1 then 1 else 0 end) as real) * 100 / count(id) from cards", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of Story Spotlight cards that do not have a text box? List them by their ID.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when isstoryspotlight = 1 then 1 else 0 end) as real) * 100 / count(id) from cards\n\nIs the SQL semantically correct?"}
{"id": 431, "question": "List the edhrecRank for cards with frame version 2015.", "sql": "SELECT edhrecRank FROM cards WHERE frameVersion = '2015'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the edhrecRank for cards with frame version 2015.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT edhrecRank FROM cards WHERE frameVersion = '2015'\n\nIs the SQL semantically correct?"}
{"id": 432, "question": "What is the Italian flavor text of the card \"Ancestor's Chosen\"?", "sql": "select foreign_data.flavortext from cards inner join foreign_data on cards.id = foreign_data.uuid where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Italian'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the Italian flavor text of the card \"Ancestor's Chosen\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.flavortext from cards inner join foreign_data on cards.id = foreign_data.uuid where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Italian'\n\nIs the SQL semantically correct?"}
{"id": 433, "question": "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.", "sql": "SELECT School, MailZip FROM schools WHERE AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT School, MailZip FROM schools WHERE AdmFName2 = 'Avetik' AND AdmLName2 = 'Atoian'\n\nIs the SQL semantically correct?"}
{"id": 434, "question": "What is the status of card \"Cloudchaser Eagle\"?", "sql": "SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the status of card \"Cloudchaser Eagle\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T2.status FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Cloudchaser Eagle'\n\nIs the SQL semantically correct?"}
{"id": 435, "question": "What was the chance creation crossing class for \"Hull City\" on 2010/2/22?", "sql": "SELECT team_attributes.chancecreationcrossingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date = '2010-02-22 00:00:00' AND team.team_long_name = 'Hull City'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the chance creation crossing class for \"Hull City\" on 2010/2/22?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT team_attributes.chancecreationcrossingclass FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date = '2010-02-22 00:00:00' AND team.team_long_name = 'Hull City'\n\nIs the SQL semantically correct?"}
{"id": 436, "question": "Write down the atom IDs of the first and second atoms of triple bond type molecules.", "sql": "SELECT connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write down the atom IDs of the first and second atoms of triple bond type molecules.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT connected.atom_id, connected.atom_id2 FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id WHERE bond.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 437, "question": "What is the average heights of Italy players?", "sql": "SELECT avg(player.height) FROM country INNER JOIN league ON country.id = league.country_id INNER JOIN MATCH ON league.id = MATCH.country_id INNER JOIN player ON MATCH.home_player_1 = player.player_api_id WHERE country.name = 'Italy'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average heights of Italy players?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT avg(player.height) FROM country INNER JOIN league ON country.id = league.country_id INNER JOIN MATCH ON league.id = MATCH.country_id INNER JOIN player ON MATCH.home_player_1 = player.player_api_id WHERE country.name = 'Italy'\n\nIs the SQL semantically correct?"}
{"id": 438, "question": "What is the atom ID of double bonded carbon in TR012 molecule?", "sql": "select atom.atom_id from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id inner join molecule on molecule.molecule_id = bond.molecule_id where atom.element = 'c' and bond.bond_type = '= ' and molecule.molecule_id = 'TR012'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the atom ID of double bonded carbon in TR012 molecule?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.atom_id from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id inner join molecule on molecule.molecule_id = bond.molecule_id where atom.element = 'c' and bond.bond_type = '= ' and molecule.molecule_id = 'TR012'\n\nIs the SQL semantically correct?"}
{"id": 439, "question": "State the driver with the most points scored. Find his full name with that points.", "sql": "select drivers.forename , drivers.surname from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid order by driverstandings.points desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the driver with the most points scored. Find his full name with that points.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.surname from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid order by driverstandings.points desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 440, "question": "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?", "sql": "SELECT pitstops.lap FROM drivers INNER JOIN pitstops ON drivers.driverid = pitstops.driverid INNER JOIN races ON pitstops.raceid = races.raceid WHERE races.year = 2011 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT pitstops.lap FROM drivers INNER JOIN pitstops ON drivers.driverid = pitstops.driverid INNER JOIN races ON pitstops.raceid = races.raceid WHERE races.year = 2011 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 441, "question": "Among the bad superheroes, what is the percentage of female superheroes?", "sql": "select cast(count(case when gender.gender = 2 then 1 else null end) as real) * 100 / count(gender.id) from alignment inner join superhero on alignment.id = superhero.alignment_id inner join gender on superhero.gender_id = gender.id where alignment.alignment = 'Bad'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the bad superheroes, what is the percentage of female superheroes?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select cast(count(case when gender.gender = 2 then 1 else null end) as real) * 100 / count(gender.id) from alignment inner join superhero on alignment.id = superhero.alignment_id inner join gender on superhero.gender_id = gender.id where alignment.alignment = 'Bad'\n\nIs the SQL semantically correct?"}
{"id": 442, "question": "Which year recorded the most consumption of gas paid in CZK?", "sql": "select strftime('%Y' , yearmonth.date) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'CZK' group by strftime('%Y' , yearmonth.date) order by sum(yearmonth.consumption) desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which year recorded the most consumption of gas paid in CZK?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select strftime('%Y' , yearmonth.date) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'CZK' group by strftime('%Y' , yearmonth.date) order by sum(yearmonth.consumption) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 443, "question": "What percentage of Slovakian gas stations are premium?", "sql": "SELECT CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(GasStationID) FROM gasstations WHERE Country = 'Slovakia'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of Slovakian gas stations are premium?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT CAST(SUM(CASE WHEN Segment = 'Premium' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(GasStationID) FROM gasstations WHERE Country = 'Slovakia'\n\nIs the SQL semantically correct?"}
{"id": 444, "question": "Give the race of the blue-haired male superhero.", "sql": "select race.race from colour inner join superhero on colour.id = superhero.hair_colour_id inner join gender on superhero.gender_id = gender.id inner join race on race.id = superhero.race_id where colour.colour = 'blue' and gender.gender = 'Male'", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the race of the blue-haired male superhero.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select race.race from colour inner join superhero on colour.id = superhero.hair_colour_id inner join gender on superhero.gender_id = gender.id inner join race on race.id = superhero.race_id where colour.colour = 'blue' and gender.gender = 'Male'\n\nIs the SQL semantically correct?"}
{"id": 445, "question": "What is the average heights of Italy players?", "sql": "select avg(player.height) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id inner join league on player_attributes.id = league.id inner join country on league.country_id = country.id where country.name = 'Italy'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average heights of Italy players?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select avg(player.height) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id inner join league on player_attributes.id = league.id inner join country on league.country_id = country.id where country.name = 'Italy'\n\nIs the SQL semantically correct?"}
{"id": 446, "question": "Please list the disease names of the patients that have a proteinuria level higher than normal.", "sql": "SELECT DISTINCT patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.`u-pro` > 30", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the disease names of the patients that have a proteinuria level higher than normal.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.`u-pro` > 30\n\nIs the SQL semantically correct?"}
{"id": 447, "question": "How many patients with a normal anti-SSA came to the hospital before 2000?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND STRFTIME('%Y', T1.`First Date`) < '1990'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients with a normal anti-SSA came to the hospital before 2000?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA IN ('-', '+-') AND STRFTIME('%Y', T1.`First Date`) < '1990'\n\nIs the SQL semantically correct?"}
{"id": 448, "question": "List the keyrune code for the set whose code is 'PKHC'.", "sql": "select sets.keyrunecode from sets inner join set_translations on sets.code = set_translations.setcode where sets.code = 'PKHC'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the keyrune code for the set whose code is 'PKHC'.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.keyrunecode from sets inner join set_translations on sets.code = set_translations.setcode where sets.code = 'PKHC'\n\nIs the SQL semantically correct?"}
{"id": 449, "question": "What is the average loan amount by male borrowers?", "sql": "SELECT avg(loan.amount) FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'M'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average loan amount by male borrowers?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT avg(loan.amount) FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'M'\n\nIs the SQL semantically correct?"}
{"id": 450, "question": "Please list the names of the cards that have a text box.", "sql": "select name from cards where istextless = 0", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the names of the cards that have a text box.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select name from cards where istextless = 0\n\nIs the SQL semantically correct?"}
{"id": 451, "question": "Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.", "sql": "select cards.name from cards inner join sets on cards.id = sets.id where sets.name = 'Journey into Nyx Hero''s Path' order by cards.convertedmanacost desc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which card name in the set 'Journey into Nyx Hero's Path' has the highest converted mana cost.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name from cards inner join sets on cards.id = sets.id where sets.name = 'Journey into Nyx Hero''s Path' order by cards.convertedmanacost desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 452, "question": "What was the gas consumption peak month for SME customers in 2013?", "sql": "SELECT T2.Date FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption DESC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the gas consumption peak month for SME customers in 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T2.Date FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 453, "question": "What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.", "sql": "select distinct cardkingdomid from cards where cardkingdomfoilid is not null and cardkingdomid = ( select cardkingdomid from cards order by power desc limit 1 )", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct cardkingdomid from cards where cardkingdomfoilid is not null and cardkingdomid = ( select cardkingdomid from cards order by power desc limit 1 )\n\nIs the SQL semantically correct?"}
{"id": 454, "question": "Among all the atoms from 21 to 25, list all the molecules that are carcinogenic.", "sql": "select atom.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where substr(atom.atom_id , 7 , 2) = 21 and molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among all the atoms from 21 to 25, list all the molecules that are carcinogenic.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where substr(atom.atom_id , 7 , 2) = 21 and molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 455, "question": "Is molecule TR151 carcinogenic?", "sql": "SELECT label FROM molecule WHERE molecule_id = 'TR151'", "db_id": "toxicology", "label": true, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is molecule TR151 carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT label FROM molecule WHERE molecule_id = 'TR151'\n\nIs the SQL semantically correct?"}
{"id": 456, "question": "For all the drivers who finished the game in race No. 872, who is the youngest?", "sql": "SELECT T1.driverId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 872 AND T1.time IS NOT NULL ORDER BY T2.dob DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the drivers who finished the game in race No. 872, who is the youngest?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.driverId FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 872 AND T1.time IS NOT NULL ORDER BY T2.dob DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 457, "question": "Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?", "sql": "select count(schools.school) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.fundingtype = 'Directly funded' and schools.county = 'Stanislaus' and schools.opendate between '2000-01-01' and '2005-12-31'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between 1/1/2000 to 12/31/2005, how many directly funded schools opened in the county of Stanislaus?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select count(schools.school) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.fundingtype = 'Directly funded' and schools.county = 'Stanislaus' and schools.opendate between '2000-01-01' and '2005-12-31'\n\nIs the SQL semantically correct?"}
{"id": 458, "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.", "sql": "select budget.amount , budget.category from event inner join budget on event.event_id = budget.link_to_event where event.event_name = 'April Speaker' order by budget.amount asc", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select budget.amount , budget.category from event inner join budget on event.event_id = budget.link_to_event where event.event_name = 'April Speaker' order by budget.amount asc\n\nIs the SQL semantically correct?"}
{"id": 459, "question": "State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had.", "sql": "SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the sex and birthday of patient ID '163109'. When was the examination taken and what symptom does the patient had.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.SEX, T1.Birthday, T2.`Examination Date`, T2.Symptoms FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.ID = 163109\n\nIs the SQL semantically correct?"}
{"id": 460, "question": "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?", "sql": "select sum(trans.amount) , client.gender from client inner join disp on client.client_id = disp.client_id inner join account on disp.account_id = account.account_id inner join trans on account.account_id = trans.account_id where disp.client_id = 4 and trans.trans_id = 851", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select sum(trans.amount) , client.gender from client inner join disp on client.client_id = disp.client_id inner join account on disp.account_id = account.account_id inner join trans on account.account_id = trans.account_id where disp.client_id = 4 and trans.trans_id = 851\n\nIs the SQL semantically correct?"}
{"id": 461, "question": "List all the clients' IDs whose junior credit cards were issued after 1996.", "sql": "select client.client_id from client inner join disp on client.client_id = disp.client_id inner join card on disp.disp_id = card.disp_id where card.issued >= '1997-01-01' and card.type = 'junior'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the clients' IDs whose junior credit cards were issued after 1996.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id from client inner join disp on client.client_id = disp.client_id inner join card on disp.disp_id = card.disp_id where card.issued >= '1997-01-01' and card.type = 'junior'\n\nIs the SQL semantically correct?"}
{"id": 462, "question": "How many underage patients were examined during the course of the three-year period from 1990 to 1993?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31' AND strftime('%Y', T1.Birthday) <= strftime('%Y', T2.`Examination Date`) - 18", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many underage patients were examined during the course of the three-year period from 1990 to 1993?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`Examination Date` BETWEEN '1990-01-01' AND '1993-12-31' AND strftime('%Y', T1.Birthday) <= strftime('%Y', T2.`Examination Date`) - 18\n\nIs the SQL semantically correct?"}
{"id": 463, "question": "What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.", "sql": "select schools.admlname2 , schools.district , schools.county , schools.school from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.charter = 40", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the administrator's last name that oversees the school with Charter number 40? Indicate the district, the county where the school is situated, and the name of the school.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.admlname2 , schools.district , schools.county , schools.school from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.charter = 40\n\nIs the SQL semantically correct?"}
{"id": 464, "question": "What is Eddie Irvine's average points scored in year 2000?", "sql": "SELECT AVG(T3.points) FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T2.year = 2000", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is Eddie Irvine's average points scored in year 2000?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT AVG(T3.points) FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Eddie' AND T1.surname = 'Irvine' AND T2.year = 2000\n\nIs the SQL semantically correct?"}
{"id": 465, "question": "What percentage of Slovakian gas stations are premium?", "sql": "select cast(count(case when segment = 'Premium' then gasstationid else null end) as real) * 100 / count(gasstationid) from gasstations", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of Slovakian gas stations are premium?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select cast(count(case when segment = 'Premium' then gasstationid else null end) as real) * 100 / count(gasstationid) from gasstations\n\nIs the SQL semantically correct?"}
{"id": 466, "question": "Lists all types of cards in German.", "sql": "select cards.subtypes , cards.supertypes from cards inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'German' and cards.subtypes is not null and cards.supertypes is not null", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Lists all types of cards in German.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.subtypes , cards.supertypes from cards inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'German' and cards.subtypes is not null and cards.supertypes is not null\n\nIs the SQL semantically correct?"}
{"id": 467, "question": "Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.", "sql": "select cast(sum(case when users.age between 13 and 18 then 1 else 0 end) as real) * 100 / count(users.id) from badges inner join users on badges.userid = users.id where badges.name = 'Organizer'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the users who obtained the \"Organizer\" badges, calculate the percentage of users who are teenagers.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select cast(sum(case when users.age between 13 and 18 then 1 else 0 end) as real) * 100 / count(users.id) from badges inner join users on badges.userid = users.id where badges.name = 'Organizer'\n\nIs the SQL semantically correct?"}
{"id": 468, "question": "Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.", "sql": "SELECT DISTINCT rulings.text, cards.hascontentwarning FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniel'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find all cards illustrated by Stephen Daniel and describe the text of the ruling of these cards. State if these cards have missing or degraded properties and values.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT DISTINCT rulings.text, cards.hascontentwarning FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.artist = 'Stephen Daniel'\n\nIs the SQL semantically correct?"}
{"id": 469, "question": "Which state special schools have the highest number of enrollees from grades 1 through 12?", "sql": "SELECT schools.state FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.doc = 31 AND schools.gsserved = 'K-12' GROUP BY schools.state ORDER BY sum(frpm.`enrollment (k-12)`) DESC LIMIT 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which state special schools have the highest number of enrollees from grades 1 through 12?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.state FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.doc = 31 AND schools.gsserved = 'K-12' GROUP BY schools.state ORDER BY sum(frpm.`enrollment (k-12)`) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 470, "question": "What is the average monthly number of links created in 2010 for posts that have no more than 2 answers?", "sql": "select cast(count(postlinks.id) as real) / 12 from posts inner join postlinks on posts.id = postlinks.postid where strftime('%Y' , postlinks.creationdate) = '2010' and posts.answercount < 2", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average monthly number of links created in 2010 for posts that have no more than 2 answers?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select cast(count(postlinks.id) as real) / 12 from posts inner join postlinks on posts.id = postlinks.postid where strftime('%Y' , postlinks.creationdate) = '2010' and posts.answercount < 2\n\nIs the SQL semantically correct?"}
{"id": 471, "question": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.", "sql": "SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '-' ORDER BY molecule.label LIMIT 3", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT molecule.label FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id WHERE bond.bond_type = '-' ORDER BY molecule.label LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 472, "question": "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?", "sql": "select distinct schools.website from satscores inner join schools on satscores.cds = schools.cdscode inner join frpm on schools.cdscode = frpm.cdscode where satscores.cname = 'Los Angeles' and satscores.numtsttakr between 2000 and 3000", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select distinct schools.website from satscores inner join schools on satscores.cds = schools.cdscode inner join frpm on schools.cdscode = frpm.cdscode where satscores.cname = 'Los Angeles' and satscores.numtsttakr between 2000 and 3000\n\nIs the SQL semantically correct?"}
{"id": 473, "question": "Which of the play format has the highest number of banned status? Indicate the play format and the names of all the card meet the condition.", "sql": "select legalities.format , cards.name from legalities inner join cards on legalities.uuid = cards.uuid where legalities.status = 'Banned' group by legalities.format , cards.name order by count(legalities.status) desc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of the play format has the highest number of banned status? Indicate the play format and the names of all the card meet the condition.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select legalities.format , cards.name from legalities inner join cards on legalities.uuid = cards.uuid where legalities.status = 'Banned' group by legalities.format , cards.name order by count(legalities.status) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 474, "question": "What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?", "sql": "select cast(sum(case when schools.fundingtype = 'Locally funded' then 1 else 0 end) as real) * 100 / count(schools.fundingtype) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.county = 'Santa Clara'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio in percentage of Santa Clara County schools that are locally funded compared to all other types of charter school funding?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select cast(sum(case when schools.fundingtype = 'Locally funded' then 1 else 0 end) as real) * 100 / count(schools.fundingtype) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.county = 'Santa Clara'\n\nIs the SQL semantically correct?"}
{"id": 475, "question": "Which driver was in the no. 4 grid formation when starting the race in 1989's Australian Grand Prix? Please give his forename and surname.", "sql": "SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.grid = 4", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which driver was in the no. 4 grid formation when starting the race in 1989's Australian Grand Prix? Please give his forename and surname.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.forename, T3.surname FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.grid = 4\n\nIs the SQL semantically correct?"}
{"id": 476, "question": "For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?", "sql": "select count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) > 50", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all patients with triglyceride (TG) level beyond the normal range, how many are age more than 50 years?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) > 50\n\nIs the SQL semantically correct?"}
{"id": 477, "question": "Which driver was in the no. 4 grid formation when starting the race in 1989's Australian Grand Prix? Please give his forename and surname.", "sql": "select drivers.forename , drivers.surname from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year = 2008 and results.grid = 4", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which driver was in the no. 4 grid formation when starting the race in 1989's Australian Grand Prix? Please give his forename and surname.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.surname from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year = 2008 and results.grid = 4\n\nIs the SQL semantically correct?"}
{"id": 478, "question": "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.", "sql": "SELECT T2.laps, T1.name, T1.year, T3.location FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId ORDER BY T2.laps DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.laps, T1.name, T1.year, T3.location FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId ORDER BY T2.laps DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 479, "question": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?", "sql": "SELECT cast((sum(CASE WHEN strftime('%Y', `date`) = '2012' THEN consumption ELSE 0 END) - sum(CASE WHEN strftime('%Y', `date`) = '2013' THEN consumption ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN strftime('%Y', `date`) = '2012' THEN consumption ELSE 0 END) FROM `yearmonth`", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT cast((sum(CASE WHEN strftime('%Y', `date`) = '2012' THEN consumption ELSE 0 END) - sum(CASE WHEN strftime('%Y', `date`) = '2013' THEN consumption ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN strftime('%Y', `date`) = '2012' THEN consumption ELSE 0 END) FROM `yearmonth`\n\nIs the SQL semantically correct?"}
{"id": 480, "question": "Identify by their ID the molecules in which there is carbon.", "sql": "SELECT DISTINCT molecule_id FROM atom WHERE element = 'si'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify by their ID the molecules in which there is carbon.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT molecule_id FROM atom WHERE element = 'si'\n\nIs the SQL semantically correct?"}
{"id": 481, "question": "Which top 4 leagues had the most games in the 2015-2016 season?", "sql": "select team.team_long_name from team inner join match on team.team_api_id = match.home_team_api_id or team.team_api_id = match.away_team_api_id where match.season = '2015/2016' group by team.team_long_name order by count(team.id) desc limit 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which top 4 leagues had the most games in the 2015-2016 season?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_long_name from team inner join match on team.team_api_id = match.home_team_api_id or team.team_api_id = match.away_team_api_id where match.season = '2015/2016' group by team.team_long_name order by count(team.id) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 482, "question": "Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.", "sql": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid ORDER BY results.fastestlapspeed DESC LIMIT 1", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid ORDER BY results.fastestlapspeed DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 483, "question": "Please list the lap records for the circuits in Italy.", "sql": "SELECT T3.circuitId, MIN(T1.time) AS fastest_lap_time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' GROUP BY T3.circuitId", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the lap records for the circuits in Italy.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.circuitId, MIN(T1.time) AS fastest_lap_time FROM lapTimes AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T3.country = 'Italy' GROUP BY T3.circuitId\n\nIs the SQL semantically correct?"}
{"id": 484, "question": "Among the card designed by Matthew D. Wilson, how many are available only in the paper?", "sql": "SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the card designed by Matthew D. Wilson, how many are available only in the paper?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE artist = 'Matthew D. Wilson' AND availability = 'paper'\n\nIs the SQL semantically correct?"}
{"id": 485, "question": "What was the age of the youngest patient when they initially arrived at the hospital?", "sql": "SELECT max(strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday)) FROM patient", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the age of the youngest patient when they initially arrived at the hospital?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT max(strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday)) FROM patient\n\nIs the SQL semantically correct?"}
{"id": 486, "question": "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.", "sql": "SELECT patient.id, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday) AS age FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.hct > 52 GROUP BY patient.id HAVING count(patient.id) > 2", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', birthday) AS age FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.hct > 52 GROUP BY patient.id HAVING count(patient.id) > 2\n\nIs the SQL semantically correct?"}
{"id": 487, "question": "Which customers, paying in CZK, consumed the most gas in 2011?", "sql": "select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where strftime('%Y' , yearmonth.date) = '2011' and customers.currency = 'CZK' order by yearmonth.consumption desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which customers, paying in CZK, consumed the most gas in 2011?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where strftime('%Y' , yearmonth.date) = '2011' and customers.currency = 'CZK' order by yearmonth.consumption desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 488, "question": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?", "sql": "SELECT ((SELECT T2.Consumption FROM yearmonth AS T2 WHERE T2.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8) AND T2.Date LIKE '2012%') - (SELECT T3.Consumption FROM yearmonth AS T3 WHERE T3.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8) AND T3.Date LIKE '2013%')) / (SELECT T2.Consumption FROM yearmonth AS T2 WHERE T2.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8) AND T2.Date LIKE '2012%') AS ConsumptionDecreaseRate", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT ((SELECT T2.Consumption FROM yearmonth AS T2 WHERE T2.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8) AND T2.Date LIKE '2012%') - (SELECT T3.Consumption FROM yearmonth AS T3 WHERE T3.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8) AND T3.Date LIKE '2013%')) / (SELECT T2.Consumption FROM yearmonth AS T2 WHERE T2.CustomerID = (SELECT T1.CustomerID FROM transactions_1k AS T1 WHERE T1.Date = '2012-08-25' AND T1.Price = 634.8) AND T2.Date LIKE '2012%') AS ConsumptionDecreaseRate\n\nIs the SQL semantically correct?"}
{"id": 489, "question": "How many players whose first names are Adam and weigh more than 170?", "sql": "SELECT count(player.player_name) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.weight > 170 AND player.player_name LIKE 'Adam%'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many players whose first names are Adam and weigh more than 170?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT count(player.player_name) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.weight > 170 AND player.player_name LIKE 'Adam%'\n\nIs the SQL semantically correct?"}
{"id": 490, "question": "How many cards in the set Coldsnap have a black border color?", "sql": "select count(cards.id) from cards inner join sets on cards.id = sets.id where cards.bordercolor = 'black' and sets.name = 'Coldsnap'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards in the set Coldsnap have a black border color?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.id) from cards inner join sets on cards.id = sets.id where cards.bordercolor = 'black' and sets.name = 'Coldsnap'\n\nIs the SQL semantically correct?"}
{"id": 491, "question": "Describe the last accessed date and location of the users who received the outliers badge.", "sql": "select users.lastaccessdate , users.location from badges inner join users on badges.userid = users.id where badges.name = 'outliers'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Describe the last accessed date and location of the users who received the outliers badge.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.lastaccessdate , users.location from badges inner join users on badges.userid = users.id where badges.name = 'outliers'\n\nIs the SQL semantically correct?"}
{"id": 492, "question": "Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability.\" that do not have multiple faces.", "sql": "SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability' AND T1.side IS NULL", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Indicates the number of cards with pre-modern format, ruling text \"This is a triggered mana ability.\" that do not have multiple faces.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(T1.uuid) FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid INNER JOIN rulings AS T3 ON T1.uuid = T3.uuid WHERE T2.format = 'premodern' AND T3.text = 'This is a triggered mana ability' AND T1.side IS NULL\n\nIs the SQL semantically correct?"}
{"id": 493, "question": "Please provide the IDs of the 3 female clients with the largest loans.", "sql": "SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide the IDs of the 3 female clients with the largest loans.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN loan AS T3 ON T2.account_id = T3.account_id WHERE T1.gender = 'F' ORDER BY T3.amount DESC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 494, "question": "What is the owner's display name of the most popular post?", "sql": "select ownerdisplayname from posts order by viewcount desc limit 1", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the owner's display name of the most popular post?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select ownerdisplayname from posts order by viewcount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 495, "question": "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.", "sql": "select foreign_data.language , foreign_data.flavortext , cards.type from cards inner join foreign_data on cards.uuid = foreign_data.uuid where cards.watermark = 'colorpie'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.language , foreign_data.flavortext , cards.type from cards inner join foreign_data on cards.uuid = foreign_data.uuid where cards.watermark = 'colorpie'\n\nIs the SQL semantically correct?"}
{"id": 496, "question": "How many owner and disponent dispositions are there from account number 1 to account number 10?", "sql": "select count(account_id) from disp where account_id between 1 and 10", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many owner and disponent dispositions are there from account number 1 to account number 10?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(account_id) from disp where account_id between 1 and 10\n\nIs the SQL semantically correct?"}
{"id": 497, "question": "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?", "sql": "select posts.id , comments.id from posts inner join comments on posts.id = comments.postid where posts.title = 'Group differences on a five point Likert item'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select posts.id , comments.id from posts inner join comments on posts.id = comments.postid where posts.title = 'Group differences on a five point Likert item'\n\nIs the SQL semantically correct?"}
{"id": 498, "question": "What is the average time in seconds of champion for each year, before year 1975?", "sql": "SELECT T1.year, AVG(SUBSTR(T2.time, 1, 2) * 3600 + SUBSTR(T2.time, 4, 2) * 60 + SUBSTR(T2.time, 7, 2) + SUBSTR(T2.time, 10, 3) * 0.001) AS average_seconds FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.time IS NOT NULL GROUP BY T1.year", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average time in seconds of champion for each year, before year 1975?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.year, AVG(SUBSTR(T2.time, 1, 2) * 3600 + SUBSTR(T2.time, 4, 2) * 60 + SUBSTR(T2.time, 7, 2) + SUBSTR(T2.time, 10, 3) * 0.001) AS average_seconds FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T2.time IS NOT NULL GROUP BY T1.year\n\nIs the SQL semantically correct?"}
{"id": 499, "question": "How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created.", "sql": "select strftime('%J' , badges.date) - strftime('%J' , users.creationdate) as days from users inner join badges on users.id = badges.userid where users.displayname = 'Zolomon'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How long did it take the user, known by his or her display name 'Zolomon' to get the badge? Count from the date the user's account was created.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select strftime('%J' , badges.date) - strftime('%J' , users.creationdate) as days from users inner join badges on users.id = badges.userid where users.displayname = 'Zolomon'\n\nIs the SQL semantically correct?"}
{"id": 500, "question": "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?", "sql": "SELECT DISTINCT schools.school, schools.fundingtype FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.city = 'Riverside' AND satscores.avgscrmath > 400", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT DISTINCT schools.school, schools.fundingtype FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.city = 'Riverside' AND satscores.avgscrmath > 400\n\nIs the SQL semantically correct?"}
{"id": 501, "question": "What is the rule of playing card \"Benalish Knight\"?", "sql": "select legalities.format from cards inner join legalities on cards.uuid = legalities.uuid where cards.name = 'Benalish Knight'", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the rule of playing card \"Benalish Knight\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select legalities.format from cards inner join legalities on cards.uuid = legalities.uuid where cards.name = 'Benalish Knight'\n\nIs the SQL semantically correct?"}
{"id": 502, "question": "List the players' api id who had the highest above average overall ratings in 2010.", "sql": "SELECT player_api_id FROM player_attributes WHERE substr(date, 1, 4) = '2010' ORDER BY overall_rating DESC LIMIT 1", "db_id": "european_football_2", "label": true, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the players' api id who had the highest above average overall ratings in 2010.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_api_id FROM player_attributes WHERE substr(date, 1, 4) = '2010' ORDER BY overall_rating DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 503, "question": "Identify the type of expenses and their total value approved for 'October Meeting' event.", "sql": "SELECT expense.expense_description, sum(expense.cost) FROM expense INNER JOIN attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND expense.approved = 'true' GROUP BY expense.expense_description", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the type of expenses and their total value approved for 'October Meeting' event.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT expense.expense_description, sum(expense.cost) FROM expense INNER JOIN attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'October Meeting' AND expense.approved = 'true' GROUP BY expense.expense_description\n\nIs the SQL semantically correct?"}
{"id": 504, "question": "How many customers in KAM had a consumption of less than 30,000 for the year 2012?", "sql": "SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Date BETWEEN 201201 AND 201212 AND T2.Consumption < 30000", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many customers in KAM had a consumption of less than 30,000 for the year 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT COUNT(T1.CustomerID) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T2.Date BETWEEN 201201 AND 201212 AND T2.Consumption < 30000\n\nIs the SQL semantically correct?"}
{"id": 505, "question": "How many schools with an average score in Math greater than 400 in the SAT test are exclusively virtual?", "sql": "SELECT count(schools.school) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.virtual = 'P' AND satscores.avgscrmath < 400", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many schools with an average score in Math greater than 400 in the SAT test are exclusively virtual?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT count(schools.school) FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.virtual = 'P' AND satscores.avgscrmath < 400\n\nIs the SQL semantically correct?"}
{"id": 506, "question": "Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.", "sql": "select patient.id , patient.sex from patient inner join laboratory on patient.id = laboratory.id where patient.diagnosis = 'SLE' and laboratory.hgb >= 10 and patient.birthday < 17 order by patient.birthday asc limit 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who were diagnosed with SLE, who is the oldest with normal hemoglobin level. Provide the ID and sex.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id , patient.sex from patient inner join laboratory on patient.id = laboratory.id where patient.diagnosis = 'SLE' and laboratory.hgb >= 10 and patient.birthday < 17 order by patient.birthday asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 507, "question": "Among the account opened, how many female customers who were born before 1950 and stayed in Sokolov?", "sql": "select count(client.gender) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where client.gender = 'F' and district.a2 = 'Slokolov' and client.birth_date between 1950 and 1950", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the account opened, how many female customers who were born before 1950 and stayed in Sokolov?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(client.gender) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where client.gender = 'F' and district.a2 = 'Slokolov' and client.birth_date between 1950 and 1950\n\nIs the SQL semantically correct?"}
{"id": 508, "question": "What type of label is not on molecules with atoms with tin?", "sql": "SELECT DISTINCT molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element != 'sn' AND molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What type of label is not on molecules with atoms with tin?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT molecule.label FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE atom.element != 'sn' AND molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 509, "question": "In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?", "sql": "SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the College of Agriculture and Applied Sciences, how many majors are under the department of School of Applied Sciences, Technology and Education?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT COUNT(*) FROM major WHERE college = 'College of Agriculture and Applied Sciences' AND department = 'School of Applied Sciences, Technology and Education'\n\nIs the SQL semantically correct?"}
{"id": 510, "question": "What is the type of card \"Benalish Knight\"?", "sql": "SELECT type FROM cards WHERE name = 'Benalish Knight'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the type of card \"Benalish Knight\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT type FROM cards WHERE name = 'Benalish Knight'\n\nIs the SQL semantically correct?"}
{"id": 511, "question": "What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?", "sql": "SELECT patient.sex FROM patient INNER JOIN examination ON patient.id = examination.id INNER JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp > 2 AND laboratory.cre = 1 AND laboratory.ldh = 123", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What sex is the patient who in a medical examination was diagnosed with PSS and in a laboratory examination had a blood level of C-reactive protein de 2+, createnine 1 and LDH 123?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.sex FROM patient INNER JOIN examination ON patient.id = examination.id INNER JOIN laboratory ON patient.id = laboratory.id WHERE examination.diagnosis = 'PSS' AND laboratory.crp > 2 AND laboratory.cre = 1 AND laboratory.ldh = 123\n\nIs the SQL semantically correct?"}
{"id": 512, "question": "What was the release date for the set which card \"Evacuation\" in it?", "sql": "SELECT sets.releasedate FROM cards INNER JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Evacuation'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the release date for the set which card \"Evacuation\" in it?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT sets.releasedate FROM cards INNER JOIN sets ON cards.setcode = sets.code WHERE cards.name = 'Evacuation'\n\nIs the SQL semantically correct?"}
{"id": 513, "question": "What is the total number of molecules with double bonded oxygen?", "sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'o' AND T3.bond_type = '='", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total number of molecules with double bonded oxygen?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(DISTINCT T1.molecule_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'o' AND T3.bond_type = '='\n\nIs the SQL semantically correct?"}
{"id": 514, "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.", "sql": "select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_fifa_api_id order by player_attributes.crossing desc limit 5", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who are the top 5 players who perform better in crossing actions? Indicate their player id.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_fifa_api_id order by player_attributes.crossing desc limit 5\n\nIs the SQL semantically correct?"}
{"id": 515, "question": "For the drivers who took part in the race in 1983/7/16, what's their race completion rate?", "sql": "select cast(sum(case when results.time = 0 then 1 else 0 end) as real) * 100 / count(*) from results inner join races on results.raceid = races.raceid where races.date = '1983-07-16'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the drivers who took part in the race in 1983/7/16, what's their race completion rate?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when results.time = 0 then 1 else 0 end) as real) * 100 / count(*) from results inner join races on results.raceid = races.raceid where races.date = '1983-07-16'\n\nIs the SQL semantically correct?"}
{"id": 516, "question": "Of all the carcinogenic molecules, which one has the most double bonds?", "sql": "select molecule.molecule_id from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' and molecule.label = '+' group by molecule.molecule_id order by count(bond.bond_type) desc limit 1", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Of all the carcinogenic molecules, which one has the most double bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.molecule_id from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' and molecule.label = '+' group by molecule.molecule_id order by count(bond.bond_type) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 517, "question": "How many events did the member with the phone number \"954-555-6240\" attend?", "sql": "SELECT COUNT(T2.link_to_event) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.phone = '954-555-6240'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many events did the member with the phone number \"954-555-6240\" attend?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT COUNT(T2.link_to_event) FROM member AS T1 INNER JOIN attendance AS T2 ON T1.member_id = T2.link_to_member WHERE T1.phone = '954-555-6240'\n\nIs the SQL semantically correct?"}
{"id": 518, "question": "What percentage of carcinogenic-type molecules does not contain fluorine?", "sql": "select cast(sum(case when atom.element = 'f' then 1 else 0 end) as real) * 100 / count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of carcinogenic-type molecules does not contain fluorine?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when atom.element = 'f' then 1 else 0 end) as real) * 100 / count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 519, "question": "Which districts have transactions greater than USS$10,000 in 1997?", "sql": "select district.a2 from account inner join trans on account.account_id = trans.account_id inner join district on account.district_id = district.district_id where trans.amount > 10000 and trans.date = '1997'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which districts have transactions greater than USS$10,000 in 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select district.a2 from account inner join trans on account.account_id = trans.account_id inner join district on account.district_id = district.district_id where trans.amount > 10000 and trans.date = '1997'\n\nIs the SQL semantically correct?"}
{"id": 520, "question": "What is the preferred foot when attacking of the player with the lowest potential?", "sql": "SELECT preferred_foot FROM Player_Attributes WHERE potential IS NOT NULL ORDER BY potential ASC LIMIT 1", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the preferred foot when attacking of the player with the lowest potential?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT preferred_foot FROM Player_Attributes WHERE potential IS NOT NULL ORDER BY potential ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 521, "question": "List all the names of events that had an attendance of over 20 students but were not fundraisers.", "sql": "select event_name from event where event_id > 20", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the names of events that had an attendance of over 20 students but were not fundraisers.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select event_name from event where event_id > 20\n\nIs the SQL semantically correct?"}
{"id": 522, "question": "What is the full name and date of birth of Austrian drivers born between 1981 and 1991?", "sql": "select forename , surname , dob from drivers where nationality = 'Austria' and strftime('%Y' , dob) between '1981' and '1991'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the full name and date of birth of Austrian drivers born between 1981 and 1991?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select forename , surname , dob from drivers where nationality = 'Austria' and strftime('%Y' , dob) between '1981' and '1991'\n\nIs the SQL semantically correct?"}
{"id": 523, "question": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.", "sql": "select drivers.surname , drivers.forename from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid where results.fastestlaptime is not null order by laptimes.time asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.surname , drivers.forename from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid where results.fastestlaptime is not null order by laptimes.time asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 524, "question": "What is Ajax's highest chance creation passing score and what is it classified as?", "sql": "SELECT team_attributes.chancecreationpassing, team_attributes.chancecreationpassingclass FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_long_name = 'Ajax' ORDER BY team_attributes.chancecreationpassing DESC LIMIT 1", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is Ajax's highest chance creation passing score and what is it classified as?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT team_attributes.chancecreationpassing, team_attributes.chancecreationpassingclass FROM team INNER JOIN team_attributes ON team.team_api_id = team_attributes.team_api_id WHERE team.team_long_name = 'Ajax' ORDER BY team_attributes.chancecreationpassing DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 525, "question": "When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?", "sql": "select races.year from circuits inner join races on circuits.circuitid = races.circuitid where races.name = 'British Grand Prix' and circuits.name = 'Brands Hatch' order by races.year desc limit 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: When was the last f1 season whereby Brands Hatch hosted the British Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.year from circuits inner join races on circuits.circuitid = races.circuitid where races.name = 'British Grand Prix' and circuits.name = 'Brands Hatch' order by races.year desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 526, "question": "What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?", "sql": "select molecule.label from atom inner join molecule on atom.molecule_id = molecule.molecule_id inner join connected on atom.atom_id = connected.atom_id2 where atom.atom_id = 'TR000_2' and connected.atom_id2 = 'TR000_4'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the molecule of atom id \"TR000_2\" and atom id 2 \"TR000_4\"?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.label from atom inner join molecule on atom.molecule_id = molecule.molecule_id inner join connected on atom.atom_id = connected.atom_id2 where atom.atom_id = 'TR000_2' and connected.atom_id2 = 'TR000_4'\n\nIs the SQL semantically correct?"}
{"id": 527, "question": "What is the percentage difference of student badges given during 2010 and 2011?", "sql": "SELECT cast((sum(CASE WHEN strftime('%Y', badges.date) = '2010' THEN 1 ELSE 0 END) - sum(CASE WHEN strftime('%Y', badges.date) = '2011' THEN 1 ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN strftime('%Y', badges.date) = '2010' THEN 1 ELSE 0 END) FROM badges WHERE name = 'Student'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage difference of student badges given during 2010 and 2011?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT cast((sum(CASE WHEN strftime('%Y', badges.date) = '2010' THEN 1 ELSE 0 END) - sum(CASE WHEN strftime('%Y', badges.date) = '2011' THEN 1 ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN strftime('%Y', badges.date) = '2010' THEN 1 ELSE 0 END) FROM badges WHERE name = 'Student'\n\nIs the SQL semantically correct?"}
{"id": 528, "question": "How many American drivers have puncture status.", "sql": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'American' AND T2.statusId = 2", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many American drivers have puncture status.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'American' AND T2.statusId = 2\n\nIs the SQL semantically correct?"}
{"id": 529, "question": "What is the examination date of the patient whose albumin is the highest in the normal range?", "sql": "SELECT examination.`examination date` FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE laboratory.alb > 3.5 AND laboratory.alb < 5.5 ORDER BY laboratory.alb DESC LIMIT 1", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the examination date of the patient whose albumin is the highest in the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT examination.`examination date` FROM laboratory INNER JOIN examination ON laboratory.id = examination.id WHERE laboratory.alb > 3.5 AND laboratory.alb < 5.5 ORDER BY laboratory.alb DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 530, "question": "List all the football player with the highest balance score and potential score of 61.", "sql": "select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.balance = 10 and player_attributes.potential = 61 order by player_attributes.balance desc limit 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the football player with the highest balance score and potential score of 61.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.balance = 10 and player_attributes.potential = 61 order by player_attributes.balance desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 531, "question": "Point out the language of set id \"174\"?", "sql": "select foreign_data.language from set_translations inner join foreign_data on set_translations.id = foreign_data.id where set_translations.id = 174", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Point out the language of set id \"174\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.language from set_translations inner join foreign_data on set_translations.id = foreign_data.id where set_translations.id = 174\n\nIs the SQL semantically correct?"}
{"id": 532, "question": "How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with Behcet disease did not stay in the hospital for treatment?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Admission = '-' AND T1.Diagnosis = 'BEHCET' AND strftime('%Y', T2.`Examination Date`) BETWEEN '1995' AND '1997'", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many male patients who underwent testing between 1995 and 1997 and were subsequently diagnosed with Behcet disease did not stay in the hospital for treatment?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'M' AND T1.Admission = '-' AND T1.Diagnosis = 'BEHCET' AND strftime('%Y', T2.`Examination Date`) BETWEEN '1995' AND '1997'\n\nIs the SQL semantically correct?"}
{"id": 533, "question": "Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.", "sql": "select races.date from races inner join circuits on races.circuitid = circuits.circuitid where circuits.name = 'Barcelona-Catalunya'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the exact dates on which a Formula_1 race took place on the Barcelona-Catalunya circuit.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.date from races inner join circuits on races.circuitid = circuits.circuitid where circuits.name = 'Barcelona-Catalunya'\n\nIs the SQL semantically correct?"}
{"id": 534, "question": "What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category?", "sql": "SELECT budget.category, budget.amount FROM budget INNER JOIN EVENT ON budget.link_to_event = EVENT.event_id WHERE EVENT.event_name = 'January Speaker'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What category was budgeted for the 'January Speaker' event and how much was the amount budgeted for that category?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT budget.category, budget.amount FROM budget INNER JOIN EVENT ON budget.link_to_event = EVENT.event_id WHERE EVENT.event_name = 'January Speaker'\n\nIs the SQL semantically correct?"}
{"id": 535, "question": "Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?", "sql": "SELECT cast(sum(CASE WHEN event.event_name = 'Yearly Kickoff' THEN expense.cost ELSE 0 END) AS REAL) * 100 / sum(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Based on the total cost for all event, what is the percentage of cost for Yearly Kickoff event?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT cast(sum(CASE WHEN event.event_name = 'Yearly Kickoff' THEN expense.cost ELSE 0 END) AS REAL) * 100 / sum(expense.cost) FROM expense INNER JOIN budget ON expense.link_to_budget = budget.budget_id INNER JOIN event ON budget.link_to_event = event.event_id\n\nIs the SQL semantically correct?"}
{"id": 536, "question": "How many French drivers who obtain the laptime less than 02:00.00?", "sql": "SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.milliseconds < 120000", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many French drivers who obtain the laptime less than 02:00.00?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(DISTINCT T1.driverId) FROM drivers AS T1 INNER JOIN lapTimes AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'French' AND T2.milliseconds < 120000\n\nIs the SQL semantically correct?"}
{"id": 537, "question": "How many elements are there for single bond molecules?", "sql": "select count(connected.atom_id2) from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many elements are there for single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(connected.atom_id2) from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 538, "question": "How many types of cards does the artist Aaron Boyd illustrated about card art?", "sql": "SELECT COUNT(DISTINCT types) FROM cards WHERE artist = 'Aaron Boyd'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many types of cards does the artist Aaron Boyd illustrated about card art?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(DISTINCT types) FROM cards WHERE artist = 'Aaron Boyd'\n\nIs the SQL semantically correct?"}
{"id": 539, "question": "What is the difference between players 6 and 23's jumping scores?", "sql": "SELECT jumping FROM player_attributes WHERE id = 6 OR id = 23", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference between players 6 and 23's jumping scores?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT jumping FROM player_attributes WHERE id = 6 OR id = 23\n\nIs the SQL semantically correct?"}
{"id": 540, "question": "Rank schools by their average score in Writing where the score is greater than 499, showing their charter numbers.", "sql": "select schools.charter from schools inner join satscores on schools.cdscode = satscores.cds where satscores.avgscrwrite = 499", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Rank schools by their average score in Writing where the score is greater than 499, showing their charter numbers.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.charter from schools inner join satscores on schools.cdscode = satscores.cds where satscores.avgscrwrite = 499\n\nIs the SQL semantically correct?"}
{"id": 541, "question": "Which user have only one post history per post and having at least 1000 views?", "sql": "select posthistory.userid from users inner join posthistory on users.id = posthistory.userid where users.views >= 1000 and posthistory.postid = 1 limit 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user have only one post history per post and having at least 1000 views?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select posthistory.userid from users inner join posthistory on users.id = posthistory.userid where users.views >= 1000 and posthistory.postid = 1 limit 1\n\nIs the SQL semantically correct?"}
{"id": 542, "question": "Count the number of posts with a tag specified as 'careers'.", "sql": "SELECT T1.Count FROM tags AS T1 WHERE T1.TagName = 'careers'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Count the number of posts with a tag specified as 'careers'.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.Count FROM tags AS T1 WHERE T1.TagName = 'careers'\n\nIs the SQL semantically correct?"}
{"id": 543, "question": "Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.", "sql": "select cards.id from cards inner join legalities on cards.uuid = legalities.uuid where cards.artist = 'Erica Yang' and cards.availability = 'paper' and legalities.format = 'pauper'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.id from cards inner join legalities on cards.uuid = legalities.uuid where cards.artist = 'Erica Yang' and cards.availability = 'paper' and legalities.format = 'pauper'\n\nIs the SQL semantically correct?"}
{"id": 544, "question": "Determine the bond type that is formed in the chemical compound containing element Carbon.", "sql": "SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'te'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Determine the bond type that is formed in the chemical compound containing element Carbon.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T3.bond_type FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T1.element = 'te'\n\nIs the SQL semantically correct?"}
{"id": 545, "question": "For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.", "sql": "select distinct yearmonth.consumption from yearmonth inner join transactions_1k on yearmonth.customerid = transactions_1k.customerid where yearmonth.date like '2012-08%' and transactions_1k.productid = 5 and transactions_1k.price > 29 * transactions_1k.amount", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the people who paid more than 29.00 per unit of product id No.5. Give their consumption status in the August of 2012.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select distinct yearmonth.consumption from yearmonth inner join transactions_1k on yearmonth.customerid = transactions_1k.customerid where yearmonth.date like '2012-08%' and transactions_1k.productid = 5 and transactions_1k.price > 29 * transactions_1k.amount\n\nIs the SQL semantically correct?"}
{"id": 546, "question": "Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?", "sql": "SELECT COUNT(T1.GasStationID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND T2.Date > '2012-01-01'", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the transactions made in the gas stations in the Czech Republic, how many of them are taken place after 2012/1/1?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT COUNT(T1.GasStationID) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE' AND T2.Date > '2012-01-01'\n\nIs the SQL semantically correct?"}
{"id": 547, "question": "Name the races along with its circuit name and location for f1 races hosted in September 2005.", "sql": "SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2005 AND SUBSTR(T1.date, 6, 2) = '09'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the races along with its circuit name and location for f1 races hosted in September 2005.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.name, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2005 AND SUBSTR(T1.date, 6, 2) = '09'\n\nIs the SQL semantically correct?"}
{"id": 548, "question": "List out the id number of client who choose statement of issuance after transaction are Disponent?", "sql": "select client.client_id from client inner join disp on client.client_id = disp.client_id inner join account on disp.account_id = account.account_id where account.frequency = 'POPLATEK PO OBRATU'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the id number of client who choose statement of issuance after transaction are Disponent?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id from client inner join disp on client.client_id = disp.client_id inner join account on disp.account_id = account.account_id where account.frequency = 'POPLATEK PO OBRATU'\n\nIs the SQL semantically correct?"}
{"id": 549, "question": "Please list top five molecules that have double bonds in alphabetical order.", "sql": "select molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' limit 5", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list top five molecules that have double bonds in alphabetical order.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' limit 5\n\nIs the SQL semantically correct?"}
{"id": 550, "question": "Provide the eye colours of the heroes whose skin colours are gold.", "sql": "SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Gold'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the eye colours of the heroes whose skin colours are gold.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT colour.colour FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Gold'\n\nIs the SQL semantically correct?"}
{"id": 551, "question": "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?", "sql": "SELECT satscores.numtsttakr FROM frpm INNER JOIN satscores ON frpm.`school code` = satscores.sname ORDER BY frpm.`frpm count (k-12)` DESC LIMIT 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT satscores.numtsttakr FROM frpm INNER JOIN satscores ON frpm.`school code` = satscores.sname ORDER BY frpm.`frpm count (k-12)` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 552, "question": "Which molecule consisted of Sulphur atom with double bond?", "sql": "SELECT T3.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '=' AND T3.element = 's'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which molecule consisted of Sulphur atom with double bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T3.molecule_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '=' AND T3.element = 's'\n\nIs the SQL semantically correct?"}
{"id": 553, "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?", "sql": "select count(molecule.molecule_id) from molecule inner join bond on molecule.molecule_id = bond.molecule_id where molecule.molecule_id between 'TR004' and 'TR010' and bond.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the molecules between TR004 to TR010, how many of them has single bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from molecule inner join bond on molecule.molecule_id = bond.molecule_id where molecule.molecule_id between 'TR004' and 'TR010' and bond.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 554, "question": "How many cards have frame effect as extendedart? List out the id of those cards.", "sql": "select count(id) from cards where frameeffects = 'extendedart'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards have frame effect as extendedart? List out the id of those cards.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(id) from cards where frameeffects = 'extendedart'\n\nIs the SQL semantically correct?"}
{"id": 555, "question": "List all carcinogenic molecules and their elements.", "sql": "select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+' and atom.element = 'cl'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all carcinogenic molecules and their elements.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+' and atom.element = 'cl'\n\nIs the SQL semantically correct?"}
{"id": 556, "question": "What's the unconverted mana cost of the card \"Ancestor's Chosen\"?", "sql": "select convertedmanacost from cards where name = 'Ancestor''s Chosen'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the unconverted mana cost of the card \"Ancestor's Chosen\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select convertedmanacost from cards where name = 'Ancestor''s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 557, "question": "Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?", "sql": "SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the molecules with element Calcium, are they mostly carcinogenic or non carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'ca' GROUP BY T2.label ORDER BY COUNT(T2.label) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 558, "question": "Which year has the lowest speed of lap time?", "sql": "SELECT races.year FROM races INNER JOIN results ON races.raceid = results.raceid ORDER BY results.fastestlapspeed DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which year has the lowest speed of lap time?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT races.year FROM races INNER JOIN results ON races.raceid = results.raceid ORDER BY results.fastestlapspeed DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 559, "question": "How many French constructors have a lap number of over 50?", "sql": "SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'French' AND T3.lap > 50", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many French constructors have a lap number of over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(DISTINCT T1.constructorId) FROM constructors AS T1 INNER JOIN results AS T2 ON T1.constructorId = T2.constructorId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId WHERE T1.nationality = 'French' AND T3.lap > 50\n\nIs the SQL semantically correct?"}
{"id": 560, "question": "Please list top three unknown power cards that have promotional types for arena league in alphabetical order.", "sql": "select name from cards where power is null or power like '*' order by promotypes desc limit 3", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list top three unknown power cards that have promotional types for arena league in alphabetical order.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select name from cards where power is null or power like '*' order by promotypes desc limit 3\n\nIs the SQL semantically correct?"}
{"id": 561, "question": "What is the average overall rating of the players born before the year 1986?", "sql": "select avg(player_attributes.overall_rating) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where strftime('%Y' , player.birthday) < '1986'", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average overall rating of the players born before the year 1986?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select avg(player_attributes.overall_rating) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where strftime('%Y' , player.birthday) < '1986'\n\nIs the SQL semantically correct?"}
{"id": 562, "question": "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?", "sql": "SELECT count(drivers.driverid) FROM drivers INNER JOIN driverstandings ON drivers.driverid = driverstandings.driverid WHERE drivers.nationality = 'Dutch' ORDER BY strftime('%Y', drivers.dob) DESC LIMIT 3", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT count(drivers.driverid) FROM drivers INNER JOIN driverstandings ON drivers.driverid = driverstandings.driverid WHERE drivers.nationality = 'Dutch' ORDER BY strftime('%Y', drivers.dob) DESC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 563, "question": "List out the code for drivers who have nationality in America.", "sql": "SELECT code FROM drivers WHERE nationality = 'America'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the code for drivers who have nationality in America.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT code FROM drivers WHERE nationality = 'America'\n\nIs the SQL semantically correct?"}
{"id": 564, "question": "What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?", "sql": "select avg(laptimes.milliseconds) from results inner join circuits on results.raceid = circuits.circuitid inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average lap time in milliseconds of all the lap records set on the various circuits in Italy?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select avg(laptimes.milliseconds) from results inner join circuits on results.raceid = circuits.circuitid inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy'\n\nIs the SQL semantically correct?"}
{"id": 565, "question": "Sort in descending order all patients by birthday for male patient with albumin not within range.", "sql": "SELECT patient.id, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND (laboratory.alb < 3.5 OR laboratory.alb > 5.5) ORDER BY patient.birthday DESC", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Sort in descending order all patients by birthday for male patient with albumin not within range.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id, patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND (laboratory.alb < 3.5 OR laboratory.alb > 5.5) ORDER BY patient.birthday DESC\n\nIs the SQL semantically correct?"}
{"id": 566, "question": "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?", "sql": "SELECT COUNT(T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE strftime('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT COUNT(T1.player_api_id) FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE strftime('%Y', T1.birthday) < '1986' AND T2.defensive_work_rate = 'high'\n\nIs the SQL semantically correct?"}
{"id": 567, "question": "Which users have posted the most comments. List out the user's badge?", "sql": "SELECT badges.userid, badges.name FROM badges INNER JOIN comments ON badges.userid = comments.userid GROUP BY badges.userid, badges.name ORDER BY count(comments.id) DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which users have posted the most comments. List out the user's badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT badges.userid, badges.name FROM badges INNER JOIN comments ON badges.userid = comments.userid GROUP BY badges.userid, badges.name ORDER BY count(comments.id) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 568, "question": "How much did the Student_Club members spend on food in September Meeting?", "sql": "SELECT SUM(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'September Meeting' AND T2.category = 'Food'", "db_id": "student_club", "label": true, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much did the Student_Club members spend on food in September Meeting?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT SUM(T2.spent) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'September Meeting' AND T2.category = 'Food'\n\nIs the SQL semantically correct?"}
{"id": 569, "question": "List out the id number of client who choose statement of issuance after transaction are Disponent?", "sql": "SELECT T2.client_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'Disponent'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the id number of client who choose statement of issuance after transaction are Disponent?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T2.client_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'Disponent'\n\nIs the SQL semantically correct?"}
{"id": 570, "question": "Is molecule TR151 carcinogenic?", "sql": "SELECT CASE WHEN label = '+' THEN 'YES' ELSE 'NO' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR151'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is molecule TR151 carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CASE WHEN label = '+' THEN 'YES' ELSE 'NO' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR151'\n\nIs the SQL semantically correct?"}
{"id": 571, "question": "What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?", "sql": "SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Diagnosis = 'SLE' AND T2.PLT > 400", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average blood albumin level for female patients with a PLT greater than 400 who have been diagnosed with SLE?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT AVG(T2.ALB) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND T1.Diagnosis = 'SLE' AND T2.PLT > 400\n\nIs the SQL semantically correct?"}
{"id": 572, "question": "How many atoms belong to molecule id TR001?", "sql": "select count(molecule_id) from atom where molecule_id = 'TR005'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many atoms belong to molecule id TR001?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule_id) from atom where molecule_id = 'TR005'\n\nIs the SQL semantically correct?"}
{"id": 573, "question": "How many customers in KAM had a consumption of less than 30,000 for the year 2012?", "sql": "select count(customers.customerid) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' and strftime('%Y' , yearmonth.date) between '2012-01-01' and '2012-12-31'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many customers in KAM had a consumption of less than 30,000 for the year 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select count(customers.customerid) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' and strftime('%Y' , yearmonth.date) between '2012-01-01' and '2012-12-31'\n\nIs the SQL semantically correct?"}
{"id": 574, "question": "List all the names of events that had an attendance of over 20 students but were not fundraisers.", "sql": "SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id GROUP BY event.event_name HAVING count(event.event_id) > 20", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the names of events that had an attendance of over 20 students but were not fundraisers.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT event.event_name FROM attendance INNER JOIN event ON attendance.link_to_event = event.event_id GROUP BY event.event_name HAVING count(event.event_id) > 20\n\nIs the SQL semantically correct?"}
{"id": 575, "question": "Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.", "sql": "SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the total views on the post 'Computer Game Datasets'. Name the user who posted it last time.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.ViewCount, T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Computer Game Datasets'\n\nIs the SQL semantically correct?"}
{"id": 576, "question": "From race no. 50 to 100, how many finishers have been disqualified?", "sql": "select count(results.statusid) from results inner join status on results.statusid = status.statusid where results.raceid between 50 and 100 and status.status = 2", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From race no. 50 to 100, how many finishers have been disqualified?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(results.statusid) from results inner join status on results.statusid = status.statusid where results.raceid between 50 and 100 and status.status = 2\n\nIs the SQL semantically correct?"}
{"id": 577, "question": "How many elements are contained in bond_id TR001_3_4?", "sql": "select count(atom.atom_id) from atom inner join connected on atom.atom_id = connected.atom_id where connected.bond_id = 'TR001_3_4' and atom.element = 'cl'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many elements are contained in bond_id TR001_3_4?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(atom.atom_id) from atom inner join connected on atom.atom_id = connected.atom_id where connected.bond_id = 'TR001_3_4' and atom.element = 'cl'\n\nIs the SQL semantically correct?"}
{"id": 578, "question": "How many male clients in 'Hl.m. Praha' district?", "sql": "SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Hl.m. Praha' AND T1.gender = 'M'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many male clients in 'Hl.m. Praha' district?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT COUNT(T1.gender) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Hl.m. Praha' AND T1.gender = 'M'\n\nIs the SQL semantically correct?"}
{"id": 579, "question": "How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?", "sql": "select sum(case when match.date between '2008-08' and '2008-10' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.name = 'Germany 1. Bundesliga'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many matches were held in the league Germany 1. Bundesliga\nfrom August to October 2008?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select sum(case when match.date between '2008-08' and '2008-10' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.name = 'Germany 1. Bundesliga'\n\nIs the SQL semantically correct?"}
{"id": 580, "question": "What's Christof Nielson's zip code type?", "sql": "SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's Christof Nielson's zip code type?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T2.type FROM member AS T1 INNER JOIN zip_code AS T2 ON T1.zip = T2.zip_code WHERE T1.first_name = 'Christof' AND T1.last_name = 'Nielson'\n\nIs the SQL semantically correct?"}
{"id": 581, "question": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?", "sql": "select count(results.driverid) from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and races.time is not null", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many drivers managed to finish the race in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(results.driverid) from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and races.time is not null\n\nIs the SQL semantically correct?"}
{"id": 582, "question": "What are the name of badge that users who have the highest reputation obtained?", "sql": "SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Reputation = ( SELECT MAX(Reputation) FROM users )", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the name of badge that users who have the highest reputation obtained?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.Name FROM users AS T1 INNER JOIN badges AS T2 ON T1.Id = T2.UserId WHERE T1.Reputation = ( SELECT MAX(Reputation) FROM users )\n\nIs the SQL semantically correct?"}
{"id": 583, "question": "Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?", "sql": "select artist from cards where flavorname = 'Battra , Dark Destroyer'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which artist designed the card whose promotional name is \"Battra, Dark Destroyer\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select artist from cards where flavorname = 'Battra , Dark Destroyer'\n\nIs the SQL semantically correct?"}
{"id": 584, "question": "Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user?", "sql": "select users.displayname , sum(users.reputation) from posts inner join comments on posts.id = comments.postid inner join posthistory on comments.userid = posthistory.userid inner join users on posts.owneruserid = users.id where posts.title = 'Understanding what Dassault iSight is doing?'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user made a post titled 'Understanding what Dassault iSight is doing?' and how much is the reputation of the user?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.displayname , sum(users.reputation) from posts inner join comments on posts.id = comments.postid inner join posthistory on comments.userid = posthistory.userid inner join users on posts.owneruserid = users.id where posts.title = 'Understanding what Dassault iSight is doing?'\n\nIs the SQL semantically correct?"}
{"id": 585, "question": "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.", "sql": "SELECT client.client_id, account.frequency FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN account ON district.district_id = account.district_id WHERE district.a3 = 'east Bohemia' AND strftime('%Y', account.date) BETWEEN '1995' AND '2000'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT client.client_id, account.frequency FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN account ON district.district_id = account.district_id WHERE district.a3 = 'east Bohemia' AND strftime('%Y', account.date) BETWEEN '1995' AND '2000'\n\nIs the SQL semantically correct?"}
{"id": 586, "question": "Provide the text of the latest 10 comments to the post with the title 'Analysing wind data with R' and the display name of the user who left it.", "sql": "SELECT T2.Text, T3.DisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T1.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the text of the latest 10 comments to the post with the title 'Analysing wind data with R' and the display name of the user who left it.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.Text, T3.DisplayName FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN users AS T3 ON T2.UserId = T3.Id WHERE T1.Title = 'Analysing wind data with R' ORDER BY T2.CreationDate DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 587, "question": "What is the average score of Lewis Hamilton among all the Turkish Grand Prix?", "sql": "select avg(results.points) from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverstandingsid inner join races on driverstandings.raceid = races.raceid where races.name = 'Turkish Grand Prix' and drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score of Lewis Hamilton among all the Turkish Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select avg(results.points) from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverstandingsid inner join races on driverstandings.raceid = races.raceid where races.name = 'Turkish Grand Prix' and drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'\n\nIs the SQL semantically correct?"}
{"id": 588, "question": "Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?", "sql": "SELECT COUNT(T1.cds) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.FundingType = 'Charter'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the schools with the average score in Math over 560 in the SAT test, how many schools are directly charter-funded?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT COUNT(T1.cds) FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.AvgScrMath > 560 AND T2.FundingType = 'Charter'\n\nIs the SQL semantically correct?"}
{"id": 589, "question": "How many cards have frame effect as extendedart? List out the id of those cards.", "sql": "SELECT COUNT(id) FROM cards WHERE frameEffects = 'extendedart' UNION ALL SELECT id FROM cards WHERE frameEffects = 'extendedart'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards have frame effect as extendedart? List out the id of those cards.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE frameEffects = 'extendedart' UNION ALL SELECT id FROM cards WHERE frameEffects = 'extendedart'\n\nIs the SQL semantically correct?"}
{"id": 590, "question": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.", "sql": "select cast(count(case when alignment.alignment = 'Bad' then 1 else null end) as real) * 100 / count(*) , count(case when publisher.publisher_name = 'Marvel Comics' then 1 else null end) from publisher inner join superhero on publisher.id = superhero.publisher_id inner join alignment on superhero.alignment_id = alignment.id where publisher.publisher_name = 'Marvel Comics'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select cast(count(case when alignment.alignment = 'Bad' then 1 else null end) as real) * 100 / count(*) , count(case when publisher.publisher_name = 'Marvel Comics' then 1 else null end) from publisher inner join superhero on publisher.id = superhero.publisher_id inner join alignment on superhero.alignment_id = alignment.id where publisher.publisher_name = 'Marvel Comics'\n\nIs the SQL semantically correct?"}
{"id": 591, "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.", "sql": "SELECT count(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the total carcinogenic molecules for molecule id from TR000 to TR030.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(molecule_id) FROM molecule WHERE molecule_id BETWEEN 'TR000' AND 'TR030' AND label = '+'\n\nIs the SQL semantically correct?"}
{"id": 592, "question": "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?", "sql": "SELECT iif(sets.mtgocode IS NULL, 'No', 'Yes') FROM sets INNER JOIN cards ON sets.code = cards.setcode WHERE cards.name = 'Angel of Mercy'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT iif(sets.mtgocode IS NULL, 'No', 'Yes') FROM sets INNER JOIN cards ON sets.code = cards.setcode WHERE cards.name = 'Angel of Mercy'\n\nIs the SQL semantically correct?"}
{"id": 593, "question": "What is the average time in seconds of champion for each year, before year 1975?", "sql": "select avg(results.time) from results inner join races on results.raceid = races.raceid inner join status on results.statusid = status.statusid where status.status = 'Finished' and races.year is not null", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average time in seconds of champion for each year, before year 1975?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select avg(results.time) from results inner join races on results.raceid = races.raceid inner join status on results.statusid = status.statusid where status.status = 'Finished' and races.year is not null\n\nIs the SQL semantically correct?"}
{"id": 594, "question": "Please list the reference names of the drivers who are eliminated in the first period in race number 20.", "sql": "select distinct drivers.driverref from qualifying inner join drivers on qualifying.driverid = drivers.driverid where qualifying.raceid = 18 and qualifying.q1 limit 5", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the reference names of the drivers who are eliminated in the first period in race number 20.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.driverref from qualifying inner join drivers on qualifying.driverid = drivers.driverid where qualifying.raceid = 18 and qualifying.q1 limit 5\n\nIs the SQL semantically correct?"}
{"id": 595, "question": "Name the foreign name of the card that has boros watermark? List out the type of this card.", "sql": "select foreign_data.name , foreign_data.type from cards inner join foreign_data on cards.uuid = foreign_data.uuid where cards.watermark = 'boros'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the foreign name of the card that has boros watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.name , foreign_data.type from cards inner join foreign_data on cards.uuid = foreign_data.uuid where cards.watermark = 'boros'\n\nIs the SQL semantically correct?"}
{"id": 596, "question": "How much did customer 6 consume in total between August and November 2013?", "sql": "select sum(consumption) from yearmonth where customerid = 6 and date between '2013-08' and '2013-11'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much did customer 6 consume in total between August and November 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select sum(consumption) from yearmonth where customerid = 6 and date between '2013-08' and '2013-11'\n\nIs the SQL semantically correct?"}
{"id": 597, "question": "Name all drivers in the 2010 Singapore Grand Prix order by their position stands.", "sql": "select distinct drivers.forename , drivers.surname from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on results.raceid = races.raceid where races.name = '2010 Singapore Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name all drivers in the 2010 Singapore Grand Prix order by their position stands.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.forename , drivers.surname from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on results.raceid = races.raceid where races.name = '2010 Singapore Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 598, "question": "Which districts have transactions greater than USS$10,000 in 1997?", "sql": "SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 10000 AND strftime('%Y', T1.date) = '1997'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which districts have transactions greater than USS$10,000 in 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT DISTINCT T3.A2 FROM trans AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.amount > 10000 AND strftime('%Y', T1.date) = '1997'\n\nIs the SQL semantically correct?"}
{"id": 599, "question": "How many male patients have elevated total bilirubin count?", "sql": "SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.`t-bil` > 2.0", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many male patients have elevated total bilirubin count?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND laboratory.`t-bil` > 2.0\n\nIs the SQL semantically correct?"}
{"id": 600, "question": "For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?", "sql": "SELECT ((balance_1998 - balance_1993) / balance_1993) * 100 AS increase_rate FROM (SELECT (SELECT T2.balance FROM trans AS T2 WHERE T2.account_id = T1.account_id AND T2.date = '1998-12-27' ORDER BY T2.date DESC LIMIT 1) AS balance_1998, (SELECT T2.balance FROM trans AS T2 WHERE T2.account_id = T1.account_id AND T2.date = '1993-03-22' ORDER BY T2.date DESC LIMIT 1) AS balance_1993 FROM loan AS T1 WHERE T1.date = '1993-07-05' LIMIT 1)", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client whose loan was approved first in 1993/7/5, what is the increase rate of his/her account balance from 1993/3/22 to 1998/12/27?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT ((balance_1998 - balance_1993) / balance_1993) * 100 AS increase_rate FROM (SELECT (SELECT T2.balance FROM trans AS T2 WHERE T2.account_id = T1.account_id AND T2.date = '1998-12-27' ORDER BY T2.date DESC LIMIT 1) AS balance_1998, (SELECT T2.balance FROM trans AS T2 WHERE T2.account_id = T1.account_id AND T2.date = '1993-03-22' ORDER BY T2.date DESC LIMIT 1) AS balance_1993 FROM loan AS T1 WHERE T1.date = '1993-07-05' LIMIT 1)\n\nIs the SQL semantically correct?"}
{"id": 601, "question": "Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.", "sql": "SELECT CAST(COUNT(DISTINCT T1.molecule_id) AS REAL) * 100 / (SELECT COUNT(*) FROM molecule) AS percentage FROM bond AS T1 WHERE T1.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among all chemical compounds identified in the database, what percent of compounds form a triple-bond.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(COUNT(DISTINCT T1.molecule_id) AS REAL) * 100 / (SELECT COUNT(*) FROM molecule) AS percentage FROM bond AS T1 WHERE T1.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 602, "question": "Please list the product description of the products consumed in September, 2013.", "sql": "SELECT DISTINCT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE strftime('%Y%m', T1.Date) = '201309'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the product description of the products consumed in September, 2013.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT T2.Description FROM transactions_1k AS T1 INNER JOIN products AS T2 ON T1.ProductID = T2.ProductID WHERE strftime('%Y%m', T1.Date) = '201309'\n\nIs the SQL semantically correct?"}
{"id": 603, "question": "Which country's players have the heaviest average weights?", "sql": "SELECT country.name FROM player INNER JOIN country ON player.id = country.id GROUP BY country.name ORDER BY avg(player.weight) DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which country's players have the heaviest average weights?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT country.name FROM player INNER JOIN country ON player.id = country.id GROUP BY country.name ORDER BY avg(player.weight) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 604, "question": "What is the release date for the set \"Ola de frío\"?", "sql": "select sets.releasedate from sets inner join set_translations on sets.code = set_translations.setcode where set_translations.translation = 'Ola de fro'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the release date for the set \"Ola de frío\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.releasedate from sets inner join set_translations on sets.code = set_translations.setcode where set_translations.translation = 'Ola de fro'\n\nIs the SQL semantically correct?"}
{"id": 605, "question": "Is the set of cards with Adarkar Valkyrie only available outside the United States?", "sql": "SELECT T2.isForeignOnly FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Adarkar Valkyrie'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is the set of cards with Adarkar Valkyrie only available outside the United States?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T2.isForeignOnly FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Adarkar Valkyrie'\n\nIs the SQL semantically correct?"}
{"id": 606, "question": "Calculate the percentage of members who are major Business in the list?", "sql": "select cast(sum(case when major.major_name = 'Mathematics' then 1 else 0 end) as real) * 100 / count(major.major_id) from major inner join member on major.major_id = member.link_to_major", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the percentage of members who are major Business in the list?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select cast(sum(case when major.major_name = 'Mathematics' then 1 else 0 end) as real) * 100 / count(major.major_id) from major inner join member on major.major_id = member.link_to_major\n\nIs the SQL semantically correct?"}
{"id": 607, "question": "What percentage of legendary frame effect cards that are only available in online game variations?", "sql": "select cast(sum(case when hand = +3 then 1 else 0 end) as real) * 100 / count(id) from cards where frameeffects = 'legendary'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of legendary frame effect cards that are only available in online game variations?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when hand = +3 then 1 else 0 end) as real) * 100 / count(id) from cards where frameeffects = 'legendary'\n\nIs the SQL semantically correct?"}
{"id": 608, "question": "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.", "sql": "select schools.school , avg(satscores.avgscrwrite) , schools.phone from schools inner join satscores on schools.cdscode = satscores.cds where schools.opendate >= '1991' and schools.closeddate < '2000' group by schools.school , satscores.avgscrwrite", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.school , avg(satscores.avgscrwrite) , schools.phone from schools inner join satscores on schools.cdscode = satscores.cds where schools.opendate >= '1991' and schools.closeddate < '2000' group by schools.school , satscores.avgscrwrite\n\nIs the SQL semantically correct?"}
{"id": 609, "question": "Name the driver with the most winning. Mention his nationality and what is his maximum point scores.", "sql": "SELECT drivers.forename, drivers.surname, drivers.nationality, avg(driverstandings.points) FROM drivers INNER JOIN driverstandings ON drivers.driverid = driverstandings.driverid GROUP BY drivers.driverid, drivers.forename, drivers.surname, drivers.nationality ORDER BY count(driverstandings.wins) DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the driver with the most winning. Mention his nationality and what is his maximum point scores.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname, drivers.nationality, avg(driverstandings.points) FROM drivers INNER JOIN driverstandings ON drivers.driverid = driverstandings.driverid GROUP BY drivers.driverid, drivers.forename, drivers.surname, drivers.nationality ORDER BY count(driverstandings.wins) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 610, "question": "Which student has been entrusted to manage the budget for the Yearly Kickoff?", "sql": "SELECT T5.member_id FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget INNER JOIN member AS T5 ON T3.link_to_member = T5.member_id WHERE T1.event_name = 'Yearly Kickoff'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which student has been entrusted to manage the budget for the Yearly Kickoff?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T5.member_id FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget INNER JOIN member AS T5 ON T3.link_to_member = T5.member_id WHERE T1.event_name = 'Yearly Kickoff'\n\nIs the SQL semantically correct?"}
{"id": 611, "question": "Lists the set code of all cards translated into Spanish.", "sql": "SELECT DISTINCT cards.setcode FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Spanish'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Lists the set code of all cards translated into Spanish.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT DISTINCT cards.setcode FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Spanish'\n\nIs the SQL semantically correct?"}
{"id": 612, "question": "Write all comments made by user 'A Lion.'", "sql": "select comments.text from users inner join comments on users.id = comments.userid where users.displayname = 'A Lion'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write all comments made by user 'A Lion.'\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select comments.text from users inner join comments on users.id = comments.userid where users.displayname = 'A Lion'\n\nIs the SQL semantically correct?"}
{"id": 613, "question": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?", "sql": "SELECT CAST((SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) AS percentage_difference FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.date = '2013-07-12 00:00:00'", "db_id": "european_football_2", "label": true, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT CAST((SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) - SUM(CASE WHEN T1.player_name = 'Jordan Bowery' THEN T2.overall_rating ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T1.player_name = 'Landon Donovan' THEN T2.overall_rating ELSE 0 END) AS percentage_difference FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.date = '2013-07-12 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 614, "question": "What is the percentage of carbon in double-bond molecules?", "sql": "select cast(sum(iif(atom.element = 'c' , 1 , 0)) as real) * 100 / count(atom.atom_id) from atom inner join connected on atom.molecule_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id where bond.bond_type = '= '", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of carbon in double-bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(iif(atom.element = 'c' , 1 , 0)) as real) * 100 / count(atom.atom_id) from atom inner join connected on atom.molecule_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id where bond.bond_type = '= '\n\nIs the SQL semantically correct?"}
{"id": 615, "question": "What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?", "sql": "select set_translations.translation from sets inner join set_translations on sets.code = set_translations.setcode where sets.name = 'Eighth Edition'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the Simplified Chinese translation of the name of the set \"Eighth Edition\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select set_translations.translation from sets inner join set_translations on sets.code = set_translations.setcode where sets.name = 'Eighth Edition'\n\nIs the SQL semantically correct?"}
{"id": 616, "question": "Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex.", "sql": "SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among all outpatients, list out those have low hemoglobin level. State the different IDs and their sex.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT T1.ID, T1.SEX FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND T2.HGB < 10\n\nIs the SQL semantically correct?"}
{"id": 617, "question": "What is the percentage of female patient were born after 1930?", "sql": "SELECT cast(sum(iif(sex = 'F', 1, 0)) AS REAL) * 100 / count(id) FROM patient WHERE strftime('%Y', birthday) > '1930'", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of female patient were born after 1930?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(iif(sex = 'F', 1, 0)) AS REAL) * 100 / count(id) FROM patient WHERE strftime('%Y', birthday) > '1930'\n\nIs the SQL semantically correct?"}
{"id": 618, "question": "What is the label for bond ID TR001_10_11?", "sql": "SELECT molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_10_11'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the label for bond ID TR001_10_11?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT molecule.label FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE bond.bond_id = 'TR001_10_11'\n\nIs the SQL semantically correct?"}
{"id": 619, "question": "What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level?", "sql": "select max(examination.ana) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.cre < 1.5 and patient.diagnosis = 'Normal'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the highest anti-nucleus antibody concentration level of a patient with a normal creatinine level?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select max(examination.ana) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.cre < 1.5 and patient.diagnosis = 'Normal'\n\nIs the SQL semantically correct?"}
{"id": 620, "question": "Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".", "sql": "SELECT T3.phone FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the phone numbers of the students from the Student_Club that has attended the event \"Women's Soccer\".\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T3.phone FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event INNER JOIN member AS T3 ON T2.link_to_member = T3.member_id WHERE T1.event_name = 'Women''s Soccer'\n\nIs the SQL semantically correct?"}
{"id": 621, "question": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?", "sql": "SELECT cast(count(CASE WHEN player.height < 180 AND player_attributes.overall_rating > 70 THEN player.id ELSE NULL END) AS REAL) * 100 / count(player.id) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of players that are under 180 cm who have an overall strength of more than 70?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT cast(count(CASE WHEN player.height < 180 AND player_attributes.overall_rating > 70 THEN player.id ELSE NULL END) AS REAL) * 100 / count(player.id) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id\n\nIs the SQL semantically correct?"}
{"id": 622, "question": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.", "sql": "SELECT district.a11 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN disp ON account.account_id = disp.account_id WHERE disp.type = 'OWNER' AND district.a11 BETWEEN 8000 AND 9000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT district.a11 FROM district INNER JOIN account ON district.district_id = account.district_id INNER JOIN disp ON account.account_id = disp.account_id WHERE disp.type = 'OWNER' AND district.a11 BETWEEN 8000 AND 9000\n\nIs the SQL semantically correct?"}
{"id": 623, "question": "Please list the location coordinates of the circuits whose lap record is 1:29.488.", "sql": "SELECT T3.lat, T3.lng FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.fastestLapTime = '1:29.488'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the location coordinates of the circuits whose lap record is 1:29.488.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.lat, T3.lng FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T2.circuitId = T3.circuitId WHERE T1.fastestLapTime = '1:29.488'\n\nIs the SQL semantically correct?"}
{"id": 624, "question": "What is the lap record set by Lewis Hamilton in a Formula_1 race?", "sql": "select results.fastestlaptime from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the lap record set by Lewis Hamilton in a Formula_1 race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select results.fastestlaptime from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'\n\nIs the SQL semantically correct?"}
{"id": 625, "question": "Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.", "sql": "select sum(case when strftime('%Y' , event.event_date) = '2019' then budget.amount else 0 end) - sum(case when strftime('%Y' , event.event_date) = '2020' then budget.amount else 0 end) from budget inner join event on budget.link_to_event = event.event_id", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the difference of the total amount spent in all events by the Student_Club in year 2019 and 2020.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select sum(case when strftime('%Y' , event.event_date) = '2019' then budget.amount else 0 end) - sum(case when strftime('%Y' , event.event_date) = '2020' then budget.amount else 0 end) from budget inner join event on budget.link_to_event = event.event_id\n\nIs the SQL semantically correct?"}
{"id": 626, "question": "List all the members of the \"School of Applied Sciences, Technology and Education\" department.", "sql": "select member.first_name , member.last_name from major inner join member on major.major_id = member.link_to_major where major.department = 'School of Applied Sciences , Technology and Education'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the members of the \"School of Applied Sciences, Technology and Education\" department.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name from major inner join member on major.major_id = member.link_to_major where major.department = 'School of Applied Sciences , Technology and Education'\n\nIs the SQL semantically correct?"}
{"id": 627, "question": "In Scotland Premier League, which away team won the most during the 2010 season?", "sql": "select team.team_long_name from team inner join match on team.team_api_id = match.away_team_api_id inner join league on match.league_id = league.id where league.name = 'Scotland Premier League' and match.season = '2009/2010' order by match.away_team_goal - match.home_team_goal desc limit 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In Scotland Premier League, which away team won the most during the 2010 season?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_long_name from team inner join match on team.team_api_id = match.away_team_api_id inner join league on match.league_id = league.id where league.name = 'Scotland Premier League' and match.season = '2009/2010' order by match.away_team_goal - match.home_team_goal desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 628, "question": "If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.", "sql": "SELECT T1.Website, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: If there are any, what are the websites address of the schools with a free meal count of 1,900-2,000 to students aged 5-17? Include the name of the school.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T1.Website, T1.School FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Free Meal Count (Ages 5-17)` BETWEEN 1900 AND 2000\n\nIs the SQL semantically correct?"}
{"id": 629, "question": "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?", "sql": "SELECT cast(sum(CASE WHEN schools.doc = 54 THEN 1 ELSE 0 END) AS REAL) * 100 / sum(CASE WHEN schools.doc = 52 THEN 1 ELSE 0 END) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Orange'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT cast(sum(CASE WHEN schools.doc = 54 THEN 1 ELSE 0 END) AS REAL) * 100 / sum(CASE WHEN schools.doc = 52 THEN 1 ELSE 0 END) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Orange'\n\nIs the SQL semantically correct?"}
{"id": 630, "question": "Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.", "sql": "SELECT City, COUNT(School) FROM schools WHERE GSoffered = 'K-8' AND Magnet = 1 GROUP BY City", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Of the schools that offers a magnet program serving a grade span of Kindergarten to 8th grade, how many offers Multiple Provision Types? List the number of cities that offers a Kindergarten to 8th grade span and indicate how many schools are there serving such grade span for each city.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT City, COUNT(School) FROM schools WHERE GSoffered = 'K-8' AND Magnet = 1 GROUP BY City\n\nIs the SQL semantically correct?"}
{"id": 631, "question": "How many students of the Student_Club have attended the event \"Women's Soccer\"?", "sql": "select count(member.first_name) from event inner join attendance on event.event_id = attendance.link_to_event inner join member on member.member_id = attendance.link_to_member where event.event_name = 'Women''s Soccer'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many students of the Student_Club have attended the event \"Women's Soccer\"?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select count(member.first_name) from event inner join attendance on event.event_id = attendance.link_to_event inner join member on member.member_id = attendance.link_to_member where event.event_name = 'Women''s Soccer'\n\nIs the SQL semantically correct?"}
{"id": 632, "question": "What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?", "sql": "select distinct event.status from expense inner join budget on expense.link_to_budget = budget.link_to_event inner join event on event.event_id = budget.link_to_event where expense.expense_description = 'Post Cards , Posters' and expense.expense_date = '2019-8-20'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the status of the event which bought \"Post Cards, Posters\" on 2019/8/20?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select distinct event.status from expense inner join budget on expense.link_to_budget = budget.link_to_event inner join event on event.event_id = budget.link_to_event where expense.expense_description = 'Post Cards , Posters' and expense.expense_date = '2019-8-20'\n\nIs the SQL semantically correct?"}
{"id": 633, "question": "What is the phone number and extension number for the school that had the 333rd highest average writing score?", "sql": "select schools.phone , schools.ext from schools inner join satscores on schools.cdscode = satscores.cds where satscores.avgscrwrite = ( select max(avgscrwrite) from satscores )", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the phone number and extension number for the school that had the 333rd highest average writing score?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.phone , schools.ext from schools inner join satscores on schools.cdscode = satscores.cds where satscores.avgscrwrite = ( select max(avgscrwrite) from satscores )\n\nIs the SQL semantically correct?"}
{"id": 634, "question": "Show me the season page of year when the race No. 901 took place.", "sql": "select distinct races.year from results inner join races on results.raceid = races.raceid where results.number = 901", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Show me the season page of year when the race No. 901 took place.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.year from results inner join races on results.raceid = races.raceid where results.number = 901\n\nIs the SQL semantically correct?"}
{"id": 635, "question": "List the last name of the members of the club that attended the women's soccer event.", "sql": "SELECT member.last_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women''s Soccer' AND member.position = 'Member'", "db_id": "student_club", "label": true, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the last name of the members of the club that attended the women's soccer event.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT member.last_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Women''s Soccer' AND member.position = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 636, "question": "How many income generated by Grant Gilmour?", "sql": "select count(income.income_id) from member inner join income on member.member_id = income.link_to_member where member.first_name = 'Grant' and member.last_name = 'Gilmour'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many income generated by Grant Gilmour?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select count(income.income_id) from member inner join income on member.member_id = income.link_to_member where member.first_name = 'Grant' and member.last_name = 'Gilmour'\n\nIs the SQL semantically correct?"}
{"id": 637, "question": "List out the no. of districts that have female average salary is more than 6000 but less than 10000?", "sql": "select count(district.a11) from client inner join district on client.district_id = district.district_id where client.gender = 'F' and district.a11 > 6000 and district.a9 < 10000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the no. of districts that have female average salary is more than 6000 but less than 10000?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(district.a11) from client inner join district on client.district_id = district.district_id where client.gender = 'F' and district.a11 > 6000 and district.a9 < 10000\n\nIs the SQL semantically correct?"}
{"id": 638, "question": "Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.", "sql": "select cast(sum(case when molecule.label = '+' then 1 else 0 end) as real) * 100 / count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'h'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the percentage of molecules containing carcinogenic compounds that element is hydrogen.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when molecule.label = '+' then 1 else 0 end) as real) * 100 / count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'h'\n\nIs the SQL semantically correct?"}
{"id": 639, "question": "What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?", "sql": "SELECT lasteditoruserid FROM posts WHERE title = 'Examples for teaching: Correlation does not mean causation'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the display name of the user who last edited the post \"Examples for teaching: Correlation does not mean causation\"?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT lasteditoruserid FROM posts WHERE title = 'Examples for teaching: Correlation does not mean causation'\n\nIs the SQL semantically correct?"}
{"id": 640, "question": "List all the elements with double bond, consisted in molecule TR024.", "sql": "select atom.element from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '= ' and atom.molecule_id = 'TR024'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the elements with double bond, consisted in molecule TR024.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '= ' and atom.molecule_id = 'TR024'\n\nIs the SQL semantically correct?"}
{"id": 641, "question": "How many matches in the 2008/2009 season were held in Belgium?", "sql": "select sum(case when country.name = 'Belgium' then 1 else 0 end) from match inner join country on country.id = match.country_id where match.season = '2008/2009'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many matches in the 2008/2009 season were held in Belgium?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select sum(case when country.name = 'Belgium' then 1 else 0 end) from match inner join country on country.id = match.country_id where match.season = '2008/2009'\n\nIs the SQL semantically correct?"}
{"id": 642, "question": "What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games?", "sql": "select cast(sum(case when cards.isonlineonly = 1 then 1 else 0 end) as real) * 100 / count(cards.id) from cards inner join foreign_data on cards.uuid = foreign_data.uuid inner join set_translations on cards.id = set_translations.id where foreign_data.language = 'Chinese Simplified'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of the set of cards that have Chinese Simplified as the language and are only available for online games?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when cards.isonlineonly = 1 then 1 else 0 end) as real) * 100 / count(cards.id) from cards inner join foreign_data on cards.uuid = foreign_data.uuid inner join set_translations on cards.id = set_translations.id where foreign_data.language = 'Chinese Simplified'\n\nIs the SQL semantically correct?"}
{"id": 643, "question": "What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?", "sql": "SELECT cast(count(CASE WHEN patient.diagnosis = 'BEHCET' THEN 1 ELSE NULL END) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE strftime('%Y', patient.`first date`) = '1981' AND patient.sex = 'M'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of male patients who first presented to the hospital in 1981 were diagnosed with BEHCET?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(count(CASE WHEN patient.diagnosis = 'BEHCET' THEN 1 ELSE NULL END) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE strftime('%Y', patient.`first date`) = '1981' AND patient.sex = 'M'\n\nIs the SQL semantically correct?"}
{"id": 644, "question": "What is the percentage difference of student badges given during 2010 and 2011?", "sql": "SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(Name) FROM badges WHERE Name = 'Student'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage difference of student badges given during 2010 and 2011?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', Date) = '2010' THEN 1 ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', Date) = '2011' THEN 1 ELSE 0 END)) AS REAL) * 100 / COUNT(Name) FROM badges WHERE Name = 'Student'\n\nIs the SQL semantically correct?"}
{"id": 645, "question": "Is the molecule with the most double bonds carcinogenic?", "sql": "select molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' group by molecule.molecule_id order by count(bond.bond_type) desc limit 1", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is the molecule with the most double bonds carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' group by molecule.molecule_id order by count(bond.bond_type) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 646, "question": "What proportion of cards do not have a text box with a normal layout?", "sql": "SELECT CAST(SUM(CASE WHEN isTextless = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS proportion FROM cards WHERE layout = 'normal'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What proportion of cards do not have a text box with a normal layout?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT CAST(SUM(CASE WHEN isTextless = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(*) AS proportion FROM cards WHERE layout = 'normal'\n\nIs the SQL semantically correct?"}
{"id": 647, "question": "What was the average monthly consumption of customers in SME for the year 2013?", "sql": "select avg(yearmonth.consumption) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and strftime('%Y' , yearmonth.date) = '2013'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the average monthly consumption of customers in SME for the year 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select avg(yearmonth.consumption) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and strftime('%Y' , yearmonth.date) = '2013'\n\nIs the SQL semantically correct?"}
{"id": 648, "question": "Which molecules have triple bonds and list all the elements they contain.", "sql": "SELECT DISTINCT molecule.molecule_id, atom.element FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '#' AND atom.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which molecules have triple bonds and list all the elements they contain.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT molecule.molecule_id, atom.element FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '#' AND atom.element IN ('cl', 'c', 'h', 'o', 's', 'n', 'p', 'na', 'br', 'f', 'i', 'sn', 'pb', 'te', 'ca')\n\nIs the SQL semantically correct?"}
{"id": 649, "question": "Which active district has the highest average score in Reading?", "sql": "SELECT T2.District FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' ORDER BY T1.AvgScrRead DESC LIMIT 1", "db_id": "california_schools", "label": true, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which active district has the highest average score in Reading?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.District FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.StatusType = 'Active' ORDER BY T1.AvgScrRead DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 650, "question": "How many atoms with iodine and with sulfur type elements are there in single bond molecules?", "sql": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' AND T1.element IN ('i', 's')", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many atoms with iodine and with sulfur type elements are there in single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-' AND T1.element IN ('i', 's')\n\nIs the SQL semantically correct?"}
{"id": 651, "question": "What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?", "sql": "SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreaionDate = '2010-07-19 19:37:33'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the detailed content of the comment of the post which was created on 7/19/2010 7:37:33 PM?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.Text FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId WHERE T1.CreaionDate = '2010-07-19 19:37:33'\n\nIs the SQL semantically correct?"}
{"id": 652, "question": "List the heroes' names whose eyes and hair colours are both black.", "sql": "SELECT superhero.superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Black' AND superhero.eye_colour_id = superhero.hair_colour_id", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the heroes' names whose eyes and hair colours are both black.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superhero.superhero_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Black' AND superhero.eye_colour_id = superhero.hair_colour_id\n\nIs the SQL semantically correct?"}
{"id": 653, "question": "Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?", "sql": "SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedmanacost DESC LIMIT 1", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which card costs more converted mana, \"Serra Angel\" or \"Shrine Keeper\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT name FROM cards WHERE name IN ('Serra Angel', 'Shrine Keeper') ORDER BY convertedmanacost DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 654, "question": "List out the account numbers of clients who are youngest and have highest average salary?", "sql": "select client.birth_date from client inner join disp on client.client_id = disp.client_id inner join account on disp.account_id = account.account_id inner join district on account.district_id = district.district_id order by district.a11 desc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the account numbers of clients who are youngest and have highest average salary?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.birth_date from client inner join disp on client.client_id = disp.client_id inner join account on disp.account_id = account.account_id inner join district on account.district_id = district.district_id order by district.a11 desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 655, "question": "What is the fastest lap number of the champion in 2009?", "sql": "SELECT results.fastestlap FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2009 ORDER BY results.fastestlaptime ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the fastest lap number of the champion in 2009?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.fastestlap FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2009 ORDER BY results.fastestlaptime ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 656, "question": "In which country was the first European Grand Prix hosted? Name the circuit and location.", "sql": "SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' ORDER BY T1.year LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In which country was the first European Grand Prix hosted? Name the circuit and location.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.country, T2.name, T2.location FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.name = 'European Grand Prix' ORDER BY T1.year LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 657, "question": "List all races in 2017 and the hosting country order by date of the event.", "sql": "select distinct races.date , circuits.country from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2017 order by races.date desc", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all races in 2017 and the hosting country order by date of the event.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.date , circuits.country from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2017 order by races.date desc\n\nIs the SQL semantically correct?"}
{"id": 658, "question": "How many translations of the name of the set \"Tenth Edition\"?", "sql": "select count(set_translations.translation) from sets inner join set_translations on sets.code = set_translations.setcode where sets.name = 'Salvat 2011' and set_translations.translation is not null", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many translations of the name of the set \"Tenth Edition\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(set_translations.translation) from sets inner join set_translations on sets.code = set_translations.setcode where sets.name = 'Salvat 2011' and set_translations.translation is not null\n\nIs the SQL semantically correct?"}
{"id": 659, "question": "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.", "sql": "SELECT avg(satscores.avgscrwrite), satscores.sname, schools.phone FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE schools.opendate > '1991-01-01' AND schools.closeddate < '2000-12-31'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT avg(satscores.avgscrwrite), satscores.sname, schools.phone FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE schools.opendate > '1991-01-01' AND schools.closeddate < '2000-12-31'\n\nIs the SQL semantically correct?"}
{"id": 660, "question": "Please list the reference names of the drivers who are eliminated in the first period in race number 20.", "sql": "SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 18 AND T1.q1 IS NOT NULL ORDER BY T1.q1 DESC LIMIT 5", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the reference names of the drivers who are eliminated in the first period in race number 20.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.driverRef FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 18 AND T1.q1 IS NOT NULL ORDER BY T1.q1 DESC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 661, "question": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?", "sql": "select avg(results.fastestlaptime) from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select avg(results.fastestlaptime) from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'\n\nIs the SQL semantically correct?"}
{"id": 662, "question": "How many female patients born in 1964 were admitted to the hospital? List them by ID.", "sql": "select count(id) from patient where sex = 'F' and strftime('%Y' , admission) = '1964' and birthday = '1964'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many female patients born in 1964 were admitted to the hospital? List them by ID.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(id) from patient where sex = 'F' and strftime('%Y' , admission) = '1964' and birthday = '1964'\n\nIs the SQL semantically correct?"}
{"id": 663, "question": "State all the tags used by Mark Meckes in his posts that doesn't have comments.", "sql": "SELECT tags FROM posts WHERE ownerdisplayname = 'Mark Meckes' AND commentcount = 0", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State all the tags used by Mark Meckes in his posts that doesn't have comments.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT tags FROM posts WHERE ownerdisplayname = 'Mark Meckes' AND commentcount = 0\n\nIs the SQL semantically correct?"}
{"id": 664, "question": "On average how many carcinogenic molecules are single bonded?", "sql": "SELECT CAST(SUM(CASE WHEN T2.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT T1.molecule_id) AS average FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: On average how many carcinogenic molecules are single bonded?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T2.bond_type = '-' THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT T1.molecule_id) AS average FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 665, "question": "How many cards with unknown power that can't be found in foil is in duel deck A?", "sql": "select count(dueldeck) from cards where dueldeck = 'a' and hasfoil = 0 and power is null or power = '*'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards with unknown power that can't be found in foil is in duel deck A?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(dueldeck) from cards where dueldeck = 'a' and hasfoil = 0 and power is null or power = '*'\n\nIs the SQL semantically correct?"}
{"id": 666, "question": "Which Russian set of cards contains the most cards overall?", "sql": "SELECT T2.setCode FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which Russian set of cards contains the most cards overall?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T2.setCode FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Russian' ORDER BY T1.baseSetSize DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 667, "question": "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?", "sql": "select count(account.account_id) from account inner join district on account.district_id = district.district_id where district.a16 group by district.district_id order by count(district.a16) desc limit 1", "db_id": "financial", "label": true, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the branch where the largest number of crimes were committed in 1996, how many accounts were opened?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(account.account_id) from account inner join district on account.district_id = district.district_id where district.a16 group by district.district_id order by count(district.a16) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 668, "question": "Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?", "sql": "SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 5", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which cities have the top 5 lowest enrollment number for students in grades 1 through 12?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.City FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` ASC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 669, "question": "How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?", "sql": "select count(transactions_1k.transactionid) from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where gasstations.country = 'CZE' and transactions_1k.price > 1000", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many transactions taken place in the gas station in the Czech Republic are with a price of over 1000?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select count(transactions_1k.transactionid) from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where gasstations.country = 'CZE' and transactions_1k.price > 1000\n\nIs the SQL semantically correct?"}
{"id": 670, "question": "What's the nationality of the customer who spent 548.4 in 2012/8/24?", "sql": "SELECT customers.currency FROM customers INNER JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE transactions_1k.date = '2012-08-24' AND transactions_1k.price = 548.4", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the nationality of the customer who spent 548.4 in 2012/8/24?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT customers.currency FROM customers INNER JOIN transactions_1k ON customers.customerid = transactions_1k.customerid WHERE transactions_1k.date = '2012-08-24' AND transactions_1k.price = 548.4\n\nIs the SQL semantically correct?"}
{"id": 671, "question": "Is molecule TR000 is carcinogenic or not?", "sql": "SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR000'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is molecule TR000 is carcinogenic or not?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CASE WHEN label = '+' THEN 'Yes' ELSE 'No' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR000'\n\nIs the SQL semantically correct?"}
{"id": 672, "question": "List all the short name of the football team that had a home team goal of 10?", "sql": "select team.team_short_name from team inner join match on team.id = match.home_team_api_id where match.home_team_goal = 10 group by team.team_short_name", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the short name of the football team that had a home team goal of 10?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_short_name from team inner join match on team.id = match.home_team_api_id where match.home_team_goal = 10 group by team.team_short_name\n\nIs the SQL semantically correct?"}
{"id": 673, "question": "Provide the text of the latest 10 comments to the post with the title 'Analysing wind data with R' and the display name of the user who left it.", "sql": "select comments.text , comments.userdisplayname from comments inner join posthistory on comments.userid = posthistory.userid inner join posts on posthistory.postid = posts.id where posts.title = 'Analysing wind data with R' order by comments.creationdate desc limit 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the text of the latest 10 comments to the post with the title 'Analysing wind data with R' and the display name of the user who left it.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select comments.text , comments.userdisplayname from comments inner join posthistory on comments.userid = posthistory.userid inner join posts on posthistory.postid = posts.id where posts.title = 'Analysing wind data with R' order by comments.creationdate desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 674, "question": "What are the bond type for atoms with element Tin?", "sql": "SELECT DISTINCT bond.bond_type FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element = 'sn'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the bond type for atoms with element Tin?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT bond.bond_type FROM atom INNER JOIN bond ON atom.molecule_id = bond.molecule_id WHERE atom.element = 'sn'\n\nIs the SQL semantically correct?"}
{"id": 675, "question": "Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.", "sql": "select drivers.forename , drivers.surname from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on laptimes.raceid = races.raceid where races.name = 'Formula1' order by results.fastestlapspeed desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which driver created the fastest lap speed in a Formula_1 race? Please give both his forename and surname.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.surname from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on laptimes.raceid = races.raceid where races.name = 'Formula1' order by results.fastestlapspeed desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 676, "question": "For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?", "sql": "SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 347 AND T1.q2 = '0:01:15'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the driver who had the Q2 time as 0:01:15 in race No. 347, where is he from?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.nationality FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 347 AND T1.q2 = '0:01:15'\n\nIs the SQL semantically correct?"}
{"id": 677, "question": "Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.", "sql": "select patient.id , patient.birthday from patient inner join laboratory on patient.id = laboratory.id where laboratory.hct > 52 group by patient.id having count(laboratory.id) > 2", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the ID and age of patient with two or more laboratory examinations which show their hematoclit level exceeded the normal range.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id , patient.birthday from patient inner join laboratory on patient.id = laboratory.id where laboratory.hct > 52 group by patient.id having count(laboratory.id) > 2\n\nIs the SQL semantically correct?"}
{"id": 678, "question": "What is the total number of comments of all the posts owned by csgillespie?", "sql": "select sum(posts.commentcount) from users inner join posts on users.id = posts.owneruserid inner join comments on posts.id = comments.postid where users.displayname = 'csgillespie'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total number of comments of all the posts owned by csgillespie?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select sum(posts.commentcount) from users inner join posts on users.id = posts.owneruserid inner join comments on posts.id = comments.postid where users.displayname = 'csgillespie'\n\nIs the SQL semantically correct?"}
{"id": 679, "question": "For the set \"Commander 2014 Oversized\" , give its parent code.", "sql": "select sets.parentcode from sets inner join set_translations on sets.code = set_translations.setcode where sets.name = 'Commander 2014 Oversized'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the set \"Commander 2014 Oversized\" , give its parent code.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.parentcode from sets inner join set_translations on sets.code = set_translations.setcode where sets.name = 'Commander 2014 Oversized'\n\nIs the SQL semantically correct?"}
{"id": 680, "question": "How many cards of legalities whose status is restricted have text boxes?", "sql": "select count(cards.id) from cards inner join legalities on cards.uuid = legalities.uuid where legalities.status = 'Restricted' and cards.istextless = 0", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards of legalities whose status is restricted have text boxes?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.id) from cards inner join legalities on cards.uuid = legalities.uuid where legalities.status = 'Restricted' and cards.istextless = 0\n\nIs the SQL semantically correct?"}
{"id": 681, "question": "Name the foreign name of the card that has abzan watermark? List out the type of this card.", "sql": "select foreign_data.name , foreign_data.type from cards inner join foreign_data on cards.uuid = foreign_data.uuid where cards.watermark = 'abzan'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the foreign name of the card that has abzan watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.name , foreign_data.type from cards inner join foreign_data on cards.uuid = foreign_data.uuid where cards.watermark = 'abzan'\n\nIs the SQL semantically correct?"}
{"id": 682, "question": "How many schools with an average score in Math greater than 400 in the SAT test are exclusively virtual?", "sql": "select count(satscores.cds) from satscores inner join schools on satscores.cds = schools.cdscode where schools.virtual = 'F' and satscores.avgscrmath < 400", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many schools with an average score in Math greater than 400 in the SAT test are exclusively virtual?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select count(satscores.cds) from satscores inner join schools on satscores.cds = schools.cdscode where schools.virtual = 'F' and satscores.avgscrmath < 400\n\nIs the SQL semantically correct?"}
{"id": 683, "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.", "sql": "SELECT DISTINCT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.date BETWEEN '1987-07-06' AND '1996-01-31' AND laboratory.gpt > 30 AND laboratory.alb < 4", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.date BETWEEN '1987-07-06' AND '1996-01-31' AND laboratory.gpt > 30 AND laboratory.alb < 4\n\nIs the SQL semantically correct?"}
{"id": 684, "question": "Identify the gender of the superhero who has the ability of Phoenix Force.", "sql": "SELECT T4.gender FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id INNER JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T1.power_name = 'Phoenix Force'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the gender of the superhero who has the ability of Phoenix Force.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT T4.gender FROM superpower AS T1 INNER JOIN hero_power AS T2 ON T1.id = T2.power_id INNER JOIN superhero AS T3 ON T2.hero_id = T3.id INNER JOIN gender AS T4 ON T3.gender_id = T4.id WHERE T1.power_name = 'Phoenix Force'\n\nIs the SQL semantically correct?"}
{"id": 685, "question": "How was Francesco Migliore's attacking work rate on 2015/5/1?", "sql": "select player_attributes.attacking_work_rate from player inner join player_attributes on player.id = player_attributes.player_api_id where player.player_name = 'Francesco Migliore' and player_attributes.date = '2015-05-01 00:00:00'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How was Francesco Migliore's attacking work rate on 2015/5/1?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player_attributes.attacking_work_rate from player inner join player_attributes on player.id = player_attributes.player_api_id where player.player_name = 'Francesco Migliore' and player_attributes.date = '2015-05-01 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 686, "question": "What is the phone number of the school that has the highest average score in Math?", "sql": "select schools.phone from schools inner join satscores on schools.cdscode = satscores.cds where satscores.avgscrmath = ( select max(avgscrmath) from satscores )", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the phone number of the school that has the highest average score in Math?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.phone from schools inner join satscores on schools.cdscode = satscores.cds where satscores.avgscrmath = ( select max(avgscrmath) from satscores )\n\nIs the SQL semantically correct?"}
{"id": 687, "question": "Name the races along with its circuit name and location for f1 races hosted in September 2005.", "sql": "select distinct races.name , circuits.name , circuits.location from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2005 and races.date like '9/%/2005'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the races along with its circuit name and location for f1 races hosted in September 2005.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.name , circuits.name , circuits.location from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2005 and races.date like '9/%/2005'\n\nIs the SQL semantically correct?"}
{"id": 688, "question": "For the set which had 'SS2' as the code, what is its magic card market id?", "sql": "select cards.mcmid from cards inner join sets on cards.mcmid = sets.mcmid where sets.code = 'SS2'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the set which had 'SS2' as the code, what is its magic card market id?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.mcmid from cards inner join sets on cards.mcmid = sets.mcmid where sets.code = 'SS2'\n\nIs the SQL semantically correct?"}
{"id": 689, "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.", "sql": "select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on patient.id = laboratory.id where laboratory.date between '1987-07-06' and '1996-01-31' and laboratory.gpt > 30 and laboratory.alb < 4", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on patient.id = laboratory.id where laboratory.date between '1987-07-06' and '1996-01-31' and laboratory.gpt > 30 and laboratory.alb < 4\n\nIs the SQL semantically correct?"}
{"id": 690, "question": "Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.", "sql": "select molecule.molecule_id , molecule.label from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.atom_id = 'TR001_10'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which molecule does the atom TR001_10 belong to? Please state whether this molecule is carcinogenic or not.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.molecule_id , molecule.label from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.atom_id = 'TR001_10'\n\nIs the SQL semantically correct?"}
{"id": 691, "question": "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?", "sql": "SELECT schools.school, cast(frpm.`free meal count (ages 5-17)` AS REAL) * 100 / frpm.`enrollment (ages 5-17)` FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Los Angeles' AND schools.gsserved = 'K-9'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.school, cast(frpm.`free meal count (ages 5-17)` AS REAL) * 100 / frpm.`enrollment (ages 5-17)` FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Los Angeles' AND schools.gsserved = 'K-9'\n\nIs the SQL semantically correct?"}
{"id": 692, "question": "Please list the display names of all the users whose accounts were created in the year 2011.", "sql": "select displayname from users where strftime('%Y' , creationdate) = '2014'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the display names of all the users whose accounts were created in the year 2011.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select displayname from users where strftime('%Y' , creationdate) = '2014'\n\nIs the SQL semantically correct?"}
{"id": 693, "question": "State all the tags used by Mark Meckes in his posts that doesn't have comments.", "sql": "select distinct tags.tagname from users inner join posts on users.id = posts.owneruserid inner join tags on posts.id = tags.id inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Mark Meckes' and posts.commentcount = 0", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State all the tags used by Mark Meckes in his posts that doesn't have comments.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select distinct tags.tagname from users inner join posts on users.id = posts.owneruserid inner join tags on posts.id = tags.id inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Mark Meckes' and posts.commentcount = 0\n\nIs the SQL semantically correct?"}
{"id": 694, "question": "For the driver who set the fastest lap speed in race No.933, where does he come from?", "sql": "select drivers.surname , drivers.forename from results inner join drivers on results.driverid = drivers.driverid where results.raceid = 933 group by drivers.driverid", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the driver who set the fastest lap speed in race No.933, where does he come from?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.surname , drivers.forename from results inner join drivers on results.driverid = drivers.driverid where results.raceid = 933 group by drivers.driverid\n\nIs the SQL semantically correct?"}
{"id": 695, "question": "Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index.", "sql": "SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday ASC, T2.`T-CHO` DESC LIMIT 1", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who is the oldest patient with the highest total cholesterol (T-CHO). State the patient ID and T-CHO index.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID, T2.`T-CHO` FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID ORDER BY T1.Birthday ASC, T2.`T-CHO` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 696, "question": "When was the oldest mythic card released and what are its legal play formats?", "sql": "select cards.originalreleasedate , legalities.format from cards inner join legalities on cards.uuid = legalities.uuid where cards.rarity = 'mythic' and legalities.status = 'Legal' order by cards.originalreleasedate asc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: When was the oldest mythic card released and what are its legal play formats?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.originalreleasedate , legalities.format from cards inner join legalities on cards.uuid = legalities.uuid where cards.rarity = 'mythic' and legalities.status = 'Legal' order by cards.originalreleasedate asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 697, "question": "Among the members, how many of them have an extra large t-shirt size?", "sql": "SELECT count(member_id) FROM member WHERE t_shirt_size = 'X-Large' AND POSITION = 'Member'", "db_id": "student_club", "label": true, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the members, how many of them have an extra large t-shirt size?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT count(member_id) FROM member WHERE t_shirt_size = 'X-Large' AND POSITION = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 698, "question": "What is the most common type of grade span served in the city of Adelanto?", "sql": "select schools.gsserved from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.city = 'Adelanto' group by schools.gsserved order by count(schools.gsserved) desc limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the most common type of grade span served in the city of Adelanto?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.gsserved from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.city = 'Adelanto' group by schools.gsserved order by count(schools.gsserved) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 699, "question": "What are the atoms of the triple bond with the molecule \"TR041\"?", "sql": "select atom.atom_id from atom inner join connected on atom.atom_id = connected.atom_id2 inner join bond on bond.bond_id = connected.bond_id where bond.molecule_id = 'TR447' and bond.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the atoms of the triple bond with the molecule \"TR041\"?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.atom_id from atom inner join connected on atom.atom_id = connected.atom_id2 inner join bond on bond.bond_id = connected.bond_id where bond.molecule_id = 'TR447' and bond.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 700, "question": "What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?", "sql": "SELECT T1.gender, T3.balance FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T2.client_id = 4 AND T3.trans_id = 851", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the sum that client number 4's account has following transaction 851? Who owns this account, a man or a woman?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.gender, T3.balance FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T2.client_id = 4 AND T3.trans_id = 851\n\nIs the SQL semantically correct?"}
{"id": 701, "question": "What is the difference between players 6 and 23's jumping scores?", "sql": "SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6 AND jumping IS NOT NULL) - (SELECT jumping FROM Player_Attributes WHERE id = 23 AND jumping IS NOT NULL) AS diff", "db_id": "european_football_2", "label": true, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference between players 6 and 23's jumping scores?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT (SELECT jumping FROM Player_Attributes WHERE id = 6 AND jumping IS NOT NULL) - (SELECT jumping FROM Player_Attributes WHERE id = 23 AND jumping IS NOT NULL) AS diff\n\nIs the SQL semantically correct?"}
{"id": 702, "question": "Give me the molecule ID of the double bond type.", "sql": "select molecule_id from bond where bond_type like '= '", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give me the molecule ID of the double bond type.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule_id from bond where bond_type like '= '\n\nIs the SQL semantically correct?"}
{"id": 703, "question": "What is the defensive work rate of the football player David Wilson\n?", "sql": "SELECT player_attributes.defensive_work_rate FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'David Wilson'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the defensive work rate of the football player David Wilson\n?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_attributes.defensive_work_rate FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'David Wilson'\n\nIs the SQL semantically correct?"}
{"id": 704, "question": "Which website should I go to if I want to know more about Anthony Davidson?", "sql": "select url from drivers where forename = 'Anthony' and surname = 'Davidson'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which website should I go to if I want to know more about Anthony Davidson?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select url from drivers where forename = 'Anthony' and surname = 'Davidson'\n\nIs the SQL semantically correct?"}
{"id": 705, "question": "The average unemployment ratio of 1995 and 1996, which one has higher percentage?", "sql": "SELECT AVG(A12), AVG(A13) FROM district", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: The average unemployment ratio of 1995 and 1996, which one has higher percentage?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT AVG(A12), AVG(A13) FROM district\n\nIs the SQL semantically correct?"}
{"id": 706, "question": "For the race happened on 2015/11/29, how many drivers finished the game?", "sql": "select count(distinct results.driverid) from results inner join races on results.raceid = races.raceid where races.date = '2015-11-29'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the race happened on 2015/11/29, how many drivers finished the game?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(distinct results.driverid) from results inner join races on results.raceid = races.raceid where races.date = '2015-11-29'\n\nIs the SQL semantically correct?"}
{"id": 707, "question": "Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.", "sql": "SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T1.availability = 'paper' AND T2.format = 'pauper' AND T2.status = 'legal'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is there any card from Erica Yang artist in pauper format and available in paper? If so, indicate its ID.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T1.id FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T1.artist = 'Erica Yang' AND T1.availability = 'paper' AND T2.format = 'pauper' AND T2.status = 'legal'\n\nIs the SQL semantically correct?"}
{"id": 708, "question": "Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.", "sql": "select id from player_attributes order by potential asc limit 3", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide top five football players' IDs who are among the lowest potential players and prefer to use the right foot when attacking.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select id from player_attributes order by potential asc limit 3\n\nIs the SQL semantically correct?"}
{"id": 709, "question": "How many players whose first names are Adam and weigh more than 170?", "sql": "SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many players whose first names are Adam and weigh more than 170?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT COUNT(*) FROM Player WHERE player_name LIKE 'Adam%' AND weight > 170\n\nIs the SQL semantically correct?"}
{"id": 710, "question": "Please provide the names of top three football players who are over 180 cm tall in alphabetical order.", "sql": "select player_name from player where height > 180 order by height limit 3", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide the names of top three football players who are over 180 cm tall in alphabetical order.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player_name from player where height > 180 order by height limit 3\n\nIs the SQL semantically correct?"}
{"id": 711, "question": "What is the atom ID of double bonded carbon in TR012 molecule?", "sql": "SELECT T3.atom_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '=' AND T3.element = 'c' AND T3.molecule_id = 'TR012'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the atom ID of double bonded carbon in TR012 molecule?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T3.atom_id FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T2.atom_id = T3.atom_id WHERE T1.bond_type = '=' AND T3.element = 'c' AND T3.molecule_id = 'TR012'\n\nIs the SQL semantically correct?"}
{"id": 712, "question": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?", "sql": "SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = 62 OR DOC = 54)", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT AdmEmail1 FROM schools WHERE County = 'San Bernardino' AND District = 'San Bernardino City Unified' AND OpenDate BETWEEN '2009-01-01' AND '2010-12-31' AND (SOC = 62 OR DOC = 54)\n\nIs the SQL semantically correct?"}
{"id": 713, "question": "Calculate the average view count of each post tagged as 'humor' and list the title and the comment of each post.", "sql": "select avg(posts.viewcount) , posts.title , comments.text from tags inner join posts on tags.id = posts.id inner join comments on posts.id = comments.postid where tags.tagname = 'humor'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the average view count of each post tagged as 'humor' and list the title and the comment of each post.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select avg(posts.viewcount) , posts.title , comments.text from tags inner join posts on tags.id = posts.id inner join comments on posts.id = comments.postid where tags.tagname = 'humor'\n\nIs the SQL semantically correct?"}
{"id": 714, "question": "Which molecule consisted of Sulphur atom with double bond?", "sql": "select molecule.label from atom inner join molecule on atom.molecule_id = molecule.molecule_id inner join bond on atom.molecule_id = bond.molecule_id inner join connected on atom.atom_id = connected.atom_id2 where atom.element = 's' and bond.bond_type = '= '", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which molecule consisted of Sulphur atom with double bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.label from atom inner join molecule on atom.molecule_id = molecule.molecule_id inner join bond on atom.molecule_id = bond.molecule_id inner join connected on atom.atom_id = connected.atom_id2 where atom.element = 's' and bond.bond_type = '= '\n\nIs the SQL semantically correct?"}
{"id": 715, "question": "Determine the bond type that is formed in the chemical compound containing element Carbon.", "sql": "select bond.bond_type from atom inner join connected on atom.atom_id = connected.atom_id inner join molecule on atom.molecule_id = molecule.molecule_id inner join bond on bond.molecule_id = molecule.molecule_id where atom.element = 'te'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Determine the bond type that is formed in the chemical compound containing element Carbon.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_type from atom inner join connected on atom.atom_id = connected.atom_id inner join molecule on atom.molecule_id = molecule.molecule_id inner join bond on bond.molecule_id = molecule.molecule_id where atom.element = 'te'\n\nIs the SQL semantically correct?"}
{"id": 716, "question": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?", "sql": "SELECT cast((sum(results.fastestlaptime) - sum(results.time)) AS REAL) * 100 / sum(results.time) FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT cast((sum(results.fastestlaptime) - sum(results.time)) AS REAL) * 100 / sum(results.time) FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 717, "question": "Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.", "sql": "select count(id) from posts where viewcount > 3500 and commentcount = 0", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the number of posts that have been viewed over 35000 times but have received no comments from other users.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(id) from posts where viewcount > 3500 and commentcount = 0\n\nIs the SQL semantically correct?"}
{"id": 718, "question": "Among the superheroes with the race of god/eternal, how many of them are male", "sql": "select count(*) from superhero inner join gender on gender.id = superhero.gender_id inner join race on race.id = superhero.race_id where race.race = 'god/eternal' and gender.gender = 'Male' and superhero.race_id = 21", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the superheroes with the race of god/eternal, how many of them are male\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select count(*) from superhero inner join gender on gender.id = superhero.gender_id inner join race on race.id = superhero.race_id where race.race = 'god/eternal' and gender.gender = 'Male' and superhero.race_id = 21\n\nIs the SQL semantically correct?"}
{"id": 719, "question": "There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?", "sql": "select distinct customers.currency from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date like '2013-06%'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: There's one customer spent 214582.17 in the June of 2013, which currency did he/she use?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select distinct customers.currency from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date like '2013-06%'\n\nIs the SQL semantically correct?"}
{"id": 720, "question": "How many transactions were paid in CZK in the morning of 2012/8/26?", "sql": "select count(transactions_1k.transactionid) from customers inner join transactions_1k on customers.customerid = transactions_1k.customerid where customers.currency = 'EUR' and transactions_1k.time < '13:00:00' and transactions_1k.date = '2012-08-26'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many transactions were paid in CZK in the morning of 2012/8/26?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select count(transactions_1k.transactionid) from customers inner join transactions_1k on customers.customerid = transactions_1k.customerid where customers.currency = 'EUR' and transactions_1k.time < '13:00:00' and transactions_1k.date = '2012-08-26'\n\nIs the SQL semantically correct?"}
{"id": 721, "question": "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.", "sql": "select atom.atom_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.molecule_id between 'TR010' and 'TR050' and atom.element = 'c'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.atom_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.molecule_id between 'TR010' and 'TR050' and atom.element = 'c'\n\nIs the SQL semantically correct?"}
{"id": 722, "question": "Which molecules have triple bonds and list all the elements they contain.", "sql": "select atom.element from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which molecules have triple bonds and list all the elements they contain.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 723, "question": "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?", "sql": "select count(cardkingdomid) from cards where artist = 'Aaron Miller' and cardkingdomfoilid is not null", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cardkingdomid) from cards where artist = 'Aaron Miller' and cardkingdomfoilid is not null\n\nIs the SQL semantically correct?"}
{"id": 724, "question": "List down most tallest players' name.", "sql": "select player_name from player order by height desc limit 5", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List down most tallest players' name.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player_name from player order by height desc limit 5\n\nIs the SQL semantically correct?"}
{"id": 725, "question": "What proportion of customers who have accounts at the Prague branch are female?", "sql": "SELECT CAST(SUM(IIF(T1.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'Prague'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What proportion of customers who have accounts at the Prague branch are female?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT CAST(SUM(IIF(T1.gender = 'F', 1, 0)) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A3 = 'Prague'\n\nIs the SQL semantically correct?"}
{"id": 726, "question": "How many users from New York have a teacher and supporter badge?", "sql": "select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and badges.name = 'Teacher' and users.location = 'New York'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many users from New York have a teacher and supporter badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and badges.name = 'Teacher' and users.location = 'New York'\n\nIs the SQL semantically correct?"}
{"id": 727, "question": "Indicate the cost of posters for 'September Speaker' event.", "sql": "select expense.cost from expense inner join event on expense.expense_id = event.event_id where event.event_name = 'September Speaker' and expense.expense_description = 'Posters'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Indicate the cost of posters for 'September Speaker' event.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select expense.cost from expense inner join event on expense.expense_id = event.event_id where event.event_name = 'September Speaker' and expense.expense_description = 'Posters'\n\nIs the SQL semantically correct?"}
{"id": 728, "question": "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?", "sql": "select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where laboratory.got >= 60 order by patient.birthday desc limit 1", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where laboratory.got >= 60 order by patient.birthday desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 729, "question": "List the superheroes from Marvel Comics who have the super power of 'Super Strength'.", "sql": "SELECT CAST(SUM(CASE WHEN T4.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN hero_power AS T3 ON T2.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T1.publisher_name = 'Marvel Comics'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the superheroes from Marvel Comics who have the super power of 'Super Strength'.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT CAST(SUM(CASE WHEN T4.power_name = 'Super Strength' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN hero_power AS T3 ON T2.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T1.publisher_name = 'Marvel Comics'\n\nIs the SQL semantically correct?"}
{"id": 730, "question": "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?", "sql": "SELECT T3.fastestLapTime FROM races AS T1 INNER JOIN results AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.forename = 'Lewis' AND T2.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.fastestLapTime FROM races AS T1 INNER JOIN results AS T3 ON T1.raceId = T3.raceId INNER JOIN drivers AS T2 ON T3.driverId = T2.driverId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.forename = 'Lewis' AND T2.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 731, "question": "Which user ID has the lowest view?", "sql": "select id from users order by views asc limit 1", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user ID has the lowest view?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select id from users order by views asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 732, "question": "How many unknown power cards contain info about the triggered ability", "sql": "SELECT count(id) FROM cards WHERE power IS NULL OR power = '*'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many unknown power cards contain info about the triggered ability\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(id) FROM cards WHERE power IS NULL OR power = '*'\n\nIs the SQL semantically correct?"}
{"id": 733, "question": "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?", "sql": "SELECT name FROM circuits ORDER BY lat DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT name FROM circuits ORDER BY lat DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 734, "question": "For the driver who set the fastest lap speed, what is his nationality?", "sql": "SELECT drivers.nationality FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 348 ORDER BY results.fastestlapspeed DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the driver who set the fastest lap speed, what is his nationality?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.nationality FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 348 ORDER BY results.fastestlapspeed DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 735, "question": "How many cards in the set Coldsnap have a black border color?", "sql": "SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards in the set Coldsnap have a black border color?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(T1.id) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T2.name = 'Coldsnap' AND T1.borderColor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 736, "question": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.", "sql": "select distinct drivers.forename , drivers.surname from drivers inner join pitstops on drivers.driverid = pitstops.driverid where drivers.nationality = 'German' and drivers.dob between 1980 and 1985 order by pitstops.duration desc limit 5", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.forename , drivers.surname from drivers inner join pitstops on drivers.driverid = pitstops.driverid where drivers.nationality = 'German' and drivers.dob between 1980 and 1985 order by pitstops.duration desc limit 5\n\nIs the SQL semantically correct?"}
{"id": 737, "question": "From 2010 to 2015, what was the average overall rating of players who are higher than 170?", "sql": "select avg(player_attributes.overall_rating) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player.height > 170 and strftime('%Y' , player_attributes.date) between '2010' and '2015'", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From 2010 to 2015, what was the average overall rating of players who are higher than 170?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select avg(player_attributes.overall_rating) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player.height > 170 and strftime('%Y' , player_attributes.date) between '2010' and '2015'\n\nIs the SQL semantically correct?"}
{"id": 738, "question": "How many percent of 'Gold' cards were issued prior to 1998?", "sql": "SELECT CAST(SUM(CASE WHEN issued < '1998-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(card_id) FROM card WHERE type = 'gold'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many percent of 'Gold' cards were issued prior to 1998?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT CAST(SUM(CASE WHEN issued < '1998-01-01' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(card_id) FROM card WHERE type = 'gold'\n\nIs the SQL semantically correct?"}
{"id": 739, "question": "What is the score and the link type ID for post ID 395?", "sql": "SELECT comments.score, postlinks.linktypeid FROM comments INNER JOIN postlinks ON comments.postid = postlinks.postid WHERE postlinks.postid = 395", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the score and the link type ID for post ID 395?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT comments.score, postlinks.linktypeid FROM comments INNER JOIN postlinks ON comments.postid = postlinks.postid WHERE postlinks.postid = 395\n\nIs the SQL semantically correct?"}
{"id": 740, "question": "List out the code for drivers who have nationality in America.", "sql": "SELECT code FROM drivers WHERE nationality = 'American'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the code for drivers who have nationality in America.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT code FROM drivers WHERE nationality = 'American'\n\nIs the SQL semantically correct?"}
{"id": 741, "question": "Which year recorded the most gas use paid in EUR?", "sql": "select yearmonth.date from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'EUR' group by yearmonth.date order by sum(yearmonth.consumption) desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which year recorded the most gas use paid in EUR?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select yearmonth.date from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'EUR' group by yearmonth.date order by sum(yearmonth.consumption) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 742, "question": "Which country is the league Italy Serie A from?", "sql": "SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which country is the league Italy Serie A from?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.name FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T2.name = 'Italy Serie A'\n\nIs the SQL semantically correct?"}
{"id": 743, "question": "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?", "sql": "select cast(sum(case when county = 'Colusa' then 1 else 0 end) as real) * 100 / sum(case when county = 'Humboldt' then 1 else 0 end) from schools", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select cast(sum(case when county = 'Colusa' then 1 else 0 end) as real) * 100 / sum(case when county = 'Humboldt' then 1 else 0 end) from schools\n\nIs the SQL semantically correct?"}
{"id": 744, "question": "Which post by slashnick has the most answers count? State the post ID.", "sql": "SELECT T2.Id FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'slashnick' AND T2.AnswerCount IS NOT NULL ORDER BY T2.AnswerCount DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which post by slashnick has the most answers count? State the post ID.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.Id FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.DisplayName = 'slashnick' AND T2.AnswerCount IS NOT NULL ORDER BY T2.AnswerCount DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 745, "question": "How many heroes have the highest attribute value in strength?", "sql": "select count(hero_attribute.hero_id) from attribute inner join hero_attribute on attribute.id = hero_attribute.attribute_id where attribute.attribute_name = 'Strength' order by hero_attribute.attribute_value desc limit 1", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many heroes have the highest attribute value in strength?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select count(hero_attribute.hero_id) from attribute inner join hero_attribute on attribute.id = hero_attribute.attribute_id where attribute.attribute_name = 'Strength' order by hero_attribute.attribute_value desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 746, "question": "In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?", "sql": "SELECT T3.name FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T1.name = 'Austrian Grand Prix' ORDER BY T2.milliseconds LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In which Formula_1 race was the lap record for the Austrian Grand Prix Circuit set?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.name FROM races AS T1 INNER JOIN lapTimes AS T2 ON T1.raceId = T2.raceId INNER JOIN circuits AS T3 ON T1.circuitId = T3.circuitId WHERE T1.name = 'Austrian Grand Prix' ORDER BY T2.milliseconds LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 747, "question": "What atoms are connected in single type bonds?", "sql": "select connected.atom_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What atoms are connected in single type bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select connected.atom_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 748, "question": "What are the bond type for atoms with element Tin?", "sql": "select bond.bond_type from atom inner join bond on atom.atom_id = bond.bond_id where atom.element = 'sn'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the bond type for atoms with element Tin?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_type from atom inner join bond on atom.atom_id = bond.bond_id where atom.element = 'sn'\n\nIs the SQL semantically correct?"}
{"id": 749, "question": "What is the average score of the posts owned by the user csgillespie?", "sql": "select avg(posts.score) from users inner join posts on users.id = posts.owneruserid inner join comments on posts.id = comments.postid where users.displayname = 'csgillespie'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score of the posts owned by the user csgillespie?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select avg(posts.score) from users inner join posts on users.id = posts.owneruserid inner join comments on posts.id = comments.postid where users.displayname = 'csgillespie'\n\nIs the SQL semantically correct?"}
{"id": 750, "question": "Please list the accounts whose district is Tabor that are eligible for loans.", "sql": "SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the accounts whose district is Tabor that are eligible for loans.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.account_id FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T2.A2 = 'Tabor' AND T3.type = 'OWNER'\n\nIs the SQL semantically correct?"}
{"id": 751, "question": "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.", "sql": "SELECT T1.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate > '2000-01-01' AND T1.FundingType = 'Directly funded' AND T1.Charter = 1 AND T2.`Charter School (Y/N)` = 1", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T1.Phone FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.OpenDate > '2000-01-01' AND T1.FundingType = 'Directly funded' AND T1.Charter = 1 AND T2.`Charter School (Y/N)` = 1\n\nIs the SQL semantically correct?"}
{"id": 752, "question": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.", "sql": "SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.milliseconds ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.forename, T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId ORDER BY T1.milliseconds ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 753, "question": "State the racing year which has the fastest lap time?", "sql": "select distinct races.year from races inner join laptimes on races.raceid = laptimes.raceid where laptimes.lap = ( select fastestlaptime from results order by fastestlaptime desc limit 1 )", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the racing year which has the fastest lap time?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.year from races inner join laptimes on races.raceid = laptimes.raceid where laptimes.lap = ( select fastestlaptime from results order by fastestlaptime desc limit 1 )\n\nIs the SQL semantically correct?"}
{"id": 754, "question": "Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?", "sql": "select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'LAM' and customers.currency = 'Euro' and yearmonth.date = '2013-10' order by yearmonth.consumption desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which LAM customer used the Euro as their currency and had the highest consumption in October 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'LAM' and customers.currency = 'Euro' and yearmonth.date = '2013-10' order by yearmonth.consumption desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 755, "question": "Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.", "sql": "select cast(sum(case when bond.bond_type = '= ' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR047'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among all chemical compounds that contain molecule TR047, identify the percent that form a double-bond.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when bond.bond_type = '= ' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR047'\n\nIs the SQL semantically correct?"}
{"id": 756, "question": "What is the examination date of the patient whose albumin is the highest in the normal range?", "sql": "SELECT Date FROM Laboratory WHERE ALB BETWEEN 3.5 AND 5.5 ORDER BY ALB DESC LIMIT 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the examination date of the patient whose albumin is the highest in the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT Date FROM Laboratory WHERE ALB BETWEEN 3.5 AND 5.5 ORDER BY ALB DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 757, "question": "How many posts have a score less than 20?", "sql": "select count(postid) from comments where score < 20", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many posts have a score less than 20?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(postid) from comments where score < 20\n\nIs the SQL semantically correct?"}
{"id": 758, "question": "What's the German type of the card \"Ancestor's Chosen\"?", "sql": "SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the German type of the card \"Ancestor's Chosen\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.name = 'Ancestor''s Chosen' AND T2.language = 'German'\n\nIs the SQL semantically correct?"}
{"id": 759, "question": "Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.", "sql": "SELECT T2.category, T2.amount FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' ORDER BY T2.amount ASC", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the amount budgeted for 'April Speaker' event. List all the budgeted categories for said event in an ascending order based on their amount budgeted.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T2.category, T2.amount FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'April Speaker' ORDER BY T2.amount ASC\n\nIs the SQL semantically correct?"}
{"id": 760, "question": "What is the overall rating of the football player Gabriel Tamas in year 2011?", "sql": "select player_attributes.overall_rating from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player.player_name = 'Gabriel' and strftime('%Y' , player_attributes.date) = '2011'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the overall rating of the football player Gabriel Tamas in year 2011?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player_attributes.overall_rating from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player.player_name = 'Gabriel' and strftime('%Y' , player_attributes.date) = '2011'\n\nIs the SQL semantically correct?"}
{"id": 761, "question": "What is the percentage of molecules that are carcinogenic? Please provide your answer as a percentage with three decimal places.", "sql": "select cast(sum(case when label = '+' then 1 else 0 end) as real) * 100 / count(molecule_id) from molecule", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of molecules that are carcinogenic? Please provide your answer as a percentage with three decimal places.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when label = '+' then 1 else 0 end) as real) * 100 / count(molecule_id) from molecule\n\nIs the SQL semantically correct?"}
{"id": 762, "question": "What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?", "sql": "SELECT avg(laptimes.time) FROM drivers INNER JOIN laptimes ON drivers.driverid = laptimes.driverid INNER JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2009 AND drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT avg(laptimes.time) FROM drivers INNER JOIN laptimes ON drivers.driverid = laptimes.driverid INNER JOIN races ON laptimes.raceid = races.raceid WHERE races.year = 2009 AND drivers.forename = 'Sebastian' AND drivers.surname = 'Vettel'\n\nIs the SQL semantically correct?"}
{"id": 763, "question": "How many British drivers were born after 1980?", "sql": "select count(driverid) from drivers where dob > 1980 and nationality = 'British'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many British drivers were born after 1980?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(driverid) from drivers where dob > 1980 and nationality = 'British'\n\nIs the SQL semantically correct?"}
{"id": 764, "question": "Find and list the names of sets which doesn't have Japanese translation but have Korean translation.", "sql": "select sets.name from sets inner join set_translations on sets.code = set_translations.setcode where set_translations.language not like '%Japanese%' and set_translations.translation = ( select translation from set_translations inner join foreign_data on set_translations.language = foreign_data.language where foreign_data.language != 'Japanese%' )", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find and list the names of sets which doesn't have Japanese translation but have Korean translation.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.name from sets inner join set_translations on sets.code = set_translations.setcode where set_translations.language not like '%Japanese%' and set_translations.translation = ( select translation from set_translations inner join foreign_data on set_translations.language = foreign_data.language where foreign_data.language != 'Japanese%' )\n\nIs the SQL semantically correct?"}
{"id": 765, "question": "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?", "sql": "SELECT posthistorytypeid, count(DISTINCT userid) FROM posthistory WHERE postid = 3720 GROUP BY posthistorytypeid", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT posthistorytypeid, count(DISTINCT userid) FROM posthistory WHERE postid = 3720 GROUP BY posthistorytypeid\n\nIs the SQL semantically correct?"}
{"id": 766, "question": "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.", "sql": "SELECT frpm.`percent (%) eligible free (k-12)` FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.admfname1 = 'Alusine'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT frpm.`percent (%) eligible free (k-12)` FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.admfname1 = 'Alusine'\n\nIs the SQL semantically correct?"}
{"id": 767, "question": "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?", "sql": "select results.fastestlap from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on results.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' and races.name = 'Australian Grand Prix' and races.date = '2008' order by results.fastestlap desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select results.fastestlap from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on results.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' and races.name = 'Australian Grand Prix' and races.date = '2008' order by results.fastestlap desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 768, "question": "What is the sum of score of the post on 2010-07-19?", "sql": "select posts.score from tags inner join posts on tags.id = posts.id order by posts.viewcount desc limit 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the sum of score of the post on 2010-07-19?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select posts.score from tags inner join posts on tags.id = posts.id order by posts.viewcount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 769, "question": "Identify whether the molecule that contains atom TR001_1 is carcinogenic.", "sql": "select case when molecule.label = '+' then 'YES' else 'NO' end as yorn from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.atom_id = 'TR001_1'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify whether the molecule that contains atom TR001_1 is carcinogenic.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select case when molecule.label = '+' then 'YES' else 'NO' end as yorn from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.atom_id = 'TR001_1'\n\nIs the SQL semantically correct?"}
{"id": 770, "question": "What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?", "sql": "select count(schools.school) from schools inner join satscores on schools.cdscode = satscores.cds where schools.mailcity = 'Lakeport' and satscores.numge1500 > satscores.avgscrread + satscores.avgscrmath + satscores.avgscrwrite", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total number of schools whose total SAT scores are greater or equal to 1500 whose mailing city is Lakeport?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select count(schools.school) from schools inner join satscores on schools.cdscode = satscores.cds where schools.mailcity = 'Lakeport' and satscores.numge1500 > satscores.avgscrread + satscores.avgscrmath + satscores.avgscrwrite\n\nIs the SQL semantically correct?"}
{"id": 771, "question": "Identify the latest badge awarded to the user with the display name Emmett.", "sql": "SELECT name FROM badges WHERE userid = ( SELECT id FROM users WHERE displayname = 'Emmett' ) ORDER BY date DESC LIMIT 1", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the latest badge awarded to the user with the display name Emmett.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT name FROM badges WHERE userid = ( SELECT id FROM users WHERE displayname = 'Emmett' ) ORDER BY date DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 772, "question": "How many cities are there in Orange County, Virginia?", "sql": "SELECT count(city) FROM zip_code WHERE state = 'Virginia' AND county = 'Orange County'", "db_id": "student_club", "label": true, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cities are there in Orange County, Virginia?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT count(city) FROM zip_code WHERE state = 'Virginia' AND county = 'Orange County'\n\nIs the SQL semantically correct?"}
{"id": 773, "question": "Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?", "sql": "select bond.bond_type , molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where molecule.molecule_id = 'TR018' group by bond.bond_type , molecule.label order by count(bond.bond_type) desc limit 1", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which bond type accounted for the majority of the bonds found in molecule TR010 and state whether or not this molecule is carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_type , molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where molecule.molecule_id = 'TR018' group by bond.bond_type , molecule.label order by count(bond.bond_type) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 774, "question": "What is the composition of element chlorine in percentage among the single bond molecules?", "sql": "select cast(sum(iif(atom.element = 'cl' , 1 , 0)) as real) * 100 / count(atom.molecule_id) from atom inner join bond on atom.molecule_id = bond.molecule_id where bond.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the composition of element chlorine in percentage among the single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(iif(atom.element = 'cl' , 1 , 0)) as real) * 100 / count(atom.molecule_id) from atom inner join bond on atom.molecule_id = bond.molecule_id where bond.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 775, "question": "Among the molecules which contain \"c\" element, which of them are not carcinogenic?", "sql": "SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the molecules which contain \"c\" element, which of them are not carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'c' AND T2.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 776, "question": "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.", "sql": "SELECT surname, forename, dob, url FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT surname, forename, dob, url FROM drivers WHERE nationality = 'German' AND strftime('%Y', dob) BETWEEN '1971' AND '1985' ORDER BY dob DESC\n\nIs the SQL semantically correct?"}
{"id": 777, "question": "Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not.", "sql": "select bond.molecule_id , molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Enumerate the bond ID of triple bond type molecules and tell me if they are carcinogenic or not.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.molecule_id , molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 778, "question": "State the name of players who came from Belgium.", "sql": "select player.player_name from match inner join league on player.player_api_id = match.away_player_10 inner join player on match.home_player_1 = player.player_api_id inner join country on country.id = match.country_id where country.name = 'Belgium'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the name of players who came from Belgium.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.player_name from match inner join league on player.player_api_id = match.away_player_10 inner join player on match.home_player_1 = player.player_api_id inner join country on country.id = match.country_id where country.name = 'Belgium'\n\nIs the SQL semantically correct?"}
{"id": 779, "question": "The transaction of 840 USD happened in 1998/10/14, when was this account opened?", "sql": "SELECT date FROM account WHERE account_id = 840", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: The transaction of 840 USD happened in 1998/10/14, when was this account opened?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT date FROM account WHERE account_id = 840\n\nIs the SQL semantically correct?"}
{"id": 780, "question": "Which Russian set of cards contains the most cards overall?", "sql": "SELECT sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'Russian' ORDER BY sets.basesetsize DESC LIMIT 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which Russian set of cards contains the most cards overall?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT sets.name FROM sets INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE set_translations.language = 'Russian' ORDER BY sets.basesetsize DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 781, "question": "Among the drivers that finished the race in the 2008 Chinese Grand Prix, how many of them have participated in Formula_1 races?", "sql": "select count(races.raceid) from races inner join laptimes on races.raceid = laptimes.raceid inner join results on laptimes.raceid = results.raceid where races.year = 2008 and races.name = 'Australian Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the drivers that finished the race in the 2008 Chinese Grand Prix, how many of them have participated in Formula_1 races?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(races.raceid) from races inner join laptimes on races.raceid = laptimes.raceid inner join results on laptimes.raceid = results.raceid where races.year = 2008 and races.name = 'Australian Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 782, "question": "How many French constructors have a lap number of over 50?", "sql": "select count(constructors.name) from results inner join constructors on results.constructorid = constructors.constructorid inner join laptimes on results.raceid = laptimes.raceid where constructors.nationality = 'French' and laptimes.lap > 50", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many French constructors have a lap number of over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(constructors.name) from results inner join constructors on results.constructorid = constructors.constructorid inner join laptimes on results.raceid = laptimes.raceid where constructors.nationality = 'French' and laptimes.lap > 50\n\nIs the SQL semantically correct?"}
{"id": 783, "question": "What is the percentage of the female patient whose uric acid (UA) beyond the normal range?", "sql": "SELECT cast(sum(CASE WHEN patient.sex = 'F' AND laboratory.ua > 8.0 THEN 1 ELSE 0 END) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of the female patient whose uric acid (UA) beyond the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(CASE WHEN patient.sex = 'F' AND laboratory.ua > 8.0 THEN 1 ELSE 0 END) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id\n\nIs the SQL semantically correct?"}
{"id": 784, "question": "List the heroes' names whose eyes and hair colours are both black.", "sql": "select superhero.superhero_name from superhero inner join colour on colour.id = superhero.eye_colour_id where colour.colour = 'Black'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the heroes' names whose eyes and hair colours are both black.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select superhero.superhero_name from superhero inner join colour on colour.id = superhero.eye_colour_id where colour.colour = 'Black'\n\nIs the SQL semantically correct?"}
{"id": 785, "question": "in molecules with triple bonds, how many of them are not carcinogenic?", "sql": "select count(molecule.molecule_id) from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '#' and molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: in molecules with triple bonds, how many of them are not carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '#' and molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 786, "question": "List out the account numbers of clients who are youngest and have highest average salary?", "sql": "SELECT account.account_id FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN account ON district.district_id = account.district_id ORDER BY client.birth_date ASC, district.a11 DESC LIMIT 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the account numbers of clients who are youngest and have highest average salary?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT account.account_id FROM client INNER JOIN district ON client.district_id = district.district_id INNER JOIN account ON district.district_id = account.district_id ORDER BY client.birth_date ASC, district.a11 DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 787, "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.", "sql": "select distinct drivers.driverid from results inner join drivers on results.driverid = drivers.driverid where results.fastestlaptime = ( select min(time) from laptimes ) limit 5", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.driverid from results inner join drivers on results.driverid = drivers.driverid where results.fastestlaptime = ( select min(time) from laptimes ) limit 5\n\nIs the SQL semantically correct?"}
{"id": 788, "question": "Identify by their ID the molecules in which there is carbon.", "sql": "select molecule.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'si'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify by their ID the molecules in which there is carbon.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'si'\n\nIs the SQL semantically correct?"}
{"id": 789, "question": "Please list the leagues from Germany.", "sql": "SELECT T2.id FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Germany'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the leagues from Germany.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.id FROM Country AS T1 INNER JOIN League AS T2 ON T1.id = T2.country_id WHERE T1.name = 'Germany'\n\nIs the SQL semantically correct?"}
{"id": 790, "question": "List all the names of events that had an attendance of over 20 students but were not fundraisers.", "sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T1.event_id) > 20", "db_id": "student_club", "label": true, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the names of events that had an attendance of over 20 students but were not fundraisers.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T1.event_name FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event GROUP BY T1.event_id HAVING COUNT(T1.event_id) > 20\n\nIs the SQL semantically correct?"}
{"id": 791, "question": "For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?", "sql": "select patient.diagnosis from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.igm < 40 and laboratory.igm < 400 group by patient.diagnosis order by count(patient.diagnosis) desc limit 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients with an abnormal Ig M level, what is the most common disease they are diagnosed with?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.diagnosis from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.igm < 40 and laboratory.igm < 400 group by patient.diagnosis order by count(patient.diagnosis) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 792, "question": "List the bond type and the bond ID of the atom 45.", "sql": "select bond.bond_type , bond.bond_id from atom inner join connected on atom.atom_id = connected.atom_id2 inner join bond on bond.bond_id = connected.bond_id where atom.atom_id = 45", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the bond type and the bond ID of the atom 45.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_type , bond.bond_id from atom inner join connected on atom.atom_id = connected.atom_id2 inner join bond on bond.bond_id = connected.bond_id where atom.atom_id = 45\n\nIs the SQL semantically correct?"}
{"id": 793, "question": "Which citizenship do the vast majority of the drivers hold?", "sql": "SELECT nationality FROM drivers GROUP BY nationality ORDER BY count(nationality) DESC", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which citizenship do the vast majority of the drivers hold?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT nationality FROM drivers GROUP BY nationality ORDER BY count(nationality) DESC\n\nIs the SQL semantically correct?"}
{"id": 794, "question": "What is the percentage of female patient were born after 1930?", "sql": "select cast(sum(case when sex = 'F' and strftime('%Y' , birthday) > '1930' then 1 else 0 end) as real) * 100 / count(id) from patient", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of female patient were born after 1930?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select cast(sum(case when sex = 'F' and strftime('%Y' , birthday) > '1930' then 1 else 0 end) as real) * 100 / count(id) from patient\n\nIs the SQL semantically correct?"}
{"id": 795, "question": "Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?", "sql": "select count(customers.customerid) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'eur' and yearmonth.consumption > 1000", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the customers who paid in euro, how many of them have a monthly consumption of over 1000?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select count(customers.customerid) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'eur' and yearmonth.consumption > 1000\n\nIs the SQL semantically correct?"}
{"id": 796, "question": "How many negative comments did Neil McGuigan get in his posts?", "sql": "select count(comments.score) from users inner join comments on users.id = comments.userid where users.displayname = 'Neil McGuigan' and comments.score < 60", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many negative comments did Neil McGuigan get in his posts?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(comments.score) from users inner join comments on users.id = comments.userid where users.displayname = 'Neil McGuigan' and comments.score < 60\n\nIs the SQL semantically correct?"}
{"id": 797, "question": "How many cards with print rarity have ruling text printed on 01/02/2007?", "sql": "select count(cards.uuid) from cards inner join rulings on cards.uuid = rulings.uuid where rulings.date = '2009-01-10' and cards.rarity = 'rare'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards with print rarity have ruling text printed on 01/02/2007?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.uuid) from cards inner join rulings on cards.uuid = rulings.uuid where rulings.date = '2009-01-10' and cards.rarity = 'rare'\n\nIs the SQL semantically correct?"}
{"id": 798, "question": "Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers.", "sql": "select distinct drivers.driverid , drivers.code from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.raceid = laptimes.raceid where drivers.dob = ( select max(dob) from drivers where dob = 1971 )", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which drivers who were born in 1971 and has the fastest lap time on the race? Give id and code of these drivers.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.driverid , drivers.code from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.raceid = laptimes.raceid where drivers.dob = ( select max(dob) from drivers where dob = 1971 )\n\nIs the SQL semantically correct?"}
{"id": 799, "question": "What was Lewis Hamilton's final rank in the 2008 Chinese Grand Prix?", "sql": "SELECT results.positionorder FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was Lewis Hamilton's final rank in the 2008 Chinese Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.positionorder FROM races INNER JOIN results ON races.raceid = results.raceid INNER JOIN drivers ON results.driverid = drivers.driverid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 800, "question": "Name the driver with the most winning. Mention his nationality and what is his maximum point scores.", "sql": "SELECT T1.surname, T1.nationality, AVG(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.wins IS NOT NULL GROUP BY T1.surname, T1.nationality ORDER BY COUNT(T2.wins) DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the driver with the most winning. Mention his nationality and what is his maximum point scores.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.surname, T1.nationality, AVG(T2.points) FROM drivers AS T1 INNER JOIN driverStandings AS T2 ON T1.driverId = T2.driverId WHERE T2.wins IS NOT NULL GROUP BY T1.surname, T1.nationality ORDER BY COUNT(T2.wins) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 801, "question": "How much more was customer 7 consuming in April 2013 than customer 5?", "sql": "select consumption * (customerid + consumption) from yearmonth where date like '2013-04%'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much more was customer 7 consuming in April 2013 than customer 5?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select consumption * (customerid + consumption) from yearmonth where date like '2013-04%'\n\nIs the SQL semantically correct?"}
{"id": 802, "question": "Which year recorded the most gas use paid in EUR?", "sql": "SELECT strftime('%Y', T2.Date) AS Year FROM yearmonth T2 JOIN customers T1 ON T2.CustomerID = T1.CustomerID WHERE T1.Currency = 'EUR' GROUP BY Year ORDER BY SUM(T2.Consumption) DESC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which year recorded the most gas use paid in EUR?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT strftime('%Y', T2.Date) AS Year FROM yearmonth T2 JOIN customers T1 ON T2.CustomerID = T1.CustomerID WHERE T1.Currency = 'EUR' GROUP BY Year ORDER BY SUM(T2.Consumption) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 803, "question": "For artifact type of cards that do not have multiple faces on the same card, state its legalities status for vintage play format.", "sql": "select distinct legalities.format from cards inner join legalities on cards.uuid = legalities.uuid where cards.types = 'Artifact' and cards.side is null", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For artifact type of cards that do not have multiple faces on the same card, state its legalities status for vintage play format.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct legalities.format from cards inner join legalities on cards.uuid = legalities.uuid where cards.types = 'Artifact' and cards.side is null\n\nIs the SQL semantically correct?"}
{"id": 804, "question": "What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.", "sql": "SELECT cardkingdomid FROM cards WHERE cardkingdomid IS NOT NULL AND cardkingdomfoilid IS NOT NULL", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the foiled cards that are incredibly powerful when paired with non foiled cards? List the IDs.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT cardkingdomid FROM cards WHERE cardkingdomid IS NOT NULL AND cardkingdomfoilid IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 805, "question": "What is the highest eligible free rate for K-12 students in the schools in Alameda County?", "sql": "SELECT max(`free meal count (k-12)`) / max(`enrollment (k-12)`) FROM frpm WHERE `county name` = 'Alameda'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the highest eligible free rate for K-12 students in the schools in Alameda County?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT max(`free meal count (k-12)`) / max(`enrollment (k-12)`) FROM frpm WHERE `county name` = 'Alameda'\n\nIs the SQL semantically correct?"}
{"id": 806, "question": "What is the actual finish time for Bruce McLaren in the race No.743?", "sql": "SELECT T2.milliseconds FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.raceId = 743 AND T3.forename = 'Bruce'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the actual finish time for Bruce McLaren in the race No.743?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.milliseconds FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T2.driverId = T3.driverId WHERE T1.raceId = 743 AND T3.forename = 'Bruce'\n\nIs the SQL semantically correct?"}
{"id": 807, "question": "Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.", "sql": "select name from sets where type = 'commander' order by totalsetsize desc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the sets whose expansion type is Commander, which set has the highest total number of cards including promotional and related supplemental products but excluding Alchemy modifications? Indicate the id of the set.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select name from sets where type = 'commander' order by totalsetsize desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 808, "question": "What is the type of card \"Benalish Knight\"?", "sql": "select sets.type from cards inner join sets on cards.id = sets.id where cards.name = 'Benalish Knight'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the type of card \"Benalish Knight\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.type from cards inner join sets on cards.id = sets.id where cards.name = 'Benalish Knight'\n\nIs the SQL semantically correct?"}
{"id": 809, "question": "State the driver with the most points scored. Find his full name with that points.", "sql": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid ORDER BY results.points DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the driver with the most points scored. Find his full name with that points.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid ORDER BY results.points DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 810, "question": "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?", "sql": "select drivers.driverref , drivers.url from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and races.year = 2008", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the champion of 2008's Australian Grand Prix and where can I know more about him?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.driverref , drivers.url from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and races.year = 2008\n\nIs the SQL semantically correct?"}
{"id": 811, "question": "Chlorine is in what type of bond?", "sql": "select bond.bond_type from atom inner join connected on atom.molecule_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id where atom.element = 'te'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Chlorine is in what type of bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_type from atom inner join connected on atom.molecule_id = connected.atom_id inner join bond on bond.bond_id = connected.bond_id where atom.element = 'te'\n\nIs the SQL semantically correct?"}
{"id": 812, "question": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?", "sql": "select cast((sum(case when player.player_name = 'Landon Donovan' then player_attributes.overall_rating else 0 end) - sum(case when player.player_name = 'Jordan Bowery' then player_attributes.overall_rating else 0 end)) as real) * 100 / sum(case when player.player_name = 'Landon Donovan' then player_attributes.overall_rating else 0 end) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select cast((sum(case when player.player_name = 'Landon Donovan' then player_attributes.overall_rating else 0 end) - sum(case when player.player_name = 'Jordan Bowery' then player_attributes.overall_rating else 0 end)) as real) * 100 / sum(case when player.player_name = 'Landon Donovan' then player_attributes.overall_rating else 0 end) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id\n\nIs the SQL semantically correct?"}
{"id": 813, "question": "In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?", "sql": "SELECT T2.name FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.fastestLapTime ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.name FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId ORDER BY T1.fastestLapTime ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 814, "question": "In which country was the first European Grand Prix hosted? Name the circuit and location.", "sql": "select circuits.country , circuits.location from circuits inner join races on circuits.circuitid = races.circuitid where races.name = 'European Grand Prix' order by races.year asc limit 1", "db_id": "formula_1", "label": true, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In which country was the first European Grand Prix hosted? Name the circuit and location.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select circuits.country , circuits.location from circuits inner join races on circuits.circuitid = races.circuitid where races.name = 'European Grand Prix' order by races.year asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 815, "question": "Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?", "sql": "select patient.diagnosis from patient inner join laboratory on patient.id = laboratory.id where laboratory.tg > 100", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.diagnosis from patient inner join laboratory on patient.id = laboratory.id where laboratory.tg > 100\n\nIs the SQL semantically correct?"}
{"id": 816, "question": "For the post that got the most number of answers owned by csgillespie, how many answers did it get?", "sql": "SELECT answercount FROM posts WHERE ownerdisplayname = 'csgillespie' ORDER BY answercount DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the post that got the most number of answers owned by csgillespie, how many answers did it get?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT answercount FROM posts WHERE ownerdisplayname = 'csgillespie' ORDER BY answercount DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 817, "question": "Please list top five molecules that have double bonds in alphabetical order.", "sql": "SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' ORDER BY T1.molecule_id ASC LIMIT 5", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list top five molecules that have double bonds in alphabetical order.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT T1.molecule_id FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.bond_type = '=' ORDER BY T1.molecule_id ASC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 818, "question": "Give the coordinate position for Abu Dhabi Grand Prix.", "sql": "SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.name = 'Abu Dhabi Grand Prix'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the coordinate position for Abu Dhabi Grand Prix.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT circuits.lat, circuits.lng FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.name = 'Abu Dhabi Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 819, "question": "For all the drivers who finished the game in race No. 872, who is the youngest?", "sql": "SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 872 ORDER BY drivers.dob DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the drivers who finished the game in race No. 872, who is the youngest?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 872 ORDER BY drivers.dob DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 820, "question": "What type of promotion is of card 'Duress'?", "sql": "select promotypes from cards where name = 'Duress'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What type of promotion is of card 'Duress'?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select promotypes from cards where name = 'Duress'\n\nIs the SQL semantically correct?"}
{"id": 821, "question": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?", "sql": "select pitstops.duration from pitstops inner join races on pitstops.raceid = races.raceid inner join laptimes on laptimes.raceid = races.raceid where races.name = 'Austrian Grand Prix' order by laptimes.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select pitstops.duration from pitstops inner join races on pitstops.raceid = races.raceid inner join laptimes on laptimes.raceid = races.raceid where races.name = 'Austrian Grand Prix' order by laptimes.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 822, "question": "What is the unique id of the set that has the highest number of cards?", "sql": "select cards.uuid from cards inner join sets on cards.uuid = sets.id order by sets.basesetsize desc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the unique id of the set that has the highest number of cards?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.uuid from cards inner join sets on cards.uuid = sets.id order by sets.basesetsize desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 823, "question": "What proportion of cards do not have a text box with a normal layout?", "sql": "select cast(sum(case when layout = 'normal' then 1 else 0 end) as real) * 100 / count(id) from cards where istextless = 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What proportion of cards do not have a text box with a normal layout?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when layout = 'normal' then 1 else 0 end) as real) * 100 / count(id) from cards where istextless = 1\n\nIs the SQL semantically correct?"}
{"id": 824, "question": "For the earliest customer, what segment did he/she have?", "sql": "SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T1.Date ASC LIMIT 1", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the earliest customer, what segment did he/she have?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T2.Segment FROM transactions_1k AS T1 INNER JOIN customers AS T2 ON T1.CustomerID = T2.CustomerID ORDER BY T1.Date ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 825, "question": "What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?", "sql": "SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN T2.Consumption ELSE 0 END) AS ConsumptionDifference FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date BETWEEN '201201' AND '201212'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the difference in gas consumption between CZK-paying customers and EUR-paying customers in 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT SUM(CASE WHEN T1.Currency = 'CZK' THEN T2.Consumption ELSE 0 END) - SUM(CASE WHEN T1.Currency = 'EUR' THEN T2.Consumption ELSE 0 END) AS ConsumptionDifference FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Date BETWEEN '201201' AND '201212'\n\nIs the SQL semantically correct?"}
{"id": 826, "question": "Lists all types of cards available in arena.", "sql": "select subtypes , supertypes from cards where availability = 'arena'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Lists all types of cards available in arena.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select subtypes , supertypes from cards where availability = 'arena'\n\nIs the SQL semantically correct?"}
{"id": 827, "question": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.", "sql": "SELECT cast(sum(CASE WHEN alignment.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / count(superhero.id), count(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id ELSE NULL END) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN alignment ON superhero.alignment_id = alignment.id", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT cast(sum(CASE WHEN alignment.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / count(superhero.id), count(CASE WHEN publisher.publisher_name = 'Marvel Comics' THEN superhero.id ELSE NULL END) FROM superhero INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN alignment ON superhero.alignment_id = alignment.id\n\nIs the SQL semantically correct?"}
{"id": 828, "question": "How many cards of legalities whose status is restricted are found in a starter deck?", "sql": "select count(cards.id) from cards inner join legalities on cards.uuid = legalities.uuid where cards.isstarter = 1 and legalities.status = 'Restricted'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards of legalities whose status is restricted are found in a starter deck?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.id) from cards inner join legalities on cards.uuid = legalities.uuid where cards.isstarter = 1 and legalities.status = 'Restricted'\n\nIs the SQL semantically correct?"}
{"id": 829, "question": "Who has the highest average finishing rate between the highest and shortest football player?", "sql": "select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player.height between 1 and 10 group by player.player_name order by avg(player_attributes.finishing) desc limit 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who has the highest average finishing rate between the highest and shortest football player?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player.height between 1 and 10 group by player.player_name order by avg(player_attributes.finishing) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 830, "question": "How many female clients' accounts are in the region of South Bohemia?", "sql": "select count(client.client_id) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where client.gender = 'F' and district.a3 = 'south Bohemia'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many female clients' accounts are in the region of South Bohemia?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(client.client_id) from client inner join account on client.district_id = account.district_id inner join district on account.district_id = district.district_id where client.gender = 'F' and district.a3 = 'south Bohemia'\n\nIs the SQL semantically correct?"}
{"id": 831, "question": "Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.", "sql": "SELECT ( SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler' )", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the difference between Emil Blonsky's weight and Charles Chandler's weight.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT ( SELECT weight_kg FROM superhero WHERE full_name = 'Emil Blonsky' ) - ( SELECT weight_kg FROM superhero WHERE full_name = 'Charles Chandler' )\n\nIs the SQL semantically correct?"}
{"id": 832, "question": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN ('+-', '-') AND T2.CRP >= 1.0 AND T1.Birthday IS NOT NULL AND T1.Birthday != '0000-00-00' AND T1.Birthday != '' AND T1.Birthday <= DATE('now', '-18 years')", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.CRP NOT IN ('+-', '-') AND T2.CRP >= 1.0 AND T1.Birthday IS NOT NULL AND T1.Birthday != '0000-00-00' AND T1.Birthday != '' AND T1.Birthday <= DATE('now', '-18 years')\n\nIs the SQL semantically correct?"}
{"id": 833, "question": "Please list top two bonds that happened with the molecule TR006 in alphabetical order.", "sql": "SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id LIMIT 2", "db_id": "toxicology", "label": true, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list top two bonds that happened with the molecule TR006 in alphabetical order.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT bond_id FROM bond WHERE molecule_id = 'TR006' ORDER BY bond_id LIMIT 2\n\nIs the SQL semantically correct?"}
{"id": 834, "question": "Write down bond id for molecules that are carcinogenic.", "sql": "SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write down bond id for molecules that are carcinogenic.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT bond.bond_id FROM bond INNER JOIN molecule ON bond.molecule_id = molecule.molecule_id WHERE molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 835, "question": "How many American drivers have puncture status.", "sql": "select count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join status on results.statusid = status.statusid where status.status = 2 and drivers.nationality = 'American'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many American drivers have puncture status.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join status on results.statusid = status.statusid where status.status = 2 and drivers.nationality = 'American'\n\nIs the SQL semantically correct?"}
{"id": 836, "question": "List out the type of events which have remaining budget more than 30 USD.", "sql": "select distinct event.type from event inner join budget on event.type = budget.link_to_event where budget.remaining > 30", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the type of events which have remaining budget more than 30 USD.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select distinct event.type from event inner join budget on event.type = budget.link_to_event where budget.remaining > 30\n\nIs the SQL semantically correct?"}
{"id": 837, "question": "Give the number of votes for the post about data visualization.", "sql": "SELECT sum(votes.bountyamount) FROM votes INNER JOIN posts ON votes.postid = posts.id WHERE posts.title LIKE '%data visualization%'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the number of votes for the post about data visualization.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT sum(votes.bountyamount) FROM votes INNER JOIN posts ON votes.postid = posts.id WHERE posts.title LIKE '%data visualization%'\n\nIs the SQL semantically correct?"}
{"id": 838, "question": "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?", "sql": "SELECT foreign_data.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT foreign_data.name FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Italian' AND cards.name = 'Ancestor''s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 839, "question": "What was the longest time that Lewis Hamilton had spent at a pit stop?", "sql": "SELECT max(pitstops.duration) FROM drivers INNER JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the longest time that Lewis Hamilton had spent at a pit stop?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT max(pitstops.duration) FROM drivers INNER JOIN pitstops ON drivers.driverid = pitstops.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 840, "question": "What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.", "sql": "select results.constructorid , races.url from results inner join races on results.raceid = races.raceid inner join driverstandings on races.raceid = driverstandings.raceid where races.name = 'Singapore Grand Prix' and driverstandings.driverid = 0 order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the constructor reference name of the champion in the 2009 Singapore Grand Prix? Please give its website.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select results.constructorid , races.url from results inner join races on results.raceid = races.raceid inner join driverstandings on races.raceid = driverstandings.raceid where races.name = 'Singapore Grand Prix' and driverstandings.driverid = 0 order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 841, "question": "Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.", "sql": "select member.first_name , member.last_name , attendance.link_to_event from expense inner join attendance on expense.link_to_member = attendance.link_to_member inner join member on attendance.link_to_member = member.member_id where expense.approved = 'true' and expense.expense_date between '2019-01-10' and '2019-11-19'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which members who were approved from 1/10/2019 to 11/19/2019? Please identify the member who attended the event and the link to their event.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name , attendance.link_to_event from expense inner join attendance on expense.link_to_member = attendance.link_to_member inner join member on attendance.link_to_member = member.member_id where expense.approved = 'true' and expense.expense_date between '2019-01-10' and '2019-11-19'\n\nIs the SQL semantically correct?"}
{"id": 842, "question": "What is the average total price of the transactions taken place in gas stations in the Czech Republic?", "sql": "SELECT AVG(T2.Amount * T2.Price) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average total price of the transactions taken place in gas stations in the Czech Republic?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT AVG(T2.Amount * T2.Price) FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T1.Country = 'CZE'\n\nIs the SQL semantically correct?"}
{"id": 843, "question": "List the football teams that has a chance creation passing class of Risky. Inidcate its short name only.", "sql": "select team.team_short_name from team inner join team_attributes on team.team_api_id = team_attributes.team_fifa_api_id where team_attributes.chancecreationpassingclass = 'Risky'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the football teams that has a chance creation passing class of Risky. Inidcate its short name only.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_short_name from team inner join team_attributes on team.team_api_id = team_attributes.team_fifa_api_id where team_attributes.chancecreationpassingclass = 'Risky'\n\nIs the SQL semantically correct?"}
{"id": 844, "question": "For patient born between Year 1930 to 1940, how many percent of them were inpatient?", "sql": "SELECT cast(sum(CASE WHEN admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM patient WHERE strftime('%Y', birthday) BETWEEN '1930' AND '1940'", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For patient born between Year 1930 to 1940, how many percent of them were inpatient?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(CASE WHEN admission = '+' THEN 1 ELSE 0 END) AS REAL) * 100 / count(id) FROM patient WHERE strftime('%Y', birthday) BETWEEN '1930' AND '1940'\n\nIs the SQL semantically correct?"}
{"id": 845, "question": "For the Bahrain Grand Prix in 2007, how many drivers not finished the game?", "sql": "select count(results.driverid) from results inner join races on results.raceid = races.raceid where races.name = 'Bahrain Grand Prix' and races.year = 2007 and results.statusid != 0", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the Bahrain Grand Prix in 2007, how many drivers not finished the game?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(results.driverid) from results inner join races on results.raceid = races.raceid where races.name = 'Bahrain Grand Prix' and races.year = 2007 and results.statusid != 0\n\nIs the SQL semantically correct?"}
{"id": 846, "question": "Was the patient with the number 57266's uric acid within a normal range?", "sql": "select laboratory.ua from patient inner join laboratory on patient.id = laboratory.id where patient.id = 57266 and patient.sex = 'M' or patient.sex = 'F' and laboratory.ua > 8.0", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Was the patient with the number 57266's uric acid within a normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select laboratory.ua from patient inner join laboratory on patient.id = laboratory.id where patient.id = 57266 and patient.sex = 'M' or patient.sex = 'F' and laboratory.ua > 8.0\n\nIs the SQL semantically correct?"}
{"id": 847, "question": "Calculate the average height for each superhero.", "sql": "SELECT id, AVG(height_cm) FROM superhero GROUP BY id", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the average height for each superhero.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT id, AVG(height_cm) FROM superhero GROUP BY id\n\nIs the SQL semantically correct?"}
{"id": 848, "question": "Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".", "sql": "SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please indicate the college of the person whose first name is Katy with the link to the major \"rec1N0upiVLy5esTO\".\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T2.college FROM member AS T1 INNER JOIN major AS T2 ON T1.link_to_major = T2.major_id WHERE T1.first_name = 'Katy' AND T1.link_to_major = 'rec1N0upiVLy5esTO'\n\nIs the SQL semantically correct?"}
{"id": 849, "question": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?", "sql": "SELECT count(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.crp NOT IN ('+', '-') AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) < 18", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(DISTINCT patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.crp NOT IN ('+', '-') AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) < 18\n\nIs the SQL semantically correct?"}
{"id": 850, "question": "Who is the owner of the post \"Eliciting priors from experts\"?", "sql": "select users.displayname from posts inner join users on posts.owneruserid = users.id where posts.title = 'Eliciting priors from experts'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who is the owner of the post \"Eliciting priors from experts\"?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.displayname from posts inner join users on posts.owneruserid = users.id where posts.title = 'Eliciting priors from experts'\n\nIs the SQL semantically correct?"}
{"id": 851, "question": "For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?", "sql": "select count(transactions_1k.transactionid) from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where gasstations.country = 'CZE' and transactions_1k.time between '8:00' and '9:00' and transactions_1k.date = '2012-08-26'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the transactions happened during 8:00-9:00 in 2012/8/26, how many happened in CZE?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select count(transactions_1k.transactionid) from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where gasstations.country = 'CZE' and transactions_1k.time between '8:00' and '9:00' and transactions_1k.date = '2012-08-26'\n\nIs the SQL semantically correct?"}
{"id": 852, "question": "Is molecule TR124 carcinogenic?", "sql": "SELECT CASE WHEN label = '+' THEN 'YES' ELSE 'NO' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR124'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is molecule TR124 carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CASE WHEN label = '+' THEN 'YES' ELSE 'NO' END AS is_carcinogenic FROM molecule WHERE molecule_id = 'TR124'\n\nIs the SQL semantically correct?"}
{"id": 853, "question": "What are the atom IDs of the bond TR000_2_5?", "sql": "SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the atom IDs of the bond TR000_2_5?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT atom_id, atom_id2 FROM connected WHERE bond_id = 'TR000_2_5'\n\nIs the SQL semantically correct?"}
{"id": 854, "question": "What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?", "sql": "SELECT AVG(T3.milliseconds) AS average_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Sebastian' AND T1.surname = 'Vettel' AND T2.year = 2009 AND T2.name = 'Chinese Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT AVG(T3.milliseconds) AS average_lap_time FROM drivers AS T1 INNER JOIN lapTimes AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T1.forename = 'Sebastian' AND T1.surname = 'Vettel' AND T2.year = 2009 AND T2.name = 'Chinese Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 855, "question": "Please list the Italian text ruling of all the cards in the set Coldsnap.", "sql": "select rulings.text from rulings inner join set_translations on rulings.id = set_translations.id where set_translations.language = 'Italian' and set_translations.translation = 'Coldsnap'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the Italian text ruling of all the cards in the set Coldsnap.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select rulings.text from rulings inner join set_translations on rulings.id = set_translations.id where set_translations.language = 'Italian' and set_translations.translation = 'Coldsnap'\n\nIs the SQL semantically correct?"}
{"id": 856, "question": "Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID.", "sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` LIMIT 1", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which patient is the first patient with an abnormal anti-SSA to come to the hospital? Please give his or her ID.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.SSA NOT IN ('-', '+-') ORDER BY T1.`First Date` LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 857, "question": "How many heroes have stealth power?", "sql": "select count(hero_power.hero_id) from hero_power inner join superpower on hero_power.power_id = superpower.id where superpower.power_name = 'stealth'", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many heroes have stealth power?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select count(hero_power.hero_id) from hero_power inner join superpower on hero_power.power_id = superpower.id where superpower.power_name = 'stealth'\n\nIs the SQL semantically correct?"}
{"id": 858, "question": "What was Lewis Hamilton's final rank in the 2008 Chinese Grand Prix?", "sql": "select distinct results.positionorder from results inner join driverstandings on results.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid inner join drivers on driverstandings.driverid = drivers.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' and races.year = 2008 and races.name = 'Australian Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was Lewis Hamilton's final rank in the 2008 Chinese Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct results.positionorder from results inner join driverstandings on results.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid inner join drivers on driverstandings.driverid = drivers.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' and races.year = 2008 and races.name = 'Australian Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 859, "question": "List the title of posts which were edited by Vebjorn Ljosa.", "sql": "select distinct posts.title from users inner join posts on users.id = posts.lasteditoruserid inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Vebjorn Ljosa'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the title of posts which were edited by Vebjorn Ljosa.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select distinct posts.title from users inner join posts on users.id = posts.lasteditoruserid inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Vebjorn Ljosa'\n\nIs the SQL semantically correct?"}
{"id": 860, "question": "Lists all types of cards in German.", "sql": "SELECT DISTINCT foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND (cards.subtypes IS NOT NULL OR cards.supertypes IS NOT NULL)", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Lists all types of cards in German.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT DISTINCT foreign_data.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND (cards.subtypes IS NOT NULL OR cards.supertypes IS NOT NULL)\n\nIs the SQL semantically correct?"}
{"id": 861, "question": "What is the ratio of male to female patients among all those with abnormal uric acid counts?", "sql": "select cast(sum(case when patient.sex = 'M' then 1 else 0 end) as real) / sum(case when patient.sex = 'F' then 1 else 0 end) from patient inner join laboratory on patient.id = laboratory.id where laboratory.ua < '8.0'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of male to female patients among all those with abnormal uric acid counts?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select cast(sum(case when patient.sex = 'M' then 1 else 0 end) as real) / sum(case when patient.sex = 'F' then 1 else 0 end) from patient inner join laboratory on patient.id = laboratory.id where laboratory.ua < '8.0'\n\nIs the SQL semantically correct?"}
{"id": 862, "question": "What is the average overall rating of the football player Aaron Doran?", "sql": "select avg(player_attributes.overall_rating) from player inner join player_attributes on player.id = player_attributes.player_api_id where player.player_name = 'Aaron Doran'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average overall rating of the football player Aaron Doran?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select avg(player_attributes.overall_rating) from player inner join player_attributes on player.id = player_attributes.player_api_id where player.player_name = 'Aaron Doran'\n\nIs the SQL semantically correct?"}
{"id": 863, "question": "Point out the language of set id \"174\"?", "sql": "SELECT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.number = '174'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Point out the language of set id \"174\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T3.language FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code INNER JOIN set_translations AS T3 ON T2.code = T3.setCode WHERE T1.number = '174'\n\nIs the SQL semantically correct?"}
{"id": 864, "question": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'", "sql": "select users.displayname from posts inner join posthistory on posts.id = posthistory.postid inner join users on posthistory.userid = users.id where posts.title = 'Open source tools for visualizing multi-dimensional data?'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.displayname from posts inner join posthistory on posts.id = posthistory.postid inner join users on posthistory.userid = users.id where posts.title = 'Open source tools for visualizing multi-dimensional data?'\n\nIs the SQL semantically correct?"}
{"id": 865, "question": "In which country can I find the circuit with the highest altitude?", "sql": "SELECT country FROM circuits WHERE alt IS NOT NULL ORDER BY alt DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In which country can I find the circuit with the highest altitude?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT country FROM circuits WHERE alt IS NOT NULL ORDER BY alt DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 866, "question": "How many of the account holders in South Bohemia still do not own credit cards?", "sql": "select count(client.client_id) from client inner join disp on client.client_id = disp.client_id inner join district on client.district_id = district.district_id inner join card on disp.disp_id = card.disp_id where district.a3 = 'south bohemia'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many of the account holders in South Bohemia still do not own credit cards?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(client.client_id) from client inner join disp on client.client_id = disp.client_id inner join district on client.district_id = district.district_id inner join card on disp.disp_id = card.disp_id where district.a3 = 'south bohemia'\n\nIs the SQL semantically correct?"}
{"id": 867, "question": "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?", "sql": "SELECT strftime('%Y', '1991-10-21') - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date = '1991-10-21' AND T2.UA = 8.4", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT strftime('%Y', '1991-10-21') - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.Date = '1991-10-21' AND T2.UA = 8.4\n\nIs the SQL semantically correct?"}
{"id": 868, "question": "What's the location coordinates of Silverstone Circuit?", "sql": "select lat , lng from circuits where location = 'Silverstone'", "db_id": "formula_1", "label": true, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the location coordinates of Silverstone Circuit?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select lat , lng from circuits where location = 'Silverstone'\n\nIs the SQL semantically correct?"}
{"id": 869, "question": "How old is the youngest Japanese driver? What is his name?", "sql": "select dob , max(dob) from drivers where nationality = 'Japanese'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How old is the youngest Japanese driver? What is his name?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select dob , max(dob) from drivers where nationality = 'Japanese'\n\nIs the SQL semantically correct?"}
{"id": 870, "question": "Which element is the least numerous in non-carcinogenic molecules?", "sql": "select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '-' order by atom.element asc limit 1", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which element is the least numerous in non-carcinogenic molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '-' order by atom.element asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 871, "question": "Name the atoms' elements that form bond TR000_2_3.", "sql": "select atom.element from atom inner join bond on atom.atom_id = bond.bond_id where bond.bond_id = 'TR000_2_3'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the atoms' elements that form bond TR000_2_3.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join bond on atom.atom_id = bond.bond_id where bond.bond_id = 'TR000_2_3'\n\nIs the SQL semantically correct?"}
{"id": 872, "question": "Please list all display names of users who are adults.", "sql": "SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65", "db_id": "codebase_community", "label": true, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list all display names of users who are adults.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT DisplayName FROM users WHERE Age BETWEEN 19 AND 65\n\nIs the SQL semantically correct?"}
{"id": 873, "question": "What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.", "sql": "SELECT T1.School, T2.AvgScrWrite, T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE STRFTIME('%Y', T1.OpenDate) > '1991' OR STRFTIME('%Y', T1.ClosedDate) < '2000'", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score in writing for the schools that were opened after 1991 or closed before 2000? List the school names along with the score. Also, list the communication number of the schools if there is any.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T1.School, T2.AvgScrWrite, T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE STRFTIME('%Y', T1.OpenDate) > '1991' OR STRFTIME('%Y', T1.ClosedDate) < '2000'\n\nIs the SQL semantically correct?"}
{"id": 874, "question": "Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.", "sql": "select cards.name , sets.name from cards inner join sets on cards.setcode = sets.code where sets.mtgocode is null or sets.mtgocode = ''", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide top three sets that don't appear in Magic: The Gathering Online, along with their names in in alphabetical order.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name , sets.name from cards inner join sets on cards.setcode = sets.code where sets.mtgocode is null or sets.mtgocode = ''\n\nIs the SQL semantically correct?"}
{"id": 875, "question": "What's Bruno Senna's Q1 result in the qualifying race No. 354?", "sql": "select distinct results.resultid from qualifying inner join results on qualifying.driverid = results.driverid inner join drivers on drivers.driverid = results.driverid where drivers.forename = 'Bruno' and drivers.surname = 'Senna' and qualifying.raceid = 354 and qualifying.q1 = '1'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's Bruno Senna's Q1 result in the qualifying race No. 354?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct results.resultid from qualifying inner join results on qualifying.driverid = results.driverid inner join drivers on drivers.driverid = results.driverid where drivers.forename = 'Bruno' and drivers.surname = 'Senna' and qualifying.raceid = 354 and qualifying.q1 = '1'\n\nIs the SQL semantically correct?"}
{"id": 876, "question": "Please list the ID of the patient whose RF is normal and who is older than 60.", "sql": "select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.rf < 20 and strftime('%Y' , patient.birthday) - strftime('%Y' , laboratory.rf) > 60", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the ID of the patient whose RF is normal and who is older than 60.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.rf < 20 and strftime('%Y' , patient.birthday) - strftime('%Y' , laboratory.rf) > 60\n\nIs the SQL semantically correct?"}
{"id": 877, "question": "What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?", "sql": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN qualifying ON drivers.driverid = qualifying.driverid INNER JOIN races ON qualifying.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2008 AND circuits.name = 'Marina Bay Street Circuit' AND qualifying.position = 3 ORDER BY qualifying.q3 LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN qualifying ON drivers.driverid = qualifying.driverid INNER JOIN races ON qualifying.raceid = races.raceid INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2008 AND circuits.name = 'Marina Bay Street Circuit' AND qualifying.position = 3 ORDER BY qualifying.q3 LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 878, "question": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?", "sql": "SELECT cast(sum(CASE WHEN sets.isnonfoilonly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / count(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN sets ON cards.setcode = sets.code WHERE foreign_data.language = 'Japanese'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT cast(sum(CASE WHEN sets.isnonfoilonly = 1 THEN 1 ELSE 0 END) AS REAL) * 100 / count(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid INNER JOIN sets ON cards.setcode = sets.code WHERE foreign_data.language = 'Japanese'\n\nIs the SQL semantically correct?"}
{"id": 879, "question": "Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.", "sql": "select publisher.publisher_name , sum(case when publisher.publisher_name = 'Marvel Comics' then 1 else 0 end) - sum(case when publisher.publisher_name = 'DC Comics' then 1 else 0 end) from publisher inner join superhero on publisher.id = superhero.publisher_id", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between DC and Marvel Comics, which publisher has published more superheroes? Find the difference in the number of superheroes they have published.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select publisher.publisher_name , sum(case when publisher.publisher_name = 'Marvel Comics' then 1 else 0 end) - sum(case when publisher.publisher_name = 'DC Comics' then 1 else 0 end) from publisher inner join superhero on publisher.id = superhero.publisher_id\n\nIs the SQL semantically correct?"}
{"id": 880, "question": "Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.", "sql": "SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverid = results.driverid WHERE strftime('%Y', drivers.dob) > '1975' AND results.position = 2", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which drivers born after 1975 have been ranked 2? Please give their forenames and surnames.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM drivers INNER JOIN results ON drivers.driverid = results.driverid WHERE strftime('%Y', drivers.dob) > '1975' AND results.position = 2\n\nIs the SQL semantically correct?"}
{"id": 881, "question": "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.", "sql": "SELECT T1.type, T2.language, T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T1.type, T2.language, T2.flavorText FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.watermark = 'colorpie'\n\nIs the SQL semantically correct?"}
{"id": 882, "question": "Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.", "sql": "SELECT laboratory.plt, patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.diagnosis = 'MCTD' AND (laboratory.plt > 100 AND laboratory.plt < 400)", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT laboratory.plt, patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.diagnosis = 'MCTD' AND (laboratory.plt > 100 AND laboratory.plt < 400)\n\nIs the SQL semantically correct?"}
{"id": 883, "question": "What is the percentage of players that are under 180 cm who have an overall strength of more than 70?", "sql": "SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height IS NOT NULL AND T2.strength IS NOT NULL", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of players that are under 180 cm who have an overall strength of more than 70?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.height < 180 AND T2.strength > 70 THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height IS NOT NULL AND T2.strength IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 884, "question": "What are the two most common first names among the school administrators? Indicate the district to which they administer.", "sql": "select admfname1 , district from schools group by admfname1 order by count(admfname1) desc limit 2", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the two most common first names among the school administrators? Indicate the district to which they administer.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select admfname1 , district from schools group by admfname1 order by count(admfname1) desc limit 2\n\nIs the SQL semantically correct?"}
{"id": 885, "question": "What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.", "sql": "SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL ORDER BY T1.NumGE1500 DESC LIMIT 1", "db_id": "california_schools", "label": true, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the administrator's email address for the school with the highest number of test takers who received SAT scores of at least 1500?Provide the name of the school.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.AdmEmail1, T2.School FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T1.NumGE1500 IS NOT NULL ORDER BY T1.NumGE1500 DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 886, "question": "List all the elements with double bond, consisted in molecule TR024.", "sql": "SELECT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T1.atom_id WHERE T2.bond_type = '=' AND T2.molecule_id = 'TR024'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the elements with double bond, consisted in molecule TR024.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T3.atom_id = T1.atom_id WHERE T2.bond_type = '=' AND T2.molecule_id = 'TR024'\n\nIs the SQL semantically correct?"}
{"id": 887, "question": "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?", "sql": "select id from cards where side is null and subtypes like 'Angel' or subtypes like 'Wizard'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select id from cards where side is null and subtypes like 'Angel' or subtypes like 'Wizard'\n\nIs the SQL semantically correct?"}
{"id": 888, "question": "For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?", "sql": "select cast(sum(case when cards.hasnonfoil = 1 then 1 else 0 end) as real) * 100 / count(cards.id) from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where set_translations.language = 'Japanese'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the set of cards that has Japanese translation, what is the percentage of them are only available in non-foil?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when cards.hasnonfoil = 1 then 1 else 0 end) as real) * 100 / count(cards.id) from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where set_translations.language = 'Japanese'\n\nIs the SQL semantically correct?"}
{"id": 889, "question": "What is the percentage of double bonds in the molecule TR008? Please provide your answer as a percentage with five decimal places.", "sql": "select cast(sum(case when bond.bond_type = '= ' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR008'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of double bonds in the molecule TR008? Please provide your answer as a percentage with five decimal places.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when bond.bond_type = '= ' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR008'\n\nIs the SQL semantically correct?"}
{"id": 890, "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.", "sql": "SELECT driverid FROM laptimes ORDER BY `time` ASC LIMIT 5", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT driverid FROM laptimes ORDER BY `time` ASC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 891, "question": "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?", "sql": "SELECT DISTINCT T1.CDSCode, T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Riverside' AND T2.AvgScrMath > 400", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT DISTINCT T1.CDSCode, T1.FundingType FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.County = 'Riverside' AND T2.AvgScrMath > 400\n\nIs the SQL semantically correct?"}
{"id": 892, "question": "How many elements are there for single bond molecules?", "sql": "SELECT COUNT(DISTINCT T2.element) FROM atom AS T2 INNER JOIN bond AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.bond_type = '-' GROUP BY T2.molecule_id HAVING COUNT(DISTINCT T1.bond_type) = 1", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many elements are there for single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(DISTINCT T2.element) FROM atom AS T2 INNER JOIN bond AS T1 ON T2.molecule_id = T1.molecule_id WHERE T1.bond_type = '-' GROUP BY T2.molecule_id HAVING COUNT(DISTINCT T1.bond_type) = 1\n\nIs the SQL semantically correct?"}
{"id": 893, "question": "How many bond id have element iodine?", "sql": "select count(bond.bond_id) from bond inner join atom on bond.molecule_id = atom.molecule_id where atom.element = 'i'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bond id have element iodine?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(bond.bond_id) from bond inner join atom on bond.molecule_id = atom.molecule_id where atom.element = 'i'\n\nIs the SQL semantically correct?"}
{"id": 894, "question": "How much did the Student_Club members spend on advertisement in September Meeting?", "sql": "SELECT sum(CASE WHEN budget.category = 'Advertisement' THEN budget.spent ELSE 0 END) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'September Meeting' AND member.position = 'Member'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much did the Student_Club members spend on advertisement in September Meeting?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT sum(CASE WHEN budget.category = 'Advertisement' THEN budget.spent ELSE 0 END) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'September Meeting' AND member.position = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 895, "question": "For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?", "sql": "SELECT patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.date = '1991-10-21' AND laboratory.ua = '8.4'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patient who got the laboratory test of uric acid level as 8.4 on 1991-10-21, how old was he/she at that time?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.date = '1991-10-21' AND laboratory.ua = '8.4'\n\nIs the SQL semantically correct?"}
{"id": 896, "question": "What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.", "sql": "select distinct patient.diagnosis , strftime('%Y' , current_timestamp) - strftime('%Y' , patient.birthday) as age from patient inner join laboratory on patient.id = laboratory.id where laboratory.rbc < 3.5", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the patient's diagnosis for those who has lower red blood blood cell? State their ID and age.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.diagnosis , strftime('%Y' , current_timestamp) - strftime('%Y' , patient.birthday) as age from patient inner join laboratory on patient.id = laboratory.id where laboratory.rbc < 3.5\n\nIs the SQL semantically correct?"}
{"id": 897, "question": "What are the cards that only available in paper and Japanese language?", "sql": "SELECT T1.uuid FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the cards that only available in paper and Japanese language?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T1.uuid FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T1.availability = 'paper' AND T2.language = 'Japanese'\n\nIs the SQL semantically correct?"}
{"id": 898, "question": "What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.", "sql": "SELECT foreign_data.language, foreign_data.flavortext, cards.types FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the language and flavor text of the card that has colorpie watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT foreign_data.language, foreign_data.flavortext, cards.types FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'colorpie'\n\nIs the SQL semantically correct?"}
{"id": 899, "question": "What was the product id of the transaction happened at 2012/8/23 21:20:00?", "sql": "SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the product id of the transaction happened at 2012/8/23 21:20:00?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT ProductID FROM transactions_1k WHERE Date = '2012-08-23' AND Time = '21:20:00'\n\nIs the SQL semantically correct?"}
{"id": 900, "question": "Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?", "sql": "SELECT patient.id, patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.tg > 100", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide list of patients and their diagnosis with triglyceride (TG) index greater than 100 of the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id, patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.tg > 100\n\nIs the SQL semantically correct?"}
{"id": 901, "question": "What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?", "sql": "SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)", "db_id": "california_schools", "label": true, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the number of SAT test takers of the schools with the highest FRPM count for K-12 students?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.NumTstTakr FROM frpm AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T1.`FRPM Count (K-12)` = (SELECT MAX(`FRPM Count (K-12)`) FROM frpm)\n\nIs the SQL semantically correct?"}
{"id": 902, "question": "How many elements are there for single bond molecules?", "sql": "SELECT count(DISTINCT atom.element) FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many elements are there for single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(DISTINCT atom.element) FROM bond INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 903, "question": "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.", "sql": "SELECT patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.dna >= 8", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.diagnosis FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.dna >= 8\n\nIs the SQL semantically correct?"}
{"id": 904, "question": "What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?", "sql": "SELECT examination.`acl igg` FROM laboratory INNER JOIN examination ON laboratory.id = examination.id INNER JOIN patient ON examination.id = patient.id WHERE patient.sex = 'F' AND laboratory.ua > 6.50 ORDER BY examination.`acl igg` DESC LIMIT 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the anti Cardiolipin antibody concentration of the female patient with the highest uric acid level in the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT examination.`acl igg` FROM laboratory INNER JOIN examination ON laboratory.id = examination.id INNER JOIN patient ON examination.id = patient.id WHERE patient.sex = 'F' AND laboratory.ua > 6.50 ORDER BY examination.`acl igg` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 905, "question": "What is the name of players with the highest potential?", "sql": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T1.potential DESC LIMIT 1", "db_id": "european_football_2", "label": true, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the name of players with the highest potential?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id ORDER BY T1.potential DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 906, "question": "What department offers the major that Pierce and Guidi took?", "sql": "select major.department from major inner join member on major.major_id = member.link_to_major where member.first_name = 'Pierce' and member.last_name = 'Guidi'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What department offers the major that Pierce and Guidi took?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select major.department from major inner join member on major.major_id = member.link_to_major where member.first_name = 'Pierce' and member.last_name = 'Guidi'\n\nIs the SQL semantically correct?"}
{"id": 907, "question": "Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text.", "sql": "select distinct foreign_data.language from cards inner join foreign_data on cards.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and cards.flavortext is not null", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list all the foreign languages in which the card \"Ancestor's Chosen\" has a flavor text.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct foreign_data.language from cards inner join foreign_data on cards.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and cards.flavortext is not null\n\nIs the SQL semantically correct?"}
{"id": 908, "question": "List all the football player with the highest balance score and potential score of 61.", "sql": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61) AND T1.potential = 61", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the football player with the highest balance score and potential score of 61.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.balance = (SELECT MAX(balance) FROM Player_Attributes WHERE potential = 61) AND T1.potential = 61\n\nIs the SQL semantically correct?"}
{"id": 909, "question": "What is the preferred foot when attacking of the player with the lowest potential?", "sql": "select preferred_foot from player_attributes order by potential asc limit 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the preferred foot when attacking of the player with the lowest potential?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select preferred_foot from player_attributes order by potential asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 910, "question": "What is the ratio of male to female patients among all those with abnormal uric acid counts?", "sql": "SELECT cast(sum(CASE WHEN patient.sex = 'M' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN patient.sex = 'F' THEN 1 ELSE 0 END) FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.ua BETWEEN 8 AND 6.5", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of male to female patients among all those with abnormal uric acid counts?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(CASE WHEN patient.sex = 'M' THEN 1 ELSE 0 END) AS REAL) / sum(CASE WHEN patient.sex = 'F' THEN 1 ELSE 0 END) FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.ua BETWEEN 8 AND 6.5\n\nIs the SQL semantically correct?"}
{"id": 911, "question": "Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.", "sql": "select account.account_id from loan inner join account on loan.account_id = account.account_id where loan.duration > 24 and account.date < 1997 order by loan.amount asc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the accounts who have loan validity more than 24 months, list out the accounts that have the lowest approved amount and have account opening date before 1997.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from loan inner join account on loan.account_id = account.account_id where loan.duration > 24 and account.date < 1997 order by loan.amount asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 912, "question": "How many molecules without sulphur element is not having double bond?", "sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE NOT EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 's') AND NOT EXISTS (SELECT 1 FROM bond AS T3 WHERE T3.molecule_id = T1.molecule_id AND T3.bond_type = '=')", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules without sulphur element is not having double bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 WHERE NOT EXISTS (SELECT 1 FROM atom AS T2 WHERE T2.molecule_id = T1.molecule_id AND T2.element = 's') AND NOT EXISTS (SELECT 1 FROM bond AS T3 WHERE T3.molecule_id = T1.molecule_id AND T3.bond_type = '=')\n\nIs the SQL semantically correct?"}
{"id": 913, "question": "Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.", "sql": "SELECT atom_id FROM atom WHERE element = 'c' AND substr(molecule_id, 3, 3) BETWEEN 10 AND 49", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the atoms belong to the molecule with ID between TR010 to TR050 that contain the element carbon.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT atom_id FROM atom WHERE element = 'c' AND substr(molecule_id, 3, 3) BETWEEN 10 AND 49\n\nIs the SQL semantically correct?"}
{"id": 914, "question": "What is the average amount paid by students in a position other than a member?", "sql": "select avg(expense.cost) from expense inner join attendance on expense.link_to_member = attendance.link_to_member inner join member on attendance.link_to_member = member.member_id where member.position != 'Member'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average amount paid by students in a position other than a member?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select avg(expense.cost) from expense inner join attendance on expense.link_to_member = attendance.link_to_member inner join member on attendance.link_to_member = member.member_id where member.position != 'Member'\n\nIs the SQL semantically correct?"}
{"id": 915, "question": "Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?", "sql": "select sum(case when player_attributes.attacking_work_rate = 'low' then 1 else 0 end) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id inner join match on player.player_api_id = match.away_player_11 or match.away_player_10 = player.player_api_id where player_attributes.preferred_foot = 'left'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the players whose preferred foot was the left foot when attacking, how many of them would remain in his position when the team attacked?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select sum(case when player_attributes.attacking_work_rate = 'low' then 1 else 0 end) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id inner join match on player.player_api_id = match.away_player_11 or match.away_player_10 = player.player_api_id where player_attributes.preferred_foot = 'left'\n\nIs the SQL semantically correct?"}
{"id": 916, "question": "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.", "sql": "SELECT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rbc < 3.5 OR laboratory.rbc > 6.0 AND patient.admission = '-'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rbc < 3.5 OR laboratory.rbc > 6.0 AND patient.admission = '-'\n\nIs the SQL semantically correct?"}
{"id": 917, "question": "Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.", "sql": "select drivers.forename , drivers.surname , results.time from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where races.name = 'Canadian Grand Prix' and races.year = 2008 order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who is the champion of the Canadian Grand Prix in 2008? Indicate his finish time.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.surname , results.time from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where races.name = 'Canadian Grand Prix' and races.year = 2008 order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 918, "question": "Who was the first one paid his/her dues? Tell the full name.", "sql": "SELECT member.first_name, member.last_name FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.source = 'Dues' ORDER BY income.date_received LIMIT 1", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the first one paid his/her dues? Tell the full name.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT member.first_name, member.last_name FROM income INNER JOIN member ON income.link_to_member = member.member_id WHERE income.source = 'Dues' ORDER BY income.date_received LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 919, "question": "Which of the play format has the highest number of banned status? Indicate the play format and the names of all the card meet the condition.", "sql": "SELECT T2.format, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' GROUP BY T2.format ORDER BY COUNT(T2.status) DESC LIMIT 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of the play format has the highest number of banned status? Indicate the play format and the names of all the card meet the condition.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T2.format, T1.name FROM cards AS T1 INNER JOIN legalities AS T2 ON T1.uuid = T2.uuid WHERE T2.status = 'Banned' GROUP BY T2.format ORDER BY COUNT(T2.status) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 920, "question": "For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?", "sql": "SELECT avg(examination.`acl igg`) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.admission = '+' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For in-patient age 50 and above, what is their average anti-cardiolipin antibody (IgG) concentration?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT avg(examination.`acl igg`) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE patient.admission = '+' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50\n\nIs the SQL semantically correct?"}
{"id": 921, "question": "Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.", "sql": "SELECT forename, surname, url, dob FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the full name, Wiki Pedia page link, and date of birth of German drivers born between 1971 and 1985. List it in descending order of date of birth.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT forename, surname, url, dob FROM drivers WHERE nationality = 'German' AND dob BETWEEN '1971-01-01' AND '1985-12-31' ORDER BY dob DESC\n\nIs the SQL semantically correct?"}
{"id": 922, "question": "Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?", "sql": "select count(player.player_fifa_api_id) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.defensive_work_rate = 'high' and strftime('%Y' , player.birthday) < 1986", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the players born before the year 1986, how many of them would remain in his position and defense while the team attacked?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select count(player.player_fifa_api_id) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.defensive_work_rate = 'high' and strftime('%Y' , player.birthday) < 1986\n\nIs the SQL semantically correct?"}
{"id": 923, "question": "What type of bond is there between the atoms TR004_8 and TR004_20?", "sql": "select bond.bond_type from bond inner join connected on bond.bond_id = connected.bond_id where connected.atom_id between 'TR004_8' and 'TR004_20'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What type of bond is there between the atoms TR004_8 and TR004_20?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_type from bond inner join connected on bond.bond_id = connected.bond_id where connected.atom_id between 'TR004_8' and 'TR004_20'\n\nIs the SQL semantically correct?"}
{"id": 924, "question": "State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?", "sql": "SELECT T2.`School Name`, T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`FRPM Count (Ages 5-17)` > 800 AND T1.County = 'Monterey' AND T2.`School Type` = 'High School'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the names and full communication address of high schools in Monterey which has more than 800 free or reduced price meals for ages 15-17?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.`School Name`, T1.Street, T1.City, T1.Zip, T1.State FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`FRPM Count (Ages 5-17)` > 800 AND T1.County = 'Monterey' AND T2.`School Type` = 'High School'\n\nIs the SQL semantically correct?"}
{"id": 925, "question": "Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated.", "sql": "select cards.artist , legalities.format from cards inner join legalities on cards.uuid = legalities.uuid order by cards.artist asc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who is the illustrator that illustrated the least amount of cards? List the format of play of the cards that he/she illustrated.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.artist , legalities.format from cards inner join legalities on cards.uuid = legalities.uuid order by cards.artist asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 926, "question": "Among the students majored in interior design, who have attended the Community Theater event?", "sql": "SELECT T2.member_id FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major INNER JOIN attendance AS T4 ON T2.member_id = T4.link_to_member INNER JOIN event AS T3 ON T3.event_id = T4.link_to_event WHERE T1.major_name = 'Interior Design' AND T3.event_name = 'Community Theater'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the students majored in interior design, who have attended the Community Theater event?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T2.member_id FROM major AS T1 INNER JOIN member AS T2 ON T1.major_id = T2.link_to_major INNER JOIN attendance AS T4 ON T2.member_id = T4.link_to_member INNER JOIN event AS T3 ON T3.event_id = T4.link_to_event WHERE T1.major_name = 'Interior Design' AND T3.event_name = 'Community Theater'\n\nIs the SQL semantically correct?"}
{"id": 927, "question": "Indicate which atoms are connected in non-carcinogenic type molecules.", "sql": "SELECT T3.atom_id, T3.atom_id2 FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id WHERE T1.label = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Indicate which atoms are connected in non-carcinogenic type molecules.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T3.atom_id, T3.atom_id2 FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN connected AS T3 ON T2.atom_id = T3.atom_id WHERE T1.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 928, "question": "What is the percentage of the female patient whose uric acid (UA) beyond the normal range?", "sql": "select cast(sum(case when patient.sex = 'F' then 1 else 0 end) as real) * 100 / count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where laboratory.ua > 6.5 and patient.sex = 'M'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of the female patient whose uric acid (UA) beyond the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select cast(sum(case when patient.sex = 'F' then 1 else 0 end) as real) * 100 / count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where laboratory.ua > 6.5 and patient.sex = 'M'\n\nIs the SQL semantically correct?"}
{"id": 929, "question": "How many female patients born in 1964 were admitted to the hospital? List them by ID.", "sql": "SELECT count(id) FROM patient WHERE sex = 'F' AND strftime('%Y', birthday) = '1964' AND admission = '+'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many female patients born in 1964 were admitted to the hospital? List them by ID.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(id) FROM patient WHERE sex = 'F' AND strftime('%Y', birthday) = '1964' AND admission = '+'\n\nIs the SQL semantically correct?"}
{"id": 930, "question": "What is the average amount of loan which are still on running contract with statement issuance after each transaction?", "sql": "SELECT avg(loan.amount) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND loan.status = 'C'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average amount of loan which are still on running contract with statement issuance after each transaction?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT avg(loan.amount) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE account.frequency = 'POPLATEK PO OBRATU' AND loan.status = 'C'\n\nIs the SQL semantically correct?"}
{"id": 931, "question": "Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.", "sql": "select distinct laboratory.plt from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.diagnosis = 'MCTD' and laboratory.plt > 100 and laboratory.plt < 400", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list a patient's platelet level if it is within the normal range and if he or she is diagnosed with MCTD.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct laboratory.plt from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.diagnosis = 'MCTD' and laboratory.plt > 100 and laboratory.plt < 400\n\nIs the SQL semantically correct?"}
{"id": 932, "question": "What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.", "sql": "SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element), T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of Hydrogen elements in molecule ID TR006? List the ratio with its label.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.element = 'H' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.element), T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id = 'TR006'\n\nIs the SQL semantically correct?"}
{"id": 933, "question": "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.", "sql": "select client.birth_date , client.client_id from district inner join account on district.district_id = account.district_id inner join client on account.district_id = client.district_id where client.birth_date between 1983 and 1987 and district.a3 = 'east Bohemia'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.birth_date , client.client_id from district inner join account on district.district_id = account.district_id inner join client on account.district_id = client.district_id where client.birth_date between 1983 and 1987 and district.a3 = 'east Bohemia'\n\nIs the SQL semantically correct?"}
{"id": 934, "question": "What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?", "sql": "SELECT cast((sum(CASE WHEN player.player_name = 'Landon Donovan' THEN player_attributes.overall_rating ELSE 0 END) - sum(CASE WHEN player.player_name = 'Jordan Bowery' THEN player_attributes.overall_rating ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN player.player_name = 'Landon Donovan' THEN player_attributes.overall_rating ELSE 0 END) FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.date = '2013-07-12'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage is Landon Donovan's overall rating higher than Jordan Bowery on 2013/7/12?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT cast((sum(CASE WHEN player.player_name = 'Landon Donovan' THEN player_attributes.overall_rating ELSE 0 END) - sum(CASE WHEN player.player_name = 'Jordan Bowery' THEN player_attributes.overall_rating ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN player.player_name = 'Landon Donovan' THEN player_attributes.overall_rating ELSE 0 END) FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player_attributes.date = '2013-07-12'\n\nIs the SQL semantically correct?"}
{"id": 935, "question": "Among the drivers that finished the race in the 2008 Chinese Grand Prix, how many of them have participated in Formula_1 races?", "sql": "SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the drivers that finished the race in the 2008 Chinese Grand Prix, how many of them have participated in Formula_1 races?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(T1.driverId) FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId WHERE T2.year = 2008 AND T2.name = 'Australian Grand Prix' AND T1.time IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 936, "question": "In duels, what are the top 10 cards with the highest uncoverted mana cost?", "sql": "select cards.name from cards inner join legalities on cards.uuid = legalities.uuid where legalities.format = 'duel' order by cards.manacost desc limit 10", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In duels, what are the top 10 cards with the highest uncoverted mana cost?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name from cards inner join legalities on cards.uuid = legalities.uuid where legalities.format = 'duel' order by cards.manacost desc limit 10\n\nIs the SQL semantically correct?"}
{"id": 937, "question": "Calculate the total average cost that Elijah Allen spent in the events on September and October.", "sql": "SELECT avg(expense.cost) FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND strftime('%m', expense.expense_date) IN ('9', '10')", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the total average cost that Elijah Allen spent in the events on September and October.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT avg(expense.cost) FROM expense INNER JOIN member ON expense.link_to_member = member.member_id WHERE member.first_name = 'Elijah' AND member.last_name = 'Allen' AND strftime('%m', expense.expense_date) IN ('9', '10')\n\nIs the SQL semantically correct?"}
{"id": 938, "question": "What is the total expense for the Yearly Kickoff?", "sql": "SELECT sum(expense.cost) FROM expense INNER JOIN attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total expense for the Yearly Kickoff?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT sum(expense.cost) FROM expense INNER JOIN attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'Yearly Kickoff'\n\nIs the SQL semantically correct?"}
{"id": 939, "question": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?", "sql": "select cast((( select fastestlapspeed from results where raceid = 853 ) - ( select fastestlapspeed from results where raceid = 854) ) as real) * 100 / ( select fastestlapspeed from results where raceid = 854 ) from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.raceid = laptimes.raceid where drivers.surname = 'di Resta' and drivers.forename = 'Paul'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast((( select fastestlapspeed from results where raceid = 853 ) - ( select fastestlapspeed from results where raceid = 854) ) as real) * 100 / ( select fastestlapspeed from results where raceid = 854 ) from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.raceid = laptimes.raceid where drivers.surname = 'di Resta' and drivers.forename = 'Paul'\n\nIs the SQL semantically correct?"}
{"id": 940, "question": "What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.", "sql": "select distinct examination.diagnosis , laboratory.date from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.id = 30609", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the disease patient '30609' diagnosed with. List all the date of laboratory tests done for this patient.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct examination.diagnosis , laboratory.date from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.id = 30609\n\nIs the SQL semantically correct?"}
{"id": 941, "question": "Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?", "sql": "SELECT COUNT(id) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Of all the cards that are designed by Aaron Miller, how many of them are incredibly powerful?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE artist = 'Aaron Miller' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 942, "question": "What is the percentage of loan amount that has been fully paid with no issue.", "sql": "SELECT cast(sum(CASE WHEN status = 'A' THEN 1 ELSE 0 END) AS REAL) * 100 / count(loan_id) FROM loan", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of loan amount that has been fully paid with no issue.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT cast(sum(CASE WHEN status = 'A' THEN 1 ELSE 0 END) AS REAL) * 100 / count(loan_id) FROM loan\n\nIs the SQL semantically correct?"}
{"id": 943, "question": "Which of the Italian constructor got the highest point to date? Give its introduction website?", "sql": "select constructors.name , constructors.url from constructors inner join constructorresults on constructors.constructorid = constructorresults.constructorid where constructors.nationality = 'Italian' order by constructorresults.points desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of the Italian constructor got the highest point to date? Give its introduction website?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select constructors.name , constructors.url from constructors inner join constructorresults on constructors.constructorid = constructorresults.constructorid where constructors.nationality = 'Italian' order by constructorresults.points desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 944, "question": "Which bond ids are double-bond with carcinogenic compound?", "sql": "select bond.bond_id from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' and molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which bond ids are double-bond with carcinogenic compound?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select bond.bond_id from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '= ' and molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 945, "question": "During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?", "sql": "select pitstops.lap from drivers inner join pitstops on drivers.driverid = pitstops.driverid inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: During which lap did Lewis Hamilton take a pit stop during the 2011 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select pitstops.lap from drivers inner join pitstops on drivers.driverid = pitstops.driverid inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'\n\nIs the SQL semantically correct?"}
{"id": 946, "question": "How many molecules are carcinogenic and have the bromine element?", "sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'br' AND T1.label = '+'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules are carcinogenic and have the bromine element?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.element = 'br' AND T1.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 947, "question": "Among the cards with a white border color, how many of them have unknown power?", "sql": "SELECT count(id) FROM cards WHERE power = '*' OR power IS NULL AND bordercolor = 'white'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the cards with a white border color, how many of them have unknown power?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(id) FROM cards WHERE power = '*' OR power IS NULL AND bordercolor = 'white'\n\nIs the SQL semantically correct?"}
{"id": 948, "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?", "sql": "select avg(yearmonth.consumption) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'CZK' and customers.segment in ('SME' , 'LAM' , 'KAM') and yearmonth.date in ('2013' , '2013') and customers.segment in ('LAM' , 'KAM' , 'SME') group by yearmonth.customerid order by sum(yearmonth.consumption) asc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select avg(yearmonth.consumption) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'CZK' and customers.segment in ('SME' , 'LAM' , 'KAM') and yearmonth.date in ('2013' , '2013') and customers.segment in ('LAM' , 'KAM' , 'SME') group by yearmonth.customerid order by sum(yearmonth.consumption) asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 949, "question": "What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?", "sql": "select cast(sum(case when schools.doctype = 'Unified School District' then 1 else 0 end) as real) / count(schools.school) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.county = 'Orange'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of merged Unified School District schools in Orange County to merged Elementary School District schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select cast(sum(case when schools.doctype = 'Unified School District' then 1 else 0 end) as real) / count(schools.school) from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.county = 'Orange'\n\nIs the SQL semantically correct?"}
{"id": 950, "question": "Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2.0 AND T3.`ANA Pattern` LIKE '%P%'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients whose total bilirubin is over the normal range, how many of them have a peripheral pattern observed in the sheet of ANA examination?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID INNER JOIN Examination AS T3 ON T1.ID = T3.ID WHERE T2.`T-BIL` >= 2.0 AND T3.`ANA Pattern` LIKE '%P%'\n\nIs the SQL semantically correct?"}
{"id": 951, "question": "For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?", "sql": "SELECT SUM(CASE WHEN strftime('%Y-%m', T2.Date) = '1981-11' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN strftime('%Y-%m', T2.Date) = '1981-12' THEN T2.`T-CHO` ELSE 0 END) AS Cholesterol_Decrease FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patient who was born on 1959/2/18, what is the decrease rate for his/her total cholesterol from November to December in 1981?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT SUM(CASE WHEN strftime('%Y-%m', T2.Date) = '1981-11' THEN T2.`T-CHO` ELSE 0 END) - SUM(CASE WHEN strftime('%Y-%m', T2.Date) = '1981-12' THEN T2.`T-CHO` ELSE 0 END) AS Cholesterol_Decrease FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Birthday = '1959-02-18'\n\nIs the SQL semantically correct?"}
{"id": 952, "question": "List the city and state of members enrolled under electrical and computer engineering department.", "sql": "SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Electrical and Computer Engineering' AND member.position = 'Member'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the city and state of members enrolled under electrical and computer engineering department.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT zip_code.city, zip_code.state FROM member INNER JOIN zip_code ON member.zip = zip_code.zip_code INNER JOIN major ON member.link_to_major = major.major_id WHERE major.department = 'Electrical and Computer Engineering' AND member.position = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 953, "question": "Please list the names of the cards in the set \"Hauptset Zehnte Edition\".", "sql": "SELECT cards.name FROM cards INNER JOIN set_translations ON cards.uuid = set_translations.id WHERE set_translations.translation = 'Hauptset Zehnte Edition'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the names of the cards in the set \"Hauptset Zehnte Edition\".\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT cards.name FROM cards INNER JOIN set_translations ON cards.uuid = set_translations.id WHERE set_translations.translation = 'Hauptset Zehnte Edition'\n\nIs the SQL semantically correct?"}
{"id": 954, "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?", "sql": "SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability IN ('paper', 'mtgo')", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT manaCost FROM cards WHERE layout = 'normal' AND frameVersion = '2003' AND borderColor = 'black' AND availability IN ('paper', 'mtgo')\n\nIs the SQL semantically correct?"}
{"id": 955, "question": "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.", "sql": "SELECT county, school, closeddate FROM schools WHERE statustype = 'Closed' GROUP BY county, school, closeddate ORDER BY count(school) DESC LIMIT 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT county, school, closeddate FROM schools WHERE statustype = 'Closed' GROUP BY county, school, closeddate ORDER BY count(school) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 956, "question": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.", "sql": "SELECT T1.type, T3.A11 FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type != 'OWNER' AND T3.A11 BETWEEN 8000 AND 9000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.type, T3.A11 FROM disp AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.type != 'OWNER' AND T3.A11 BETWEEN 8000 AND 9000\n\nIs the SQL semantically correct?"}
{"id": 957, "question": "Give the number of votes for the post about data visualization.", "sql": "select sum(votes.id) from posts inner join votes on posts.id = votes.postid where posts.title like '%data visualization%'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the number of votes for the post about data visualization.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select sum(votes.id) from posts inner join votes on posts.id = votes.postid where posts.title like '%data visualization%'\n\nIs the SQL semantically correct?"}
{"id": 958, "question": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?", "sql": "SELECT COUNT(*) FROM trans T1 WHERE T1.account_id = 3 AND T1.k_symbol = 'statement' UNION ALL SELECT COUNT(*) FROM trans T2 WHERE T2.account_id = 3 AND T2.amount = 3539 AND T2.k_symbol = 'payment'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT COUNT(*) FROM trans T1 WHERE T1.account_id = 3 AND T1.k_symbol = 'statement' UNION ALL SELECT COUNT(*) FROM trans T2 WHERE T2.account_id = 3 AND T2.amount = 3539 AND T2.k_symbol = 'payment'\n\nIs the SQL semantically correct?"}
{"id": 959, "question": "For the race happened in 2015/11/29, how many drivers did not finish the game?", "sql": "SELECT COUNT(T2.raceId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.date = '2015-11-29' AND T3.status = 'Finished'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the race happened in 2015/11/29, how many drivers did not finish the game?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(T2.raceId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId INNER JOIN status AS T3 ON T2.statusId = T3.statusId WHERE T1.date = '2015-11-29' AND T3.status = 'Finished'\n\nIs the SQL semantically correct?"}
{"id": 960, "question": "How old is the youngest Japanese driver? What is his name?", "sql": "SELECT 2022 - strftime('%Y', dob) + 1 AS age, forename || ' ' || surname AS name FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How old is the youngest Japanese driver? What is his name?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT 2022 - strftime('%Y', dob) + 1 AS age, forename || ' ' || surname AS name FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 961, "question": "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?", "sql": "select sets.isonlineonly from cards inner join sets on cards.setcode = sets.code where cards.name = 'Angel of Mercy' and sets.mtgocode is not null", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select sets.isonlineonly from cards inner join sets on cards.setcode = sets.code where cards.name = 'Angel of Mercy' and sets.mtgocode is not null\n\nIs the SQL semantically correct?"}
{"id": 962, "question": "Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID.", "sql": "SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.diagnosis = 'SLE' AND laboratory.`u-pro` BETWEEN 0 AND 30", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which patient has a normal proteinuria level and is diagnosed with SLE? Please give his or her patient ID.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE patient.diagnosis = 'SLE' AND laboratory.`u-pro` BETWEEN 0 AND 30\n\nIs the SQL semantically correct?"}
{"id": 963, "question": "What is the type of education offered in the school who scored the highest average in Math?", "sql": "select schools.edopscode from schools inner join frpm on schools.cdscode = frpm.cdscode inner join satscores on schools.cdscode = satscores.cds order by satscores.avgscrmath desc limit 1", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the type of education offered in the school who scored the highest average in Math?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.edopscode from schools inner join frpm on schools.cdscode = frpm.cdscode inner join satscores on schools.cdscode = satscores.cds order by satscores.avgscrmath desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 964, "question": "What's Lucas di Grassi's Q1 result in the race No. 345?", "sql": "select distinct results.resultid from drivers inner join qualifying on drivers.driverid = qualifying.driverid inner join results on qualifying.raceid = results.raceid where qualifying.raceid = 345 and drivers.surname = 'di Grassi' and qualifying.q1 = 0", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's Lucas di Grassi's Q1 result in the race No. 345?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct results.resultid from drivers inner join qualifying on drivers.driverid = qualifying.driverid inner join results on qualifying.raceid = results.raceid where qualifying.raceid = 345 and drivers.surname = 'di Grassi' and qualifying.q1 = 0\n\nIs the SQL semantically correct?"}
{"id": 965, "question": "How many accounts have an owner disposition and request for a statement to be generated upon a transaction?", "sql": "SELECT count(account.account_id) FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN trans ON account.account_id = trans.account_id WHERE disp.type = 'OWNER'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many accounts have an owner disposition and request for a statement to be generated upon a transaction?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(account.account_id) FROM account INNER JOIN disp ON account.account_id = disp.account_id INNER JOIN trans ON account.account_id = trans.account_id WHERE disp.type = 'OWNER'\n\nIs the SQL semantically correct?"}
{"id": 966, "question": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.", "sql": "SELECT event.event_name, event.event_date FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE expense.cost BETWEEN 50 AND 100 AND expense.expense_description = 'Pizza'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT event.event_name, event.event_date FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN expense ON attendance.link_to_member = expense.link_to_member WHERE expense.cost BETWEEN 50 AND 100 AND expense.expense_description = 'Pizza'\n\nIs the SQL semantically correct?"}
{"id": 967, "question": "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?", "sql": "SELECT T3.position FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId AND T2.fastestLap = T3.lap WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T3.time LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.position FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId INNER JOIN lapTimes AS T3 ON T2.raceId = T3.raceId AND T2.fastestLap = T3.lap WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton' ORDER BY T3.time LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 968, "question": "What is the total expense for the Yearly Kickoff?", "sql": "select sum(expense.cost) from event inner join expense on event.event_id = expense.expense_id where event.event_name = 'Yearly Kickoff'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total expense for the Yearly Kickoff?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select sum(expense.cost) from event inner join expense on event.event_id = expense.expense_id where event.event_name = 'Yearly Kickoff'\n\nIs the SQL semantically correct?"}
{"id": 969, "question": "Which SME customer consumed the least in June 2012?", "sql": "select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and yearmonth.date = '2012-06' order by yearmonth.consumption asc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which SME customer consumed the least in June 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and yearmonth.date = '2012-06' order by yearmonth.consumption asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 970, "question": "What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?", "sql": "select schools.admemail1 from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.opendate between '2009-01-01' and '2010-12-31' and schools.soctype = 'Introductory/Middle Schools (Public)' and schools.district = 'San Bernardino City Unif'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the valid e-mail addresses of the administrator of the school located in the San Bernardino county, City of San Bernardino City Unified that opened between 1/1/2009 to 12/31/2010 whose school types are public Intermediate/Middle Schools and Unified Schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.admemail1 from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.opendate between '2009-01-01' and '2010-12-31' and schools.soctype = 'Introductory/Middle Schools (Public)' and schools.district = 'San Bernardino City Unif'\n\nIs the SQL semantically correct?"}
{"id": 971, "question": "What is the average loan amount by male borrowers?", "sql": "select avg(loan.amount) from client inner join loan on client.client_id = loan.loan_id where client.gender = 'M'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average loan amount by male borrowers?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select avg(loan.amount) from client inner join loan on client.client_id = loan.loan_id where client.gender = 'M'\n\nIs the SQL semantically correct?"}
{"id": 972, "question": "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?", "sql": "select schools.phone from schools inner join satscores on schools.cdscode = satscores.cds where satscores.numge1500 group by schools.phone order by count(satscores.numge1500) desc limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.phone from schools inner join satscores on schools.cdscode = satscores.cds where satscores.numge1500 group by schools.phone order by count(satscores.numge1500) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 973, "question": "Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?", "sql": "SELECT cast((results.fastestlapspeed - ( SELECT fastestlapspeed FROM results WHERE raceid = 852 AND driverid = 452 )) AS REAL) * 100 / results.fastestlapspeed FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 853 AND drivers.forename = 'Paul' AND drivers.surname = 'di Resta'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Paul di Resta was in the No. 853 race, what percent faster did he finish in the 853rd race than the next race for the fastest lap speed?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT cast((results.fastestlapspeed - ( SELECT fastestlapspeed FROM results WHERE raceid = 852 AND driverid = 452 )) AS REAL) * 100 / results.fastestlapspeed FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE results.raceid = 853 AND drivers.forename = 'Paul' AND drivers.surname = 'di Resta'\n\nIs the SQL semantically correct?"}
{"id": 974, "question": "How many of the accounts are from Jesenik district?", "sql": "SELECT count(account.account_id) FROM district INNER JOIN account ON district.district_id = account.district_id WHERE district.a2 = 'Jesenik'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many of the accounts are from Jesenik district?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(account.account_id) FROM district INNER JOIN account ON district.district_id = account.district_id WHERE district.a2 = 'Jesenik'\n\nIs the SQL semantically correct?"}
{"id": 975, "question": "In Scotland Premier League, which away team won the most during the 2010 season?", "sql": "SELECT T2.away_team_api_id FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T1.name = 'Scotland Premier League' AND T2.season = '2009/2010' AND T2.away_team_goal > T2.home_team_goal GROUP BY T2.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In Scotland Premier League, which away team won the most during the 2010 season?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.away_team_api_id FROM League AS T1 INNER JOIN Match AS T2 ON T1.id = T2.league_id WHERE T1.name = 'Scotland Premier League' AND T2.season = '2009/2010' AND T2.away_team_goal > T2.home_team_goal GROUP BY T2.away_team_api_id ORDER BY COUNT(*) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 976, "question": "For the race happened in 2015/11/29, how many drivers did not finish the game?", "sql": "select count(distinct drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.date = '2015-11-29'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the race happened in 2015/11/29, how many drivers did not finish the game?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(distinct drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.date = '2015-11-29'\n\nIs the SQL semantically correct?"}
{"id": 977, "question": "Calculate the average view count of each post tagged as 'humor' and list the title and the comment of each post.", "sql": "SELECT AVG(T1.ViewCount) AS AverageViewCount, T1.Title, T2.Text, T2.Score FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T1.Id = T3.ExcerptPostId WHERE T3.TagName = 'humor' GROUP BY T1.Id", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the average view count of each post tagged as 'humor' and list the title and the comment of each post.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT AVG(T1.ViewCount) AS AverageViewCount, T1.Title, T2.Text, T2.Score FROM posts AS T1 INNER JOIN comments AS T2 ON T1.Id = T2.PostId INNER JOIN tags AS T3 ON T1.Id = T3.ExcerptPostId WHERE T3.TagName = 'humor' GROUP BY T1.Id\n\nIs the SQL semantically correct?"}
{"id": 978, "question": "How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?", "sql": "SELECT cast((player_attributes.overall_rating - ( SELECT overall_rating FROM player_attributes WHERE player_name = 'Paulin Puel' )) AS REAL) * 100 / ( SELECT overall_rating FROM player_attributes WHERE player_name = 'Paulin Puel' ) FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Ariel Borysiuk'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much higher in percentage is Ariel Borysiuk's overall rating than that of Paulin Puel?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT cast((player_attributes.overall_rating - ( SELECT overall_rating FROM player_attributes WHERE player_name = 'Paulin Puel' )) AS REAL) * 100 / ( SELECT overall_rating FROM player_attributes WHERE player_name = 'Paulin Puel' ) FROM player_attributes INNER JOIN player ON player_attributes.player_api_id = player.player_api_id WHERE player.player_name = 'Ariel Borysiuk'\n\nIs the SQL semantically correct?"}
{"id": 979, "question": "What is the average amount of loan which are still on running contract with statement issuance after each transaction?", "sql": "select avg(loan.amount) from loan inner join trans on loan.account_id = trans.account_id inner join account on trans.account_id = account.account_id where account.frequency = 'POPLATEK PO OBRATU' and loan.status = 'C'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average amount of loan which are still on running contract with statement issuance after each transaction?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select avg(loan.amount) from loan inner join trans on loan.account_id = trans.account_id inner join account on trans.account_id = account.account_id where account.frequency = 'POPLATEK PO OBRATU' and loan.status = 'C'\n\nIs the SQL semantically correct?"}
{"id": 980, "question": "Which segment had the least consumption?", "sql": "SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Consumption IS NOT NULL GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which segment had the least consumption?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T1.Segment FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T2.Consumption IS NOT NULL GROUP BY T1.Segment ORDER BY SUM(T2.Consumption) ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 981, "question": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.", "sql": "SELECT (CAST(SUM(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS completion_percentage FROM races T1 INNER JOIN results T2 ON T1.raceId = T2.raceId INNER JOIN drivers T3 ON T2.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T1.year BETWEEN 2007 AND 2009", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT (CAST(SUM(CASE WHEN T2.time IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(*)) * 100 AS completion_percentage FROM races T1 INNER JOIN results T2 ON T1.raceId = T2.raceId INNER JOIN drivers T3 ON T2.driverId = T3.driverId WHERE T3.nationality = 'Japanese' AND T1.year BETWEEN 2007 AND 2009\n\nIs the SQL semantically correct?"}
{"id": 982, "question": "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?", "sql": "SELECT CAST(SUM(T1.A15) AS REAL) / COUNT(DISTINCT T1.district_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND T2.date >= '1997-01-01'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT CAST(SUM(T1.A15) AS REAL) / COUNT(DISTINCT T1.district_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A15 > 4000 AND T2.date >= '1997-01-01'\n\nIs the SQL semantically correct?"}
{"id": 983, "question": "Please provide the full name of the away team that scored the most goals.", "sql": "select team.team_long_name from team inner join match on team.team_api_id = match.away_team_api_id group by team.team_long_name order by sum(match.away_team_goal) desc limit 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide the full name of the away team that scored the most goals.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_long_name from team inner join match on team.team_api_id = match.away_team_api_id group by team.team_long_name order by sum(match.away_team_goal) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 984, "question": "What is the name of set number 5 and its translation?", "sql": "SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the name of set number 5 and its translation?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T1.name, T2.translation FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T1.id = 5\n\nIs the SQL semantically correct?"}
{"id": 985, "question": "What is the unabbreviated mailing street address of the school with the highest FRPM count for K-12 students?", "sql": "SELECT schools.streetabr FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode ORDER BY frpm.`frpm count (k-12)` DESC LIMIT 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the unabbreviated mailing street address of the school with the highest FRPM count for K-12 students?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.streetabr FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode ORDER BY frpm.`frpm count (k-12)` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 986, "question": "In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.", "sql": "select schools.mailstrabr , schools.school from satscores inner join schools on satscores.cds = schools.cdscode inner join frpm on schools.cdscode = frpm.cdscode order by satscores.avgscrread asc limit 1", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In which mailing street address can you find the school that has the lowest average score in reading? Also give the school's name.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.mailstrabr , schools.school from satscores inner join schools on satscores.cds = schools.cdscode inner join frpm on schools.cdscode = frpm.cdscode order by satscores.avgscrread asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 987, "question": "Which non-carcinogenic molecules consisted more than 5 atoms?", "sql": "SELECT count(molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '-' GROUP BY molecule.molecule_id HAVING count(molecule.molecule_id) > 5", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which non-carcinogenic molecules consisted more than 5 atoms?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(molecule.molecule_id) FROM molecule INNER JOIN atom ON molecule.molecule_id = atom.molecule_id WHERE molecule.label = '-' GROUP BY molecule.molecule_id HAVING count(molecule.molecule_id) > 5\n\nIs the SQL semantically correct?"}
{"id": 988, "question": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.", "sql": "SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T2.Date) = '1984' AND T2.PLT BETWEEN 100 AND 400 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) < 50", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE strftime('%Y', T2.Date) = '1984' AND T2.PLT BETWEEN 100 AND 400 AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) < 50\n\nIs the SQL semantically correct?"}
{"id": 989, "question": "How many students in the Student_Club are from the College of Engineering?", "sql": "SELECT count(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Engineering'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many students in the Student_Club are from the College of Engineering?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT count(*) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.college = 'College of Engineering'\n\nIs the SQL semantically correct?"}
{"id": 990, "question": "Which state special schools have the highest number of enrollees from grades 1 through 12?", "sql": "SELECT T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = '31' AND T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1", "db_id": "california_schools", "label": true, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which state special schools have the highest number of enrollees from grades 1 through 12?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.School FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.DOC = '31' AND T1.`Enrollment (K-12)` IS NOT NULL ORDER BY T1.`Enrollment (K-12)` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 991, "question": "Which client issued his/her card in 1994/3/3, give his/her client id.", "sql": "select client.client_id from client inner join card on client.client_id = card.card_id where card.issued = '1994-03-03'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which client issued his/her card in 1994/3/3, give his/her client id.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id from client inner join card on client.client_id = card.card_id where card.issued = '1994-03-03'\n\nIs the SQL semantically correct?"}
{"id": 992, "question": "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?", "sql": "SELECT cast(sum(CASE WHEN county = 'Colusa' THEN 1 ELSE 0 END) AS REAL) * 100 / sum(CASE WHEN county = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE mailstate = 'CA'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT cast(sum(CASE WHEN county = 'Colusa' THEN 1 ELSE 0 END) AS REAL) * 100 / sum(CASE WHEN county = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE mailstate = 'CA'\n\nIs the SQL semantically correct?"}
{"id": 993, "question": "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.", "sql": "SELECT T1.account_id, T2.A2 AS district_name, T2.A3 AS district_region FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.account_id, T2.A2 AS district_name, T2.A3 AS district_region FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.date LIKE '1993%' AND T1.frequency = 'POPLATEK PO OBRATU'\n\nIs the SQL semantically correct?"}
{"id": 994, "question": "List the name of events with less than average parking cost.", "sql": "SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T2.category = 'Parking' GROUP BY T1.event_id HAVING SUM(T3.cost) < ( SELECT AVG(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T2.category = 'Parking' )", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the name of events with less than average parking cost.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T1.event_name FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T2.category = 'Parking' GROUP BY T1.event_id HAVING SUM(T3.cost) < ( SELECT AVG(T3.cost) FROM event AS T1 INNER JOIN budget AS T2 ON T1.event_id = T2.link_to_event INNER JOIN expense AS T3 ON T2.budget_id = T3.link_to_budget WHERE T2.category = 'Parking' )\n\nIs the SQL semantically correct?"}
{"id": 995, "question": "Among the members who incurred expenses in more than one event, who paid the most amount?", "sql": "SELECT member.first_name, member.last_name FROM expense INNER JOIN member ON expense.link_to_member = member.member_id GROUP BY expense.expense_id HAVING count(expense.expense_id) > 1 ORDER BY sum(expense.cost) DESC LIMIT 1", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the members who incurred expenses in more than one event, who paid the most amount?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT member.first_name, member.last_name FROM expense INNER JOIN member ON expense.link_to_member = member.member_id GROUP BY expense.expense_id HAVING count(expense.expense_id) > 1 ORDER BY sum(expense.cost) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 996, "question": "What is the passing class of CLB team?", "sql": "SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the passing class of CLB team?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.buildUpPlayPassingClass FROM Team AS T1 INNER JOIN Team_Attributes AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.team_short_name = 'CLB'\n\nIs the SQL semantically correct?"}
{"id": 997, "question": "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?", "sql": "select count(users.id) from users inner join posts on users.id = posts.owneruserid where users.location = 'United Kingdom' and posts.favoritecount >= 4", "db_id": "codebase_community", "label": true, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(users.id) from users inner join posts on users.id = posts.owneruserid where users.location = 'United Kingdom' and posts.favoritecount >= 4\n\nIs the SQL semantically correct?"}
{"id": 998, "question": "Which superheroes have a durability attribute value of less than 50?", "sql": "select count(hero_attribute.hero_id) from attribute inner join hero_attribute on attribute.id = hero_attribute.attribute_id where attribute.attribute_name = 'Durability' and hero_attribute.attribute_value < 50", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which superheroes have a durability attribute value of less than 50?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select count(hero_attribute.hero_id) from attribute inner join hero_attribute on attribute.id = hero_attribute.attribute_id where attribute.attribute_name = 'Durability' and hero_attribute.attribute_value < 50\n\nIs the SQL semantically correct?"}
{"id": 999, "question": "What is the phone number and extension number for the school that had the 333rd highest average writing score?", "sql": "SELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrWrite IS NOT NULL ORDER BY T2.AvgScrWrite DESC LIMIT 332, 1", "db_id": "california_schools", "label": true, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the phone number and extension number for the school that had the 333rd highest average writing score?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T1.Phone, T1.Ext FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds WHERE T2.AvgScrWrite IS NOT NULL ORDER BY T2.AvgScrWrite DESC LIMIT 332, 1\n\nIs the SQL semantically correct?"}
{"id": 1000, "question": "Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?", "sql": "select count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.centromea in ('-' , '+-') and laboratory.ssb in ('-' , '+-')", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who has a normal level of anti-centromere and a normal level of anti-SSB, how many of them are male?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(patient.id) from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.centromea in ('-' , '+-') and laboratory.ssb in ('-' , '+-')\n\nIs the SQL semantically correct?"}
{"id": 1001, "question": "How many French constructors have a lap number of over 50?", "sql": "SELECT count(constructors.constructorid) FROM constructors INNER JOIN results ON constructors.constructorid = results.constructorid WHERE constructors.nationality = 'French' AND results.laps > 50", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many French constructors have a lap number of over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT count(constructors.constructorid) FROM constructors INNER JOIN results ON constructors.constructorid = results.constructorid WHERE constructors.nationality = 'French' AND results.laps > 50\n\nIs the SQL semantically correct?"}
{"id": 1002, "question": "Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.", "sql": "SELECT drivers.forename, drivers.surname FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid ORDER BY laptimes.time ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which top 20 driver created the shortest lap time ever record in a Formula_1 race? Please give them full names.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT drivers.forename, drivers.surname FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid ORDER BY laptimes.time ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1003, "question": "How many bonds which involved atom 12 does molecule TR009 have?", "sql": "SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND (T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12')", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bonds which involved atom 12 does molecule TR009 have?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(T1.bond_id) FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.molecule_id = 'TR009' AND (T2.atom_id = 'TR009_12' OR T2.atom_id2 = 'TR009_12')\n\nIs the SQL semantically correct?"}
{"id": 1004, "question": "Among black card borders, which card has full artwork?", "sql": "SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among black card borders, which card has full artwork?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT name FROM cards WHERE borderColor = 'black' AND isFullArt = 1\n\nIs the SQL semantically correct?"}
{"id": 1005, "question": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.", "sql": "SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date LIKE '2014%' GROUP BY T2.team_long_name HAVING SUM(T1.chanceCreationPassing) / COUNT(T1.id) < ( SELECT CAST(SUM(chanceCreationPassing) AS REAL) / COUNT(id) FROM Team_Attributes WHERE date LIKE '2014%' ) ORDER BY SUM(T1.chanceCreationPassing) DESC", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.team_long_name FROM Team_Attributes AS T1 INNER JOIN Team AS T2 ON T1.team_api_id = T2.team_api_id WHERE T1.buildUpPlayDribblingClass = 'Normal' AND T1.date LIKE '2014%' GROUP BY T2.team_long_name HAVING SUM(T1.chanceCreationPassing) / COUNT(T1.id) < ( SELECT CAST(SUM(chanceCreationPassing) AS REAL) / COUNT(id) FROM Team_Attributes WHERE date LIKE '2014%' ) ORDER BY SUM(T1.chanceCreationPassing) DESC\n\nIs the SQL semantically correct?"}
{"id": 1006, "question": "What are the bonds that have phosphorus and nitrogen as their atom elements?", "sql": "SELECT T2.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element IN ('p', 'n')", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the bonds that have phosphorus and nitrogen as their atom elements?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T2.bond_id FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element IN ('p', 'n')\n\nIs the SQL semantically correct?"}
{"id": 1007, "question": "Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.", "sql": "SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.attacking_work_rate = 'high'", "db_id": "european_football_2", "label": true, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who are the players that tend to be attacking when their mates were doing attack moves? List down their name.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.player_name FROM Player_Attributes AS T1 INNER JOIN Player AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.attacking_work_rate = 'high'\n\nIs the SQL semantically correct?"}
{"id": 1008, "question": "What is the total number of molecules with double bonded oxygen?", "sql": "select count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id inner join bond on atom.molecule_id = bond.molecule_id where bond.bond_type = '= ' and atom.element = 'o'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total number of molecules with double bonded oxygen?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id inner join bond on atom.molecule_id = bond.molecule_id where bond.bond_type = '= ' and atom.element = 'o'\n\nIs the SQL semantically correct?"}
{"id": 1009, "question": "Is molecule TR000 is carcinogenic or not?", "sql": "select case when label = '+' then 'YES' else 'NO' end as yorn from molecule where molecule_id = 'TR000'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Is molecule TR000 is carcinogenic or not?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select case when label = '+' then 'YES' else 'NO' end as yorn from molecule where molecule_id = 'TR000'\n\nIs the SQL semantically correct?"}
{"id": 1010, "question": "Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.", "sql": "SELECT T1.client_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'east Bohemia' AND T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide a list of clients who were born between 1983 and 1987 and whose account branch is in East Bohemia, along with their IDs.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.client_id FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'east Bohemia' AND T1.birth_date BETWEEN '1983-01-01' AND '1987-12-31'\n\nIs the SQL semantically correct?"}
{"id": 1011, "question": "For all the drivers who finished the game in race No. 872, who is the youngest?", "sql": "select drivers.driverid from results inner join races on results.raceid = races.raceid inner join laptimes on races.raceid = laptimes.raceid inner join drivers on drivers.driverid = laptimes.driverid where races.raceid = '872' order by drivers.dob desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the drivers who finished the game in race No. 872, who is the youngest?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.driverid from results inner join races on results.raceid = races.raceid inner join laptimes on races.raceid = laptimes.raceid inner join drivers on drivers.driverid = laptimes.driverid where races.raceid = '872' order by drivers.dob desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1012, "question": "What is the average number of goals made by Parma as the away team while playing in Italy?", "sql": "SELECT avg(match.away_team_goal) FROM team INNER JOIN MATCH ON team.team_api_id = MATCH.away_team_api_id INNER JOIN league ON team.team_api_id = league.id INNER JOIN country ON league.country_id = country.id WHERE team.team_long_name = 'Parma' AND country.name = 'Italy'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average number of goals made by Parma as the away team while playing in Italy?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT avg(match.away_team_goal) FROM team INNER JOIN MATCH ON team.team_api_id = MATCH.away_team_api_id INNER JOIN league ON team.team_api_id = league.id INNER JOIN country ON league.country_id = country.id WHERE team.team_long_name = 'Parma' AND country.name = 'Italy'\n\nIs the SQL semantically correct?"}
{"id": 1013, "question": "State the district and region for loan ID '4990'.", "sql": "select district.a2 , district.a3 from loan inner join district on loan.loan_id = district.district_id where loan.loan_id = 4990", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the district and region for loan ID '4990'.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select district.a2 , district.a3 from loan inner join district on loan.loan_id = district.district_id where loan.loan_id = 4990\n\nIs the SQL semantically correct?"}
{"id": 1014, "question": "Indicate the cost of posters for 'September Speaker' event.", "sql": "SELECT expense.cost FROM expense INNER JOIN attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Indicate the cost of posters for 'September Speaker' event.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT expense.cost FROM expense INNER JOIN attendance ON expense.link_to_member = attendance.link_to_member INNER JOIN event ON attendance.link_to_event = event.event_id WHERE event.event_name = 'September Speaker' AND expense.expense_description = 'Posters'\n\nIs the SQL semantically correct?"}
{"id": 1015, "question": "How strong is the Hulk?", "sql": "select hero_attribute.attribute_value from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where superhero.superhero_name = 'Hulk' and attribute.attribute_name = 'Strength'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How strong is the Hulk?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select hero_attribute.attribute_value from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where superhero.superhero_name = 'Hulk' and attribute.attribute_name = 'Strength'\n\nIs the SQL semantically correct?"}
{"id": 1016, "question": "What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates.", "sql": "SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the rulings for the card named and designed by Kev Walker? List them in descending order of dates.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT rulings.text FROM rulings INNER JOIN cards ON rulings.uuid = cards.uuid WHERE cards.artist = 'Kev Walker' ORDER BY rulings.date DESC\n\nIs the SQL semantically correct?"}
{"id": 1017, "question": "What is the number of committed crimes in 1995 in the district of the account with the id 532?", "sql": "select district.a15 from account inner join district on account.district_id = district.district_id where account.account_id = 532 and district.a15 = 1995", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the number of committed crimes in 1995 in the district of the account with the id 532?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select district.a15 from account inner join district on account.district_id = district.district_id where account.account_id = 532 and district.a15 = 1995\n\nIs the SQL semantically correct?"}
{"id": 1018, "question": "For all the club members from \"Business\" major, how many of them wear medium size t-shirt?", "sql": "select count(*) from major inner join member on major.major_id = member.link_to_major where major.major_name = 'Human Development and Family Studies' and member.t_shirt_size = 'Large'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the club members from \"Business\" major, how many of them wear medium size t-shirt?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select count(*) from major inner join member on major.major_id = member.link_to_major where major.major_name = 'Human Development and Family Studies' and member.t_shirt_size = 'Large'\n\nIs the SQL semantically correct?"}
{"id": 1019, "question": "How much did the KAM customers consume in total in May 2013?", "sql": "select sum(yearmonth.consumption) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' and yearmonth.date = '2013-05'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much did the KAM customers consume in total in May 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select sum(yearmonth.consumption) from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' and yearmonth.date = '2013-05'\n\nIs the SQL semantically correct?"}
{"id": 1020, "question": "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.", "sql": "select account.account_id , district.a2 , district.a3 from district inner join account on district.district_id = account.district_id where strftime('%Y' , account.frequency) = '1993' and account.frequency = 'POPLATEK PO OBRATU'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id , district.a2 , district.a3 from district inner join account on district.district_id = account.district_id where strftime('%Y' , account.frequency) = '1993' and account.frequency = 'POPLATEK PO OBRATU'\n\nIs the SQL semantically correct?"}
{"id": 1021, "question": "On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.", "sql": "select distinct races.year , races.date , races.time from qualifying inner join races on qualifying.raceid = races.raceid inner join drivers on drivers.driverid = qualifying.driverid order by drivers.dob desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: On what year did the youngest driver had his first qualifying race? Also state the name, date and time of the race.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.year , races.date , races.time from qualifying inner join races on qualifying.raceid = races.raceid inner join drivers on drivers.driverid = qualifying.driverid order by drivers.dob desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1022, "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?", "sql": "SELECT (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) - (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) AS diff1, (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) - (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) AS diff2, (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) - (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) AS diff3", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) - (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) AS diff1, (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'LAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) - (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) AS diff2, (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) - (SELECT AVG(T2.Consumption) FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T1.Currency = 'CZK' AND T2.Date LIKE '2013%' ORDER BY T2.Consumption ASC LIMIT 1) AS diff3\n\nIs the SQL semantically correct?"}
{"id": 1023, "question": "What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?", "sql": "select races.time from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2010 and circuits.location = 'Abu Dhabi'", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.time from races inner join circuits on races.circuitid = circuits.circuitid where races.year = 2010 and circuits.location = 'Abu Dhabi'\n\nIs the SQL semantically correct?"}
{"id": 1024, "question": "Which active district has the highest average score in Reading?", "sql": "SELECT schools.district FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.virtual = 'N' GROUP BY schools.district ORDER BY avg(satscores.avgscrread) DESC LIMIT 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which active district has the highest average score in Reading?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.district FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE schools.virtual = 'N' GROUP BY schools.district ORDER BY avg(satscores.avgscrread) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1025, "question": "Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.", "sql": "SELECT T2.driverRef FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2008 AND T1.positionOrder = 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which driver ranked the first in the Canadian Grand Prix in 2007? Please give his reference name.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.driverRef FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'Australian Grand Prix' AND T3.year = 2008 AND T1.positionOrder = 1\n\nIs the SQL semantically correct?"}
{"id": 1026, "question": "Provide the badge names received in 2011 for the user whose location is in the North Pole.", "sql": "select distinct badges.name from users inner join badges on users.id = badges.userid where users.location = 'North Pole' and strftime('%Y' , badges.date) = '2011'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the badge names received in 2011 for the user whose location is in the North Pole.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select distinct badges.name from users inner join badges on users.id = badges.userid where users.location = 'North Pole' and strftime('%Y' , badges.date) = '2011'\n\nIs the SQL semantically correct?"}
{"id": 1027, "question": "How many unknown power cards contain info about the triggered ability", "sql": "select count(id) from cards where power is null", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many unknown power cards contain info about the triggered ability\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(id) from cards where power is null\n\nIs the SQL semantically correct?"}
{"id": 1028, "question": "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.", "sql": "select drivers.forename , drivers.surname , results.points from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid where races.name = 'Chinese Grand Prix' and races.year = 2017 order by driverstandings.position desc limit 3", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.surname , results.points from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid where races.name = 'Chinese Grand Prix' and races.year = 2017 order by driverstandings.position desc limit 3\n\nIs the SQL semantically correct?"}
{"id": 1029, "question": "Give the name of the league had the most matches in the 2008/2009 season?", "sql": "select league.name from match inner join league on match.league_id = league.id where match.season = '2008/2009' group by league.name order by count(match.id) desc limit 1", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the name of the league had the most matches in the 2008/2009 season?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select league.name from match inner join league on match.league_id = league.id where match.season = '2008/2009' group by league.name order by count(match.id) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1030, "question": "Provide the text of the latest 10 comments to the post with the title 'Analysing wind data with R' and the display name of the user who left it.", "sql": "SELECT comments.text, comments.userdisplayname FROM posts INNER JOIN comments ON posts.id = comments.postid WHERE posts.title = 'Analysing wind data with R' ORDER BY comments.creationdate DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the text of the latest 10 comments to the post with the title 'Analysing wind data with R' and the display name of the user who left it.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT comments.text, comments.userdisplayname FROM posts INNER JOIN comments ON posts.id = comments.postid WHERE posts.title = 'Analysing wind data with R' ORDER BY comments.creationdate DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1031, "question": "How many players had the highest potential score for crossing that preferred to use their left foots while attacking?", "sql": "SELECT count(player_api_id) FROM player_attributes WHERE preferred_foot = 'left' AND crossing = ( SELECT max(crossing) FROM player_attributes )", "db_id": "european_football_2", "label": true, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many players had the highest potential score for crossing that preferred to use their left foots while attacking?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT count(player_api_id) FROM player_attributes WHERE preferred_foot = 'left' AND crossing = ( SELECT max(crossing) FROM player_attributes )\n\nIs the SQL semantically correct?"}
{"id": 1032, "question": "In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?", "sql": "SELECT pitstops.duration FROM races INNER JOIN pitstops ON races.raceid = pitstops.raceid WHERE races.name = 'Austrian Grand Prix' AND pitstops.driverid = ( SELECT driverid FROM results WHERE raceid = races.raceid ORDER BY fastestlaptime ASC LIMIT 1 )", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the race a driver set the lap record for the Austrian Grand Prix Circuit, how long did he spent at the pit stop at that same race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT pitstops.duration FROM races INNER JOIN pitstops ON races.raceid = pitstops.raceid WHERE races.name = 'Austrian Grand Prix' AND pitstops.driverid = ( SELECT driverid FROM results WHERE raceid = races.raceid ORDER BY fastestlaptime ASC LIMIT 1 )\n\nIs the SQL semantically correct?"}
{"id": 1033, "question": "How many molecules without sulphur element is not having double bond?", "sql": "select count(atom.molecule_id) from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where atom.element = 's' and bond.bond_type != '= '", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules without sulphur element is not having double bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(atom.molecule_id) from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where atom.element = 's' and bond.bond_type != '= '\n\nIs the SQL semantically correct?"}
{"id": 1034, "question": "How many cards have infinite power?", "sql": "SELECT count(id) FROM cards WHERE power = '*'", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards have infinite power?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(id) FROM cards WHERE power = '*'\n\nIs the SQL semantically correct?"}
{"id": 1035, "question": "Among the posts with a score of over 5, what is the percentage of them being owned by an elder user?", "sql": "select cast(sum(case when users.age > 65 then 1 else 0 end) as real) * 100 / count(posts.owneruserid) from posts inner join comments on posts.id = comments.postid inner join users on posts.owneruserid = users.id where posts.score > 20", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the posts with a score of over 5, what is the percentage of them being owned by an elder user?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select cast(sum(case when users.age > 65 then 1 else 0 end) as real) * 100 / count(posts.owneruserid) from posts inner join comments on posts.id = comments.postid inner join users on posts.owneruserid = users.id where posts.score > 20\n\nIs the SQL semantically correct?"}
{"id": 1036, "question": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?", "sql": "SELECT account.frequency, trans.amount FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.account_id = 3539", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT account.frequency, trans.amount FROM account INNER JOIN trans ON account.account_id = trans.account_id WHERE account.account_id = 3539\n\nIs the SQL semantically correct?"}
{"id": 1037, "question": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.", "sql": "select molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '-' and molecule.label = '-' limit 3", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.label from molecule inner join bond on molecule.molecule_id = bond.molecule_id where bond.bond_type = '-' and molecule.label = '-' limit 3\n\nIs the SQL semantically correct?"}
{"id": 1038, "question": "What was the average monthly consumption of customers in SME for the year 2013?", "sql": "SELECT AVG(T2.Consumption) / 12 AS Average_Monthly_Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date BETWEEN '201301' AND '201312'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the average monthly consumption of customers in SME for the year 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT AVG(T2.Consumption) / 12 AS Average_Monthly_Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'SME' AND T2.Date BETWEEN '201301' AND '201312'\n\nIs the SQL semantically correct?"}
{"id": 1039, "question": "How many schools in Fresno (directly funded) have number of test takers not more than 250?", "sql": "select count(schools.school) from schools inner join satscores on schools.cdscode = satscores.cds where schools.county = 'Contra Costa' and satscores.numtsttakr <= 250 and schools.fundingtype = 'Directly funded'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many schools in Fresno (directly funded) have number of test takers not more than 250?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select count(schools.school) from schools inner join satscores on schools.cdscode = satscores.cds where schools.county = 'Contra Costa' and satscores.numtsttakr <= 250 and schools.fundingtype = 'Directly funded'\n\nIs the SQL semantically correct?"}
{"id": 1040, "question": "What was the difference in the number of crimes committed in East and North Bohemia in 1996?", "sql": "select sum(case when a3 = 'east Bohemia' then 1 else 0 end) - sum(case when a3 = 'north Bohemia' then 1 else 0 end) from district", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the difference in the number of crimes committed in East and North Bohemia in 1996?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select sum(case when a3 = 'east Bohemia' then 1 else 0 end) - sum(case when a3 = 'north Bohemia' then 1 else 0 end) from district\n\nIs the SQL semantically correct?"}
{"id": 1041, "question": "List out the age of users who located in Vienna, Austria obtained the badge?", "sql": "SELECT users.age FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.location = 'Vienna, Austria'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the age of users who located in Vienna, Austria obtained the badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT users.age FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.location = 'Vienna, Austria'\n\nIs the SQL semantically correct?"}
{"id": 1042, "question": "In 2012, who had the least consumption in LAM?", "sql": "SELECT customers.customerid FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.segment = 'LAM' AND strftime('%Y', yearmonth.`date`) = '2012' ORDER BY yearmonth.consumption ASC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In 2012, who had the least consumption in LAM?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT customers.customerid FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.segment = 'LAM' AND strftime('%Y', yearmonth.`date`) = '2012' ORDER BY yearmonth.consumption ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1043, "question": "What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?", "sql": "SELECT races.time FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2010 AND circuits.name = 'Abu Dhabi Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What time did the the 2010's Formula_1 race took place on the Abu Dhabi Circuit?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT races.time FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2010 AND circuits.name = 'Abu Dhabi Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 1044, "question": "How many bonds are created by bonding atoms with chlorine element?", "sql": "select count(connected.bond_id) from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'cl'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bonds are created by bonding atoms with chlorine element?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(connected.bond_id) from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'cl'\n\nIs the SQL semantically correct?"}
{"id": 1045, "question": "Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?", "sql": "SELECT `t-cho` < 250 FROM laboratory WHERE id = 2927464 AND `date` = '1995-09-04'", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Was the total cholesterol status for the patient id 2927464 on 1995-9-4 at the normal level?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT `t-cho` < 250 FROM laboratory WHERE id = 2927464 AND `date` = '1995-09-04'\n\nIs the SQL semantically correct?"}
{"id": 1046, "question": "How many black border cards are only available on mtgo?", "sql": "select count(id) from cards where availability = 'mtgo' and bordercolor = 'black'", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many black border cards are only available on mtgo?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(id) from cards where availability = 'mtgo' and bordercolor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 1047, "question": "What is the sum of score of the post on 2010-07-19?", "sql": "SELECT T2.Score FROM tags AS T1 INNER JOIN posts AS T2 ON T2.Tags LIKE '%' || T1.TagName || '%' WHERE T1.Count = (SELECT MAX(Count) FROM tags) ORDER BY T2.ViewCount DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the sum of score of the post on 2010-07-19?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.Score FROM tags AS T1 INNER JOIN posts AS T2 ON T2.Tags LIKE '%' || T1.TagName || '%' WHERE T1.Count = (SELECT MAX(Count) FROM tags) ORDER BY T2.ViewCount DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1048, "question": "How many circuits are there in Adelaide, Australia?", "sql": "select count(circuitid) from circuits where location = 'Melbourne' and country = 'Australia'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many circuits are there in Adelaide, Australia?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(circuitid) from circuits where location = 'Melbourne' and country = 'Australia'\n\nIs the SQL semantically correct?"}
{"id": 1049, "question": "How many cards did Volkan BaÇµa illustrated whose foreign language is in French?", "sql": "select count(cards.artist) from cards inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'French' and cards.artist = 'Volkan Baga'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards did Volkan BaÇµa illustrated whose foreign language is in French?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.artist) from cards inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'French' and cards.artist = 'Volkan Baga'\n\nIs the SQL semantically correct?"}
{"id": 1050, "question": "Find the ratio between male superheroes and female superheroes.", "sql": "select cast(sum(case when gender.gender = 1 then 1 else 0 end) as real) / sum(case when gender.gender = 2 then 1 else 0 end) from superhero inner join gender on superhero.gender_id = gender.id", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the ratio between male superheroes and female superheroes.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select cast(sum(case when gender.gender = 1 then 1 else 0 end) as real) / sum(case when gender.gender = 2 then 1 else 0 end) from superhero inner join gender on superhero.gender_id = gender.id\n\nIs the SQL semantically correct?"}
{"id": 1051, "question": "Which constructors have been ranked 1?", "sql": "SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which constructors have been ranked 1?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.name FROM constructorStandings AS T1 INNER JOIN constructors AS T2 ON T1.constructorId = T2.constructorId WHERE T1.position = 1\n\nIs the SQL semantically correct?"}
{"id": 1052, "question": "Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?", "sql": "select count(distinct patient.id) from patient inner join laboratory on patient.id = laboratory.id where laboratory.crp >= 1.0 and strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 18", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients whose creatinine level is abnormal, how many of them aren't 70 yet?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct patient.id) from patient inner join laboratory on patient.id = laboratory.id where laboratory.crp >= 1.0 and strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 18\n\nIs the SQL semantically correct?"}
{"id": 1053, "question": "In the non-carcinogenic molecules, how many contain chlorine atoms?", "sql": "select count(molecule.molecule_id) from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'cl' and molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the non-carcinogenic molecules, how many contain chlorine atoms?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(molecule.molecule_id) from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'cl' and molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 1054, "question": "The average unemployment ratio of 1995 and 1996, which one has higher percentage?", "sql": "select a12 from district where a13 = 1996 order by a12 desc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: The average unemployment ratio of 1995 and 1996, which one has higher percentage?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select a12 from district where a13 = 1996 order by a12 desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1055, "question": "How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?", "sql": "SELECT answercount, commentcount FROM posts WHERE title = 'Clustering 1D data'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many comments and answers were left by the users on the post with the title 'Clustering 1D data'?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT answercount, commentcount FROM posts WHERE title = 'Clustering 1D data'\n\nIs the SQL semantically correct?"}
{"id": 1056, "question": "Determine the bond type that is formed in the chemical compound containing element Carbon.", "sql": "SELECT bond_type FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'te' )", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Determine the bond type that is formed in the chemical compound containing element Carbon.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT bond_type FROM bond WHERE molecule_id IN ( SELECT molecule_id FROM atom WHERE element = 'te' )\n\nIs the SQL semantically correct?"}
{"id": 1057, "question": "Was the patient with the number 57266's uric acid within a normal range?", "sql": "SELECT IIF(T1.SEX = 'M', IIF(T2.UA > 8.0, 'YES', 'NO'), IIF(T2.UA > 6.5, 'YES', 'NO')) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Was the patient with the number 57266's uric acid within a normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT IIF(T1.SEX = 'M', IIF(T2.UA > 8.0, 'YES', 'NO'), IIF(T2.UA > 6.5, 'YES', 'NO')) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.ID = 57266\n\nIs the SQL semantically correct?"}
{"id": 1058, "question": "List the post IDs and badge names of the user Samuel in 2013.", "sql": "select posts.id , badges.name from users inner join posts on users.id = posts.owneruserid inner join posthistory on posts.id = posthistory.postid inner join badges on posts.id = badges.userid where users.displayname = 'Samuel' and strftime('%Y' , posthistory.creationdate) = '2013'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the post IDs and badge names of the user Samuel in 2013.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select posts.id , badges.name from users inner join posts on users.id = posts.owneruserid inner join posthistory on posts.id = posthistory.postid inner join badges on posts.id = badges.userid where users.displayname = 'Samuel' and strftime('%Y' , posthistory.creationdate) = '2013'\n\nIs the SQL semantically correct?"}
{"id": 1059, "question": "Please list all the transactions made by accounts from district 5.", "sql": "select trans.amount from trans inner join account on trans.account_id = account.account_id inner join district on account.district_id = district.district_id where district.a5", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list all the transactions made by accounts from district 5.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select trans.amount from trans inner join account on trans.account_id = account.account_id inner join district on account.district_id = district.district_id where district.a5\n\nIs the SQL semantically correct?"}
{"id": 1060, "question": "Please list all the transactions made by accounts from district 5.", "sql": "SELECT T1.account_id, T2.trans_id, T2.date, T2.type, T2.operation, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id = 5", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list all the transactions made by accounts from district 5.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.account_id, T2.trans_id, T2.date, T2.type, T2.operation, T2.k_symbol FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T1.district_id = 5\n\nIs the SQL semantically correct?"}
{"id": 1061, "question": "Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?", "sql": "SELECT MAX(CASE WHEN T2.mtgoCode IS NULL THEN 'No' ELSE 'Yes' END) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Did the set of cards with \"Angel of Mercy\" appear on Magic: The Gathering Online?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT MAX(CASE WHEN T2.mtgoCode IS NULL THEN 'No' ELSE 'Yes' END) FROM cards AS T1 INNER JOIN sets AS T2 ON T1.setCode = T2.code WHERE T1.name = 'Angel of Mercy'\n\nIs the SQL semantically correct?"}
{"id": 1062, "question": "How many clients who were born in 1920 stay in east Bohemia?", "sql": "select count(client.client_id) from client inner join district on client.district_id = district.district_id where client.birth_date = 1920 and district.a3 = 'east Bohemia'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many clients who were born in 1920 stay in east Bohemia?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(client.client_id) from client inner join district on client.district_id = district.district_id where client.birth_date = 1920 and district.a3 = 'east Bohemia'\n\nIs the SQL semantically correct?"}
{"id": 1063, "question": "What is the percentage of element chlorine in carcinogenic molecules?", "sql": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of element chlorine in carcinogenic molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.molecule_id) AS percentage FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 1064, "question": "In 1996, which districts have the highest unemployment rate? List their branch location and district name.", "sql": "select a2 from district where a13 = 1996 order by a13 desc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In 1996, which districts have the highest unemployment rate? List their branch location and district name.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select a2 from district where a13 = 1996 order by a13 desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1065, "question": "Lists all types of cards in German.", "sql": "SELECT DISTINCT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Lists all types of cards in German.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT DISTINCT T2.type FROM cards AS T1 INNER JOIN foreign_data AS T2 ON T1.uuid = T2.uuid WHERE T2.language = 'German'\n\nIs the SQL semantically correct?"}
{"id": 1066, "question": "Which customer paid the most in 2012/8/25?", "sql": "SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which customer paid the most in 2012/8/25?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT CustomerID FROM transactions_1k WHERE Date = '2012-08-25' GROUP BY CustomerID ORDER BY SUM(Price) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1067, "question": "Please list the product description of the products bought in transactions in euro.", "sql": "SELECT DISTINCT products.description FROM products INNER JOIN `transactions_1k` ON products.productid = transactions_1k.productid", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the product description of the products bought in transactions in euro.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT products.description FROM products INNER JOIN `transactions_1k` ON products.productid = transactions_1k.productid\n\nIs the SQL semantically correct?"}
{"id": 1068, "question": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?", "sql": "select cast(sum(case when client.gender = 'M' then 1 else 0 end) as real) * 100 / count(client.gender) from client inner join district on client.district_id = district.district_id where district.a3 = 'south Bohemia' group by district.district_id order by count(client.gender) desc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select cast(sum(case when client.gender = 'M' then 1 else 0 end) as real) * 100 / count(client.gender) from client inner join district on client.district_id = district.district_id where district.a3 = 'south Bohemia' group by district.district_id order by count(client.gender) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1069, "question": "In 1996, which districts have the highest unemployment rate? List their branch location and district name.", "sql": "SELECT A2 FROM district WHERE A13 = ( SELECT MAX(A13) FROM district )", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In 1996, which districts have the highest unemployment rate? List their branch location and district name.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT A2 FROM district WHERE A13 = ( SELECT MAX(A13) FROM district )\n\nIs the SQL semantically correct?"}
{"id": 1070, "question": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?", "sql": "SELECT ((julianday('2000-01-01 ' || MAX(CASE WHEN T2.positionOrder = 1 THEN T2.time ELSE NULL END)) - julianday('2000-01-01 ' || MIN(CASE WHEN T2.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = T1.raceId) THEN T2.time ELSE NULL END))) / julianday('2000-01-01 ' || MIN(CASE WHEN T2.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = T1.raceId) THEN T2.time ELSE NULL END))) * 100 AS percentage_faster FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT ((julianday('2000-01-01 ' || MAX(CASE WHEN T2.positionOrder = 1 THEN T2.time ELSE NULL END)) - julianday('2000-01-01 ' || MIN(CASE WHEN T2.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = T1.raceId) THEN T2.time ELSE NULL END))) / julianday('2000-01-01 ' || MIN(CASE WHEN T2.positionOrder = (SELECT MAX(positionOrder) FROM results WHERE raceId = T1.raceId) THEN T2.time ELSE NULL END))) * 100 AS percentage_faster FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.time IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 1071, "question": "Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style.", "sql": "SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the names of the top 3 cards with the highest converted mana cost and have a 2003 card frame style.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT name FROM cards WHERE frameVersion = '2003' ORDER BY convertedManaCost DESC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 1072, "question": "Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?", "sql": "select count(loan.loan_id) from loan inner join account on loan.account_id = account.account_id where loan.amount > 250000 and account.frequency = 'POPLATEK MESICNE' and account.date between 1995 and 1997", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between 1/1/1995 and 12/31/1997, how many loans in the amount of at least 250,000 per account that chose monthly statement issuance were approved?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(loan.loan_id) from loan inner join account on loan.account_id = account.account_id where loan.amount > 250000 and account.frequency = 'POPLATEK MESICNE' and account.date between 1995 and 1997\n\nIs the SQL semantically correct?"}
{"id": 1073, "question": "Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'", "sql": "SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who is the editor of the post titled 'Open source tools for visualizing multi-dimensional data?'\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.DisplayName FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Title = 'Open source tools for visualizing multi-dimensional data'\n\nIs the SQL semantically correct?"}
{"id": 1074, "question": "What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.", "sql": "select races.name , races.year , circuits.location from results inner join races on results.raceid = races.raceid inner join circuits on races.circuitid = circuits.circuitid order by results.laps desc limit 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the most laps f1 races had? Name the race, year and circuit location where the races with most laps was hosted.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.name , races.year , circuits.location from results inner join races on results.raceid = races.raceid inner join circuits on races.circuitid = circuits.circuitid order by results.laps desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1075, "question": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?", "sql": "select count(cards.id) from cards inner join sets on cards.id = sets.id where cards.convertedmanacost > 5 and cards.power is null or cards.power = '*' and sets.name = 'Coldsnap'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.id) from cards inner join sets on cards.id = sets.id where cards.convertedmanacost > 5 and cards.power is null or cards.power = '*' and sets.name = 'Coldsnap'\n\nIs the SQL semantically correct?"}
{"id": 1076, "question": "Lists the set code of all cards translated into Spanish.", "sql": "select distinct set_translations.setcode from cards inner join set_translations on cards.setcode = set_translations.setcode inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'Spanish'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Lists the set code of all cards translated into Spanish.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct set_translations.setcode from cards inner join set_translations on cards.setcode = set_translations.setcode inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'Spanish'\n\nIs the SQL semantically correct?"}
{"id": 1077, "question": "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?", "sql": "SELECT SUM(Amount) FROM transactions_1k WHERE CustomerID = 38508 UNION ALL SELECT SUM(Amount) FROM transactions_1k WHERE Date LIKE '201201%' AND CustomerID = 38508", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT SUM(Amount) FROM transactions_1k WHERE CustomerID = 38508 UNION ALL SELECT SUM(Amount) FROM transactions_1k WHERE Date LIKE '201201%' AND CustomerID = 38508\n\nIs the SQL semantically correct?"}
{"id": 1078, "question": "What is the ratio of male to female patients among all those with abnormal uric acid counts?", "sql": "SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= 6.5 THEN 1 ELSE 0 END) AS ratio FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T1.SEX = 'M' AND T2.UA <= 8.0) OR (T1.SEX = 'F' AND T2.UA <= 6.5)", "db_id": "thrombosis_prediction", "label": true, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the ratio of male to female patients among all those with abnormal uric acid counts?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.SEX = 'M' AND T2.UA <= 8.0 THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN T1.SEX = 'F' AND T2.UA <= 6.5 THEN 1 ELSE 0 END) AS ratio FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE (T1.SEX = 'M' AND T2.UA <= 8.0) OR (T1.SEX = 'F' AND T2.UA <= 6.5)\n\nIs the SQL semantically correct?"}
{"id": 1079, "question": "Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.", "sql": "SELECT T3.forename || ' ' || T3.surname AS name, T1.points FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2017 AND T2.name = 'Chinese Grand Prix' ORDER BY T1.points DESC LIMIT 3", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the top 3 drivers and the points they scored in the 2017 Chinese Grand Prix.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.forename || ' ' || T3.surname AS name, T1.points FROM results AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.year = 2017 AND T2.name = 'Chinese Grand Prix' ORDER BY T1.points DESC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 1080, "question": "Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.", "sql": "select member.first_name , member.last_name , expense.cost from member inner join expense on member.member_id = expense.link_to_member where expense.expense_description = 'Water , Veggie tray , supplies'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write the full name of the member who spent money for water, veggie tray and supplies and include the cost of it.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name , expense.cost from member inner join expense on member.member_id = expense.link_to_member where expense.expense_description = 'Water , Veggie tray , supplies'\n\nIs the SQL semantically correct?"}
{"id": 1081, "question": "Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.", "sql": "select case when count(case when publisher.publisher_name = 'DC Comics' then superhero.id else null end) > count(case when publisher.publisher_name = 'Marvel Comics' then superhero.id else null end) then 'DC Comics' else 'Marvel Comics' end as difference from publisher inner join superhero on publisher.id = superhero.publisher_id", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which publisher created more superheroes: DC or Marvel Comics? Find the difference in the number of superheroes.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select case when count(case when publisher.publisher_name = 'DC Comics' then superhero.id else null end) > count(case when publisher.publisher_name = 'Marvel Comics' then superhero.id else null end) then 'DC Comics' else 'Marvel Comics' end as difference from publisher inner join superhero on publisher.id = superhero.publisher_id\n\nIs the SQL semantically correct?"}
{"id": 1082, "question": "State the ID and age of patient with positive degree of coagulation.", "sql": "select patient.id , patient.birthday - strftime('%Y' , examination.kct) from patient inner join examination on patient.id = examination.id where examination.rvvt = '+'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the ID and age of patient with positive degree of coagulation.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id , patient.birthday - strftime('%Y' , examination.kct) from patient inner join examination on patient.id = examination.id where examination.rvvt = '+'\n\nIs the SQL semantically correct?"}
{"id": 1083, "question": "Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.", "sql": "SELECT phone FROM schools WHERE charter = 1 AND opendate > '2000-01-01'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the phone numbers of the direct charter-funded schools that are opened after 2000/1/1.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT phone FROM schools WHERE charter = 1 AND opendate > '2000-01-01'\n\nIs the SQL semantically correct?"}
{"id": 1084, "question": "What is the average heights of Italy players?", "sql": "SELECT AVG(T1.height) AS average_height FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id JOIN Country AS T3 ON T1.player_fifa_api_id = T3.id WHERE T3.name = 'Italy'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average heights of Italy players?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT AVG(T1.height) AS average_height FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id JOIN Country AS T3 ON T1.player_fifa_api_id = T3.id WHERE T3.name = 'Italy'\n\nIs the SQL semantically correct?"}
{"id": 1085, "question": "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?", "sql": "SELECT DISTINCT number FROM cards WHERE side IS NULL AND subtypes = 'Angel, Wizard'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT DISTINCT number FROM cards WHERE side IS NULL AND subtypes = 'Angel, Wizard'\n\nIs the SQL semantically correct?"}
{"id": 1086, "question": "What is the lap record set by Lewis Hamilton in a Formula_1 race?", "sql": "SELECT laptimes.time FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": true, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the lap record set by Lewis Hamilton in a Formula_1 race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT laptimes.time FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 1087, "question": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?", "sql": "SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE `aCL IgM` IS NOT NULL)", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(*) FROM Examination WHERE Thrombosis = 2 AND `ANA Pattern` = 'S' AND `aCL IgM` > (SELECT AVG(`aCL IgM`) * 1.2 FROM Examination WHERE `aCL IgM` IS NOT NULL)\n\nIs the SQL semantically correct?"}
{"id": 1088, "question": "For the post which got 1910 view counts, how many comments does it get?", "sql": "SELECT answercount FROM posts WHERE viewcount = 1910", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the post which got 1910 view counts, how many comments does it get?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT answercount FROM posts WHERE viewcount = 1910\n\nIs the SQL semantically correct?"}
{"id": 1089, "question": "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?", "sql": "SELECT T1.Price, T2.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Price = 124.05 AND T2.Date LIKE '201201%'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T1.Price, T2.Date, T2.Consumption FROM transactions_1k AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Date = '2012-08-24' AND T1.Price = 124.05 AND T2.Date LIKE '201201%'\n\nIs the SQL semantically correct?"}
{"id": 1090, "question": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?", "sql": "SELECT CAST(SUM(IIF(T2.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T2.gender) AS percentage_male_clients FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'south Bohemia' GROUP BY T1.district_id ORDER BY T1.A4 DESC LIMIT 1", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT CAST(SUM(IIF(T2.gender = 'M', 1, 0)) AS REAL) * 100 / COUNT(T2.gender) AS percentage_male_clients FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'south Bohemia' GROUP BY T1.district_id ORDER BY T1.A4 DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1091, "question": "Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?", "sql": "select patient.id , patient.sex , patient.birthday from patient inner join laboratory on patient.id = laboratory.id where laboratory.un > 29", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide all ID, sex and birthday of patients whose urea nitrogen (UN) just within the borderline of passing?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id , patient.sex , patient.birthday from patient inner join laboratory on patient.id = laboratory.id where laboratory.un > 29\n\nIs the SQL semantically correct?"}
{"id": 1092, "question": "What is the name of set number 5 and its translation?", "sql": "SELECT sets.name, set_translations.translation FROM cards INNER JOIN sets ON cards.setcode = sets.code INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE cards.id = 5", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the name of set number 5 and its translation?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT sets.name, set_translations.translation FROM cards INNER JOIN sets ON cards.setcode = sets.code INNER JOIN set_translations ON sets.code = set_translations.setcode WHERE cards.id = 5\n\nIs the SQL semantically correct?"}
{"id": 1093, "question": "Write down the related posts titles and link type IDs of the post \"What are principal component scores?\".", "sql": "select posts.title , postlinks.linktypeid from posts inner join postlinks on posts.id = postlinks.relatedpostid where posts.title = 'What are principal component scores?'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write down the related posts titles and link type IDs of the post \"What are principal component scores?\".\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select posts.title , postlinks.linktypeid from posts inner join postlinks on posts.id = postlinks.relatedpostid where posts.title = 'What are principal component scores?'\n\nIs the SQL semantically correct?"}
{"id": 1094, "question": "What percentage of carcinogenic-type molecules does not contain fluorine?", "sql": "SELECT (1 - CAST(SUM(CASE WHEN T2.element = 'f' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.molecule_id)) * 100 AS percentage FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of carcinogenic-type molecules does not contain fluorine?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT (1 - CAST(SUM(CASE WHEN T2.element = 'f' THEN 1 ELSE 0 END) AS REAL) / COUNT(T1.molecule_id)) * 100 AS percentage FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 1095, "question": "What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?", "sql": "SELECT frpm.`free meal count (k-12)` / frpm.`enrollment (k-12)` FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE schools.soc = 66 ORDER BY frpm.`free meal count (k-12)` DESC LIMIT 5", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the eligible free or reduced price meal rate for the top 5 schools in grades 1-12 with the highest free or reduced price meal count of the schools with the ownership code 66?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT frpm.`free meal count (k-12)` / frpm.`enrollment (k-12)` FROM frpm INNER JOIN schools ON frpm.cdscode = schools.cdscode WHERE schools.soc = 66 ORDER BY frpm.`free meal count (k-12)` DESC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 1096, "question": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?", "sql": "SELECT cast(sum(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / count(client.gender) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'south Bohemia'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT cast(sum(CASE WHEN client.gender = 'M' THEN 1 ELSE 0 END) AS REAL) * 100 / count(client.gender) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'south Bohemia'\n\nIs the SQL semantically correct?"}
{"id": 1097, "question": "How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer as a percentage with four decimal places.", "sql": "select cast(sum(case when atom.element = 'h' then 1 else 0 end) as real) * 100 / count(atom.atom_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR206'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much of the hydrogen in molecule TR206 is accounted for? Please provide your answer as a percentage with four decimal places.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when atom.element = 'h' then 1 else 0 end) as real) * 100 / count(atom.atom_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR206'\n\nIs the SQL semantically correct?"}
{"id": 1098, "question": "Which student has been entrusted to manage the budget for the Yearly Kickoff?", "sql": "SELECT member.first_name, member.last_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Yearly Kickoff'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which student has been entrusted to manage the budget for the Yearly Kickoff?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT member.first_name, member.last_name FROM event INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'Yearly Kickoff'\n\nIs the SQL semantically correct?"}
{"id": 1099, "question": "What is the amount of debt that client number 992 has, and how is this client doing with payments?", "sql": "SELECT sum(loan.amount), sum(loan.payments) FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id WHERE disp.client_id = 992", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the amount of debt that client number 992 has, and how is this client doing with payments?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT sum(loan.amount), sum(loan.payments) FROM loan INNER JOIN account ON loan.account_id = account.account_id INNER JOIN disp ON account.account_id = disp.account_id WHERE disp.client_id = 992\n\nIs the SQL semantically correct?"}
{"id": 1100, "question": "List the creation date and age of the user that commented with webiste.", "sql": "select users.creationdate , users.age from users inner join comments on users.id = comments.userid where users.websiteurl like 'http://'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the creation date and age of the user that commented with webiste.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.creationdate , users.age from users inner join comments on users.id = comments.userid where users.websiteurl like 'http://'\n\nIs the SQL semantically correct?"}
{"id": 1101, "question": "Which segment had the least consumption?", "sql": "select distinct customers.segment from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.consumption = ( select min(consumption) from yearmonth )", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which segment had the least consumption?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select distinct customers.segment from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.consumption = ( select min(consumption) from yearmonth )\n\nIs the SQL semantically correct?"}
{"id": 1102, "question": "Name all the cards which have alternative language in Japanese.", "sql": "SELECT T2.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Japanese'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name all the cards which have alternative language in Japanese.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T2.name FROM foreign_data AS T1 INNER JOIN cards AS T2 ON T1.uuid = T2.uuid WHERE T1.language = 'Japanese'\n\nIs the SQL semantically correct?"}
{"id": 1103, "question": "For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?", "sql": "SELECT CASE WHEN count(foreign_data.name) > 0 THEN 'YES' ELSE 'NO' END FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Korean' AND cards.name = 'Ancestor''s Chosen'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the set of cards with \"Ancestor's Chosen\" in it, is there a Korean version of it?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT CASE WHEN count(foreign_data.name) > 0 THEN 'YES' ELSE 'NO' END FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'Korean' AND cards.name = 'Ancestor''s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 1104, "question": "How many patients with a normal RF don't have thrombosis?", "sql": "select count(patient.id) from patient inner join examination on patient.id = examination.id where examination.diagnosis = 'Normal' and examination.thrombosis = 0", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients with a normal RF don't have thrombosis?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(patient.id) from patient inner join examination on patient.id = examination.id where examination.diagnosis = 'Normal' and examination.thrombosis = 0\n\nIs the SQL semantically correct?"}
{"id": 1105, "question": "Among the molecules between TR004 to TR010, how many of them has single bonds?", "sql": "SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR004' AND 'TR010' AND T2.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the molecules between TR004 to TR010, how many of them has single bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(DISTINCT T1.molecule_id) FROM molecule AS T1 INNER JOIN bond AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.molecule_id BETWEEN 'TR004' AND 'TR010' AND T2.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 1106, "question": "Calculate the percentage of members who are major Business in the list?", "sql": "SELECT cast(count(CASE WHEN member.position = 'Member' THEN 1 ELSE NULL END) AS REAL) * 100 / count(member.member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Mathematics'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the percentage of members who are major Business in the list?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT cast(count(CASE WHEN member.position = 'Member' THEN 1 ELSE NULL END) AS REAL) * 100 / count(member.member_id) FROM member INNER JOIN major ON member.link_to_major = major.major_id WHERE major.major_name = 'Mathematics'\n\nIs the SQL semantically correct?"}
{"id": 1107, "question": "Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.", "sql": "SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Describe the information about rulings for card named 'Sublime Epiphany' with number 74s.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT rulings.text FROM cards INNER JOIN rulings ON cards.uuid = rulings.uuid WHERE cards.name = 'Sublime Epiphany' AND cards.number = '74s'\n\nIs the SQL semantically correct?"}
{"id": 1108, "question": "Which client issued his/her card in 1994/3/3, give his/her client id.", "sql": "SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE STRFTIME('%Y', T1.issued) = '1994' AND STRFTIME('%m', T1.issued) = '03' AND STRFTIME('%d', T1.issued) = '03'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which client issued his/her card in 1994/3/3, give his/her client id.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T2.client_id FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE STRFTIME('%Y', T1.issued) = '1994' AND STRFTIME('%m', T1.issued) = '03' AND STRFTIME('%d', T1.issued) = '03'\n\nIs the SQL semantically correct?"}
{"id": 1109, "question": "What's the German type of the card \"Ancestor's Chosen\"?", "sql": "select set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name like 'Ancestor%s Chosen' and foreign_data.language = 'German'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the German type of the card \"Ancestor's Chosen\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name like 'Ancestor%s Chosen' and foreign_data.language = 'German'\n\nIs the SQL semantically correct?"}
{"id": 1110, "question": "Give the texts commented on the post about linear regression.", "sql": "select comments.text from posts inner join comments on posts.id = comments.postid where posts.title = 'How can I adapt ANOVA for binary data?' and comments.text = 'Linear regression in R'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the texts commented on the post about linear regression.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select comments.text from posts inner join comments on posts.id = comments.postid where posts.title = 'How can I adapt ANOVA for binary data?' and comments.text = 'Linear regression in R'\n\nIs the SQL semantically correct?"}
{"id": 1111, "question": "What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.", "sql": "select cast(sum(case when molecule.label = '+' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where bond.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What proportion of single bonds are carcinogenic? Please provide your answer as a percentage with five decimal places.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when molecule.label = '+' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where bond.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 1112, "question": "What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?", "sql": "select drivers.forename , drivers.surname from drivers inner join qualifying on drivers.driverid = qualifying.driverid inner join races on qualifying.raceid = races.raceid inner join circuits on races.circuitid = circuits.circuitid where races.year = 2008 and circuits.name = 'Marina Bay Street Circuit' order by qualifying.q3 asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is full name of the racer who ranked 1st in the 3rd qualifying race held in the Marina Bay Street Circuit in 2008?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.surname from drivers inner join qualifying on drivers.driverid = qualifying.driverid inner join races on qualifying.raceid = races.raceid inner join circuits on races.circuitid = circuits.circuitid where races.year = 2008 and circuits.name = 'Marina Bay Street Circuit' order by qualifying.q3 asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1113, "question": "Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989?", "sql": "SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` != 'p' AND T1.SEX = 'F' AND strftime('%Y', T1.Birthday) BETWEEN '1980' AND '1989'", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Excluding all P only ANA Pattern patients, how many of the remainder are women born between 1980 and 1989?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(T1.ID) FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.`ANA Pattern` != 'p' AND T1.SEX = 'F' AND strftime('%Y', T1.Birthday) BETWEEN '1980' AND '1989'\n\nIs the SQL semantically correct?"}
{"id": 1114, "question": "Which accounts placed orders for household payment in Pisek?", "sql": "SELECT T1.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A2 = 'Pisek' AND T1.k_symbol = 'SIPO'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which accounts placed orders for household payment in Pisek?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T1.account_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T3.A2 = 'Pisek' AND T1.k_symbol = 'SIPO'\n\nIs the SQL semantically correct?"}
{"id": 1115, "question": "What are the elements of the toxicology and label of molecule TR060?", "sql": "select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR060' and molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the elements of the toxicology and label of molecule TR060?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.molecule_id = 'TR060' and molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 1116, "question": "Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.", "sql": "SELECT CAST(SUM(CASE WHEN T1.date LIKE '1993%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the percentage of account from 'Decin' district for all accounts are opened in 1993.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.date LIKE '1993%' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Decin'\n\nIs the SQL semantically correct?"}
{"id": 1117, "question": "How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?", "sql": "select sum(case when country = 'Czech Rep.' then 1 else 0 end) - sum(case when country = 'Slovakia' then 1 else 0 end) from gasstations", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many more \"discount\" gas stations does the Czech Republic have compared to Slovakia?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select sum(case when country = 'Czech Rep.' then 1 else 0 end) - sum(case when country = 'Slovakia' then 1 else 0 end) from gasstations\n\nIs the SQL semantically correct?"}
{"id": 1118, "question": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.", "sql": "select case when sum(case when patient.admission = '+' then 1 else 0 end) - sum(case when patient.admission = '-' then 1 else 0 end) > 50 then 'Yes' else 'No' end from patient inner join laboratory on patient.id = laboratory.id where laboratory.rbc < 3.5 or laboratory.rbc >= 6.0 and patient.sex = 'F'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select case when sum(case when patient.admission = '+' then 1 else 0 end) - sum(case when patient.admission = '-' then 1 else 0 end) > 50 then 'Yes' else 'No' end from patient inner join laboratory on patient.id = laboratory.id where laboratory.rbc < 3.5 or laboratory.rbc >= 6.0 and patient.sex = 'F'\n\nIs the SQL semantically correct?"}
{"id": 1119, "question": "Among the patients with normal anti-SM, how many of them does not have thrombosis?", "sql": "select count(patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where examination.thrombosis = 1 and laboratory.sm in ('-' , '+-')", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients with normal anti-SM, how many of them does not have thrombosis?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where examination.thrombosis = 1 and laboratory.sm in ('-' , '+-')\n\nIs the SQL semantically correct?"}
{"id": 1120, "question": "What is the average height of players born between 1990 and 1995?", "sql": "select avg(height) from player where birthday between '1990-01-01 00:00:00' and '1996-01-01 00:00:00'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average height of players born between 1990 and 1995?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select avg(height) from player where birthday between '1990-01-01 00:00:00' and '1996-01-01 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 1121, "question": "Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T2.Symptoms IS NOT NULL", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients with the normal level of triglyceride, how many of them have other symptoms observed?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Laboratory AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T1.TG < 200 AND T2.Symptoms IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 1122, "question": "What is the percentage of double bonds in the molecule TR008? Please provide your answer as a percentage with five decimal places.", "sql": "SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) AS percentage FROM bond WHERE molecule_id = 'TR008'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of double bonds in the molecule TR008? Please provide your answer as a percentage with five decimal places.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN bond_type = '=' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(bond_id) AS percentage FROM bond WHERE molecule_id = 'TR008'\n\nIs the SQL semantically correct?"}
{"id": 1123, "question": "What are the atom IDs of the bond TR000_2_5?", "sql": "select connected.atom_id2 from connected inner join bond on connected.bond_id = bond.bond_id where bond.bond_id = 'TR_000_2_5'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the atom IDs of the bond TR000_2_5?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select connected.atom_id2 from connected inner join bond on connected.bond_id = bond.bond_id where bond.bond_id = 'TR_000_2_5'\n\nIs the SQL semantically correct?"}
{"id": 1124, "question": "Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?", "sql": "SELECT count(cards.id) FROM cards INNER JOIN sets ON cards.uuid = sets.tcgplayergroupid WHERE sets.name = 'Coldsnap' AND cards.convertedmanacost > 5 AND (cards.power = '*' OR cards.power IS NULL)", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the cards with converted mana cost higher than 5 in the set Coldsnap, how many of them have unknown power?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(cards.id) FROM cards INNER JOIN sets ON cards.uuid = sets.tcgplayergroupid WHERE sets.name = 'Coldsnap' AND cards.convertedmanacost > 5 AND (cards.power = '*' OR cards.power IS NULL)\n\nIs the SQL semantically correct?"}
{"id": 1125, "question": "What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index.", "sql": "SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` IS NOT NULL)", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the highest total bilirubin level recorded? List out the patient details with ID, sex and birthday with that index.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID, T1.SEX, T1.Birthday FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.`T-BIL` = (SELECT MAX(`T-BIL`) FROM Laboratory WHERE `T-BIL` IS NOT NULL)\n\nIs the SQL semantically correct?"}
{"id": 1126, "question": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'APS' AND T2.C4 > 10", "db_id": "thrombosis_prediction", "label": true, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients have blood clots in veins, how many of them have a normal level of complement 4?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Diagnosis = 'APS' AND T2.C4 > 10\n\nIs the SQL semantically correct?"}
{"id": 1127, "question": "Identify the display name and location of the user, who was the last to edit the post with ID 183.", "sql": "SELECT T2.DisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the display name and location of the user, who was the last to edit the post with ID 183.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.DisplayName, T2.Location FROM posts AS T1 INNER JOIN users AS T2 ON T1.LastEditorUserId = T2.Id WHERE T1.Id = 183\n\nIs the SQL semantically correct?"}
{"id": 1128, "question": "What is the biggest monthly consumption of the customers who use euro as their currency?", "sql": "select yearmonth.consumption from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'eur' order by yearmonth.consumption desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the biggest monthly consumption of the customers who use euro as their currency?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select yearmonth.consumption from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.currency = 'eur' order by yearmonth.consumption desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1129, "question": "How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?", "sql": "select count(bond.molecule_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where bond.bond_type = '= ' and molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules have a double bond type and among these molecule, how many are labeled as carcinogenic compound?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(bond.molecule_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where bond.bond_type = '= ' and molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 1130, "question": "Provide the hero name and race of Charles Chandler.", "sql": "SELECT superhero.superhero_name, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the hero name and race of Charles Chandler.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superhero.superhero_name, race.race FROM superhero INNER JOIN race ON superhero.race_id = race.id WHERE superhero.full_name = 'Charles Chandler'\n\nIs the SQL semantically correct?"}
{"id": 1131, "question": "User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get?", "sql": "SELECT posts.favoritecount FROM posts INNER JOIN comments ON posts.id = comments.postid WHERE comments.userid = 3025 AND comments.creationdate LIKE '2014-04-23 20:29:39'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: User No.3025 gave a comment at 20:29:39 on 2014/4/23 to a post, how many favorite counts did that post get?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT posts.favoritecount FROM posts INNER JOIN comments ON posts.id = comments.postid WHERE comments.userid = 3025 AND comments.creationdate LIKE '2014-04-23 20:29:39'\n\nIs the SQL semantically correct?"}
{"id": 1132, "question": "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?", "sql": "select amount , date from transactions_1k where customerid = 38508 and date = '2012-01'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select amount , date from transactions_1k where customerid = 38508 and date = '2012-01'\n\nIs the SQL semantically correct?"}
{"id": 1133, "question": "Who was the driver that got the best lap time in the race No. 348? Give his full name.", "sql": "SELECT T2.forename || ' ' || T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 ORDER BY T1.milliseconds ASC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the driver that got the best lap time in the race No. 348? Give his full name.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.forename || ' ' || T2.surname FROM lapTimes AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 348 ORDER BY T1.milliseconds ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1134, "question": "What is the sum of score of the post on 2010-07-19?", "sql": "SELECT posts.score FROM posts INNER JOIN tags ON posts.id = tags.wikipostid ORDER BY tags.count DESC LIMIT 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the sum of score of the post on 2010-07-19?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT posts.score FROM posts INNER JOIN tags ON posts.id = tags.wikipostid ORDER BY tags.count DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1135, "question": "What is the region of the client with the id 3541 from?", "sql": "select district.a3 from client inner join district on client.district_id = district.district_id where client.client_id = 3541", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the region of the client with the id 3541 from?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select district.a3 from client inner join district on client.district_id = district.district_id where client.client_id = 3541\n\nIs the SQL semantically correct?"}
{"id": 1136, "question": "How many superheroes did DC Comics publish?", "sql": "select count(*) from publisher inner join superhero on publisher.id = superhero.publisher_id where publisher.publisher_name = 'DC Comics'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many superheroes did DC Comics publish?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select count(*) from publisher inner join superhero on publisher.id = superhero.publisher_id where publisher.publisher_name = 'DC Comics'\n\nIs the SQL semantically correct?"}
{"id": 1137, "question": "List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.", "sql": "SELECT driverId FROM lapTimes WHERE lap = 1 AND milliseconds IS NOT NULL ORDER BY milliseconds ASC LIMIT 5", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the driver's ID of the top five driver, by descending order, the fastest time during the first lap of the race.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT driverId FROM lapTimes WHERE lap = 1 AND milliseconds IS NOT NULL ORDER BY milliseconds ASC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 1138, "question": "Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?", "sql": "SELECT T1.CDSCode, T2.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.GSserved = 'K-09'", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which schools served a grade span of Kindergarten to 9th grade in the county of Los Angeles and what is its Percent (%) Eligible FRPM (Ages 5-17)?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T1.CDSCode, T2.`Percent (%) Eligible FRPM (Ages 5-17)` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Los Angeles' AND T1.GSserved = 'K-09'\n\nIs the SQL semantically correct?"}
{"id": 1139, "question": "Who placed the order with the id 32423?", "sql": "SELECT account_id FROM `order` WHERE order_id = 32423", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who placed the order with the id 32423?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT account_id FROM `order` WHERE order_id = 32423\n\nIs the SQL semantically correct?"}
{"id": 1140, "question": "List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.", "sql": "select name from badges where date = '2010-07-19 19:39:08'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the name of badges that users obtained on 7/19/2010 7:39:08 PM.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select name from badges where date = '2010-07-19 19:39:08'\n\nIs the SQL semantically correct?"}
{"id": 1141, "question": "How many accounts have running contracts in Branch location 1?", "sql": "SELECT count(account.account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE account.district_id = 1 AND loan.status = 'C'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many accounts have running contracts in Branch location 1?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(account.account_id) FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE account.district_id = 1 AND loan.status = 'C'\n\nIs the SQL semantically correct?"}
{"id": 1142, "question": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?", "sql": "SELECT cast((sum(CASE WHEN strftime('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) - sum(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END) FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'M'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT cast((sum(CASE WHEN strftime('%Y', loan.date) = '1997' THEN loan.amount ELSE 0 END) - sum(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END)) AS REAL) * 100 / sum(CASE WHEN strftime('%Y', loan.date) = '1996' THEN loan.amount ELSE 0 END) FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'M'\n\nIs the SQL semantically correct?"}
{"id": 1143, "question": "Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?", "sql": "SELECT max(`free meal count (ages 5-17)`) FROM frpm WHERE `percent (%) eligible free (ages 5-17)` = ( SELECT max(`percent (%) eligible free (ages 5-17)`) FROM frpm )", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the schools with an SAT excellence rate of over 0.3, what is the highest eligible free rate for students aged 5-17?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT max(`free meal count (ages 5-17)`) FROM frpm WHERE `percent (%) eligible free (ages 5-17)` = ( SELECT max(`percent (%) eligible free (ages 5-17)`) FROM frpm )\n\nIs the SQL semantically correct?"}
{"id": 1144, "question": "Calculate the average view count of each post tagged as 'humor' and list the title and the comment of each post.", "sql": "SELECT avg(posts.viewcount) FROM posts INNER JOIN tags ON posts.id = tags.wikipostid WHERE tags.tagname = 'humor'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the average view count of each post tagged as 'humor' and list the title and the comment of each post.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT avg(posts.viewcount) FROM posts INNER JOIN tags ON posts.id = tags.wikipostid WHERE tags.tagname = 'humor'\n\nIs the SQL semantically correct?"}
{"id": 1145, "question": "List out the dates that users who are located in Rochester, NY obtained their badges?", "sql": "select badges.date from users inner join badges on users.id = badges.userid where users.location = 'Rochester , NY'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the dates that users who are located in Rochester, NY obtained their badges?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select badges.date from users inner join badges on users.id = badges.userid where users.location = 'Rochester , NY'\n\nIs the SQL semantically correct?"}
{"id": 1146, "question": "Who finished second in the San Marino Grand Prix in 2006?", "sql": "select drivers.forename , drivers.surname from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.name = 'San Marino Grand Prix' and races.year = 2006 and results.position = 2", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who finished second in the San Marino Grand Prix in 2006?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.surname from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.name = 'San Marino Grand Prix' and races.year = 2006 and results.position = 2\n\nIs the SQL semantically correct?"}
{"id": 1147, "question": "Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.", "sql": "SELECT T1.County, T1.School, T1.ClosedDate FROM schools T1 WHERE T1.StatusType = 'Closed' AND T1.County = (SELECT T2.County FROM schools T2 WHERE T2.StatusType = 'Closed' GROUP BY T2.County ORDER BY COUNT(*) DESC LIMIT 1)", "db_id": "california_schools", "label": false, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which different county has the most number of closed schools? Please provide the name of each school as well as the closure date.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T1.County, T1.School, T1.ClosedDate FROM schools T1 WHERE T1.StatusType = 'Closed' AND T1.County = (SELECT T2.County FROM schools T2 WHERE T2.StatusType = 'Closed' GROUP BY T2.County ORDER BY COUNT(*) DESC LIMIT 1)\n\nIs the SQL semantically correct?"}
{"id": 1148, "question": "In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?", "sql": "select distinct races.name from races inner join results on races.raceid = results.raceid inner join laptimes on results.raceid = laptimes.raceid where results.fastestlapspeed = ( select min(fastestlaptime) from results )", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In terms of the fastest lap time, what is the name of the race which recorded the fastest lap speed by a racer?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.name from races inner join results on races.raceid = results.raceid inner join laptimes on results.raceid = laptimes.raceid where results.fastestlapspeed = ( select min(fastestlaptime) from results )\n\nIs the SQL semantically correct?"}
{"id": 1149, "question": "How many accounts in North Bohemia has made a transaction with the partner's bank being AB?", "sql": "SELECT COUNT(DISTINCT T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.A3 = 'north Bohemia' AND T3.bank = 'AB'", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many accounts in North Bohemia has made a transaction with the partner's bank being AB?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT COUNT(DISTINCT T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN trans AS T3 ON T2.account_id = T3.account_id WHERE T1.A3 = 'north Bohemia' AND T3.bank = 'AB'\n\nIs the SQL semantically correct?"}
{"id": 1150, "question": "Which users have posted the most comments. List out the user's badge?", "sql": "select comments.userid , badges.name from comments inner join badges on comments.userid = badges.userid group by comments.userid order by count(comments.id) desc limit 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which users have posted the most comments. List out the user's badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select comments.userid , badges.name from comments inner join badges on comments.userid = badges.userid group by comments.userid order by count(comments.id) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1151, "question": "Among the tags with tag ID below 15, how many of them have 20 count of posts and below?", "sql": "SELECT count(DISTINCT tags.tagname) FROM tags INNER JOIN posts ON tags.wikipostid = posts.id WHERE tags.id < 15 AND posts.viewcount <= 20", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the tags with tag ID below 15, how many of them have 20 count of posts and below?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(DISTINCT tags.tagname) FROM tags INNER JOIN posts ON tags.wikipostid = posts.id WHERE tags.id < 15 AND posts.viewcount <= 20\n\nIs the SQL semantically correct?"}
{"id": 1152, "question": "Name chemical elements that form a bond TR001_10_11.", "sql": "select atom.element from atom inner join bond on atom.molecule_id = bond.molecule_id where bond.bond_id = 'TR001_10_11' group by atom.element", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name chemical elements that form a bond TR001_10_11.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join bond on atom.molecule_id = bond.molecule_id where bond.bond_id = 'TR001_10_11' group by atom.element\n\nIs the SQL semantically correct?"}
{"id": 1153, "question": "Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.", "sql": "select event.event_name , event.event_date from event inner join expense on event.event_date = expense.expense_date where expense.expense_description = 'Pizza' and expense.cost > 50 and expense.cost < 100", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the name and date of events with expenses for pizza that were more than fifty dollars but less than a hundred dollars.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select event.event_name , event.event_date from event inner join expense on event.event_date = expense.expense_date where expense.expense_description = 'Pizza' and expense.cost > 50 and expense.cost < 100\n\nIs the SQL semantically correct?"}
{"id": 1154, "question": "What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?", "sql": "SELECT T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Merced' AND T1.EILCode = 'HS' AND T2.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12'", "db_id": "california_schools", "label": true, "prediction": true, "response_raw": "yes", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the city location of the high school level school with Lunch Provision 2 whose lowest grade is 9 and the highest grade is 12 in the county of Merced?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T1.City FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.County = 'Merced' AND T1.EILCode = 'HS' AND T2.`NSLP Provision Status` = 'Lunch Provision 2' AND T2.`Low Grade` = '9' AND T2.`High Grade` = '12'\n\nIs the SQL semantically correct?"}
{"id": 1155, "question": "For all the budgets for \"November Meeting\", how many of them had exceeded the budget?", "sql": "select count(event.event_id) from event inner join budget on event.event_id = budget.link_to_event inner join expense on expense.link_to_budget = budget.budget_id where event.event_name = 'November Meeting' and budget.remaining < 0", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the budgets for \"November Meeting\", how many of them had exceeded the budget?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select count(event.event_id) from event inner join budget on event.event_id = budget.link_to_event inner join expense on expense.link_to_budget = budget.budget_id where event.event_name = 'November Meeting' and budget.remaining < 0\n\nIs the SQL semantically correct?"}
{"id": 1156, "question": "Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.", "sql": "select team_attributes.buildupplaypassingclass from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team.team_long_name = 'FC Lorient' and team_attributes.date = '2010-02-22'", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Tell the build Up play passing class for \"FC Lorient\" on 2010/2/22.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team_attributes.buildupplaypassingclass from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team.team_long_name = 'FC Lorient' and team_attributes.date = '2010-02-22'\n\nIs the SQL semantically correct?"}
{"id": 1157, "question": "How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.", "sql": "SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4", "db_id": "thrombosis_prediction", "label": false, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients who were examined between 1987/7/6 and 1996/1/31 had a GPT level greater than 30 and an ALB level less than 4? List them by their ID.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(DISTINCT T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.`Examination Date` BETWEEN '1987-07-06' AND '1996-01-31' AND T2.GPT > 30 AND T2.ALB < 4\n\nIs the SQL semantically correct?"}
{"id": 1158, "question": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?", "sql": "SELECT avg(cast(substr(fastestlaptime, 3, length(fastestlaptime) - 4) AS REAL)) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT avg(cast(substr(fastestlaptime, 3, length(fastestlaptime) - 4) AS REAL)) FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 1159, "question": "What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?", "sql": "select printings from cards where artist = 'Aleksi Briclot' and istextless = 1", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the available printing types of the cards that doesn't have a text box created by Aleksi Briclot?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select printings from cards where artist = 'Aleksi Briclot' and istextless = 1\n\nIs the SQL semantically correct?"}
{"id": 1160, "question": "How many members did attend the event 'Community Theater' in 2019?", "sql": "SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND STRFTIME('%Y', T1.event_date) = '2019'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many members did attend the event 'Community Theater' in 2019?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT COUNT(T2.link_to_member) FROM event AS T1 INNER JOIN attendance AS T2 ON T1.event_id = T2.link_to_event WHERE T1.event_name = 'Community Theater' AND STRFTIME('%Y', T1.event_date) = '2019'\n\nIs the SQL semantically correct?"}
{"id": 1161, "question": "Among the posts owned by an elder user, how many of them have a score of over 19?", "sql": "select count(posts.owneruserid) from posts inner join comments on posts.id = comments.postid inner join users on posts.owneruserid = users.id where posts.score >= 19 and users.age > 65", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the posts owned by an elder user, how many of them have a score of over 19?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(posts.owneruserid) from posts inner join comments on posts.id = comments.postid inner join users on posts.owneruserid = users.id where posts.score >= 19 and users.age > 65\n\nIs the SQL semantically correct?"}
{"id": 1162, "question": "Among the patients have blood clots in veins, how many of them have a normal level of complement 4?", "sql": "select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.diagnosis = 'APS' and laboratory.c4 > 10", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients have blood clots in veins, how many of them have a normal level of complement 4?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.diagnosis = 'APS' and laboratory.c4 > 10\n\nIs the SQL semantically correct?"}
{"id": 1163, "question": "List the football players with a birthyear of 1970 and a birthmonth of October.", "sql": "SELECT player_name FROM player WHERE substr(birthday, 1, 4) = '1970' AND substr(birthday, 6, 2) = '10'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the football players with a birthyear of 1970 and a birthmonth of October.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_name FROM player WHERE substr(birthday, 1, 4) = '1970' AND substr(birthday, 6, 2) = '10'\n\nIs the SQL semantically correct?"}
{"id": 1164, "question": "What is the average height of a non-human superhero in Dark Horse Comics?", "sql": "select cast(sum(superhero.height_cm) as real) / count(race.id) from race inner join superhero on race.id = superhero.race_id inner join publisher on publisher.id = superhero.publisher_id where publisher.publisher_name = 'Dark Horse Comics' and race.race < 'Human'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average height of a non-human superhero in Dark Horse Comics?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select cast(sum(superhero.height_cm) as real) / count(race.id) from race inner join superhero on race.id = superhero.race_id inner join publisher on publisher.id = superhero.publisher_id where publisher.publisher_name = 'Dark Horse Comics' and race.race < 'Human'\n\nIs the SQL semantically correct?"}
{"id": 1165, "question": "What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?", "sql": "SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the card numbers that don't have multiple faces on a single card and have the subtypes Angel and Wizard?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT number FROM cards WHERE side IS NULL AND subtypes LIKE '%Angel%' AND subtypes LIKE '%Wizard%'\n\nIs the SQL semantically correct?"}
{"id": 1166, "question": "List down all the card IDs with converted mana cost of 0.", "sql": "SELECT id FROM cards WHERE convertedmanacost = 0", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List down all the card IDs with converted mana cost of 0.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT id FROM cards WHERE convertedmanacost = 0\n\nIs the SQL semantically correct?"}
{"id": 1167, "question": "Please list the chains of the gas stations with transactions in euro.", "sql": "SELECT DISTINCT gasstations.chainid FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid WHERE gasstations.country = 'CZE'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the chains of the gas stations with transactions in euro.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT gasstations.chainid FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid WHERE gasstations.country = 'CZE'\n\nIs the SQL semantically correct?"}
{"id": 1168, "question": "Name the elements that comprise the atoms of bond TR001_2_4.", "sql": "select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR001_2_4' group by atom.element", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the elements that comprise the atoms of bond TR001_2_4.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR001_2_4' group by atom.element\n\nIs the SQL semantically correct?"}
{"id": 1169, "question": "Among the atoms that contain element carbon, which one does not contain compound carcinogenic?", "sql": "select atom.atom_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'C' and molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the atoms that contain element carbon, which one does not contain compound carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.atom_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'C' and molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 1170, "question": "List the last names of students under the Elementary Education major and include their phone numbers.", "sql": "select member.last_name , member.phone from major inner join member on major.major_id = member.link_to_major where major.major_name = 'Elementary Education'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the last names of students under the Elementary Education major and include their phone numbers.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.last_name , member.phone from major inner join member on major.major_id = member.link_to_major where major.major_name = 'Elementary Education'\n\nIs the SQL semantically correct?"}
{"id": 1171, "question": "List all the clients' IDs whose junior credit cards were issued after 1996.", "sql": "SELECT card.disp_id FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE card.type = 'junior' AND card.issued > '1996-01-01'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the clients' IDs whose junior credit cards were issued after 1996.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT card.disp_id FROM card INNER JOIN disp ON card.disp_id = disp.disp_id INNER JOIN client ON disp.client_id = client.client_id WHERE card.type = 'junior' AND card.issued > '1996-01-01'\n\nIs the SQL semantically correct?"}
{"id": 1172, "question": "What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?", "sql": "SELECT sum(transactions_1k.price), sum(transactions_1k.amount) FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid WHERE transactions_1k.customerid = 38508 AND substr(transactions_1k.date, 1, 6) = '201201'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the amount spent by customer \"38508\" at the gas stations? How much had the customer spent in January 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(transactions_1k.price), sum(transactions_1k.amount) FROM transactions_1k INNER JOIN yearmonth ON transactions_1k.customerid = yearmonth.customerid WHERE transactions_1k.customerid = 38508 AND substr(transactions_1k.date, 1, 6) = '201201'\n\nIs the SQL semantically correct?"}
{"id": 1173, "question": "What elements are in the TR004_8_9 bond atoms?", "sql": "select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where bond.bond_id = 'TR004_8_9'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What elements are in the TR004_8_9 bond atoms?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where bond.bond_id = 'TR004_8_9'\n\nIs the SQL semantically correct?"}
{"id": 1174, "question": "Please provide the IDs of the 3 female clients with the largest loans.", "sql": "SELECT client.client_id FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'F' ORDER BY loan.amount DESC LIMIT 3", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide the IDs of the 3 female clients with the largest loans.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT client.client_id FROM client INNER JOIN loan ON client.client_id = loan.account_id WHERE client.gender = 'F' ORDER BY loan.amount DESC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 1175, "question": "How many 'classic' cards are eligible for loan?", "sql": "SELECT count(card.card_id) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE disp.type = 'OWNER' AND card.type = 'classic'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many 'classic' cards are eligible for loan?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(card.card_id) FROM card INNER JOIN disp ON card.disp_id = disp.disp_id WHERE disp.type = 'OWNER' AND card.type = 'classic'\n\nIs the SQL semantically correct?"}
{"id": 1176, "question": "What is the average score of Stephen Turner's posts?", "sql": "select cast(sum(posts.score) as real) / count(comments.postid) from users inner join comments on users.id = comments.userid inner join posts on comments.postid = posts.id where users.displayname = 'Stephen Turner'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score of Stephen Turner's posts?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select cast(sum(posts.score) as real) / count(comments.postid) from users inner join comments on users.id = comments.userid inner join posts on comments.postid = posts.id where users.displayname = 'Stephen Turner'\n\nIs the SQL semantically correct?"}
{"id": 1177, "question": "After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?", "sql": "SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.operation = 'VYBER KARTOU' AND T1.frequency = 'POPLATEK MESICNE' AND T2.balance < 0", "db_id": "financial", "label": false, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: After making a credit card withdrawal, how many account/s with monthly issuance has a negative balance?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT COUNT(DISTINCT T1.account_id) FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.operation = 'VYBER KARTOU' AND T1.frequency = 'POPLATEK MESICNE' AND T2.balance < 0\n\nIs the SQL semantically correct?"}
{"id": 1178, "question": "What is the date when the youngest user made his or her first post?", "sql": "select min(posts.creaiondate) from posts inner join users on posts.owneruserid = users.id order by users.age asc limit 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the date when the youngest user made his or her first post?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select min(posts.creaiondate) from posts inner join users on posts.owneruserid = users.id order by users.age asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1179, "question": "What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?", "sql": "SELECT T2.time FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.positionOrder = 2", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.time FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.name = 'Australian Grand Prix' AND T1.year = 2008 AND T2.positionOrder = 2\n\nIs the SQL semantically correct?"}
{"id": 1180, "question": "What is the passing class of CLB team?", "sql": "select team_attributes.buildupplaypassingclass from team inner join team_attributes on team.id = team_attributes.team_api_id where team.team_short_name = 'CLB'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the passing class of CLB team?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team_attributes.buildupplaypassingclass from team inner join team_attributes on team.id = team_attributes.team_api_id where team.team_short_name = 'CLB'\n\nIs the SQL semantically correct?"}
{"id": 1181, "question": "Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine.", "sql": "select count(atom.atom_id) from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where atom.element in ('p' , 'br')", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select count(atom.atom_id) from atom inner join bond on atom.molecule_id = bond.molecule_id inner join connected on bond.bond_id = connected.bond_id where atom.element in ('p' , 'br')\n\nIs the SQL semantically correct?"}
{"id": 1182, "question": "What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?", "sql": "SELECT cast(sum(CASE WHEN schools.opendate LIKE '1980%' THEN 1 ELSE 0 END) AS REAL) / 12 FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda' AND schools.doc = 52", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the monthly average number of schools that opened in Alameda County under the jurisdiction of the Elementary School District in 1980?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT cast(sum(CASE WHEN schools.opendate LIKE '1980%' THEN 1 ELSE 0 END) AS REAL) / 12 FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.county = 'Alameda' AND schools.doc = 52\n\nIs the SQL semantically correct?"}
{"id": 1183, "question": "How many female customers have a junior credit card?", "sql": "select count(client.client_id) from client inner join disp on client.client_id = disp.client_id inner join card on disp.disp_id = card.disp_id where client.gender = 'F' and card.type = 'junior'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many female customers have a junior credit card?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select count(client.client_id) from client inner join disp on client.client_id = disp.client_id inner join card on disp.disp_id = card.disp_id where client.gender = 'F' and card.type = 'junior'\n\nIs the SQL semantically correct?"}
{"id": 1184, "question": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?", "sql": "SELECT CAST(SUM(CASE WHEN T3.laps > 50 AND STRFTIME('%Y', T1.dob) < '1985' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.driverId) AS percentage FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T2.year BETWEEN 2000 AND 2005", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT CAST(SUM(CASE WHEN T3.laps > 50 AND STRFTIME('%Y', T1.dob) < '1985' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(DISTINCT T1.driverId) AS percentage FROM drivers AS T1 INNER JOIN results AS T3 ON T1.driverId = T3.driverId INNER JOIN races AS T2 ON T3.raceId = T2.raceId WHERE T2.year BETWEEN 2000 AND 2005\n\nIs the SQL semantically correct?"}
{"id": 1185, "question": "Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.", "sql": "SELECT min(`free meal count (ages 5-17)`) FROM frpm WHERE `educational option type` = 'Continuation School'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the lowest three eligible free rates for students aged 5-17 in continuation schools.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT min(`free meal count (ages 5-17)`) FROM frpm WHERE `educational option type` = 'Continuation School'\n\nIs the SQL semantically correct?"}
{"id": 1186, "question": "What is the average total price of the transactions taken place in January, 2012?", "sql": "select sum(price) / count(transactionid) from transactions_1k where date like '2012-01%'", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average total price of the transactions taken place in January, 2012?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select sum(price) / count(transactionid) from transactions_1k where date like '2012-01%'\n\nIs the SQL semantically correct?"}
{"id": 1187, "question": "List account ID and account opening date for accounts from 'Prachatice'.", "sql": "select account.account_id , account.date from district inner join account on district.district_id = account.district_id where district.a2 = 'Prachatice'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List account ID and account opening date for accounts from 'Prachatice'.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id , account.date from district inner join account on district.district_id = account.district_id where district.a2 = 'Prachatice'\n\nIs the SQL semantically correct?"}
{"id": 1188, "question": "What language is the set of 180 cards that belongs to the Ravnica block translated into?", "sql": "select distinct foreign_data.language from set_translations inner join foreign_data on set_translations.id = foreign_data.id inner join sets on set_translations.setcode = sets.code where sets.block = 'Ravnica' and sets.basesetsize = 180", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What language is the set of 180 cards that belongs to the Ravnica block translated into?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct foreign_data.language from set_translations inner join foreign_data on set_translations.id = foreign_data.id inner join sets on set_translations.setcode = sets.code where sets.block = 'Ravnica' and sets.basesetsize = 180\n\nIs the SQL semantically correct?"}
{"id": 1189, "question": "For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?", "sql": "select team_attributes.defenceaggressionclass from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team.team_long_name = 'Hannover 96' and team_attributes.date = '2015-09-10 00:00:00'", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the team \"Hannover 96\", what was its defence aggression class on 2015/9/10?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team_attributes.defenceaggressionclass from team inner join team_attributes on team.team_api_id = team_attributes.team_api_id where team.team_long_name = 'Hannover 96' and team_attributes.date = '2015-09-10 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 1190, "question": "How many white bordered cards are powerful?", "sql": "SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many white bordered cards are powerful?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE borderColor = 'white' AND cardKingdomFoilId = cardKingdomId AND cardKingdomId IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 1191, "question": "How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.", "sql": "select count(cards.id) from cards inner join sets on cards.id = sets.id where sets.name = 'World Championship Decks 2004' and cards.convertedmanacost = 3", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards are there in the set 'World Championship Decks 2004' with the converted mana cost as '3'.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(cards.id) from cards inner join sets on cards.id = sets.id where sets.name = 'World Championship Decks 2004' and cards.convertedmanacost = 3\n\nIs the SQL semantically correct?"}
{"id": 1192, "question": "Among the budgets for Food, which one has the highest budgeted amount?", "sql": "SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the budgets for Food, which one has the highest budgeted amount?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT budget_id FROM budget WHERE category = 'Food' ORDER BY amount DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1193, "question": "Which country is the oldest driver from?", "sql": "SELECT nationality FROM drivers ORDER BY dob LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which country is the oldest driver from?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT nationality FROM drivers ORDER BY dob LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1194, "question": "What is the average number of bonds the atoms with the element iodine have?", "sql": "select cast(count(bond.bond_id) as real) / count(distinct atom.atom_id) from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'i'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average number of bonds the atoms with the element iodine have?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(count(bond.bond_id) as real) / count(distinct atom.atom_id) from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'i'\n\nIs the SQL semantically correct?"}
{"id": 1195, "question": "Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth.", "sql": "SELECT patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp NOT IN ('-', '+-') ORDER BY patient.birthday DESC LIMIT 1", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which is the youngest patient with an abnormal anti-ribonuclear protein level? Please list his or her date of birth.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.birthday FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE laboratory.rnp NOT IN ('-', '+-') ORDER BY patient.birthday DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1196, "question": "Among the cards with a white border color, how many of them have unknown power?", "sql": "select count(bordercolor) from cards where bordercolor = 'white' and power = '*'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the cards with a white border color, how many of them have unknown power?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(bordercolor) from cards where bordercolor = 'white' and power = '*'\n\nIs the SQL semantically correct?"}
{"id": 1197, "question": "Find the percentage of atoms with single bond.", "sql": "SELECT cast(sum(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / count(bond_id) FROM bond", "db_id": "toxicology", "label": true, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the percentage of atoms with single bond.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT cast(sum(CASE WHEN bond_type = '-' THEN 1 ELSE 0 END) AS REAL) * 100 / count(bond_id) FROM bond\n\nIs the SQL semantically correct?"}
{"id": 1198, "question": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.", "sql": "select count(case when colour.id = 7 then 1 else null end) - count(case when colour.id = 1 then 1 else null end) from superhero inner join colour on colour.id = superhero.eye_colour_id where superhero.weight_kg is null", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select count(case when colour.id = 7 then 1 else null end) - count(case when colour.id = 1 then 1 else null end) from superhero inner join colour on colour.id = superhero.eye_colour_id where superhero.weight_kg is null\n\nIs the SQL semantically correct?"}
