{"id": 1399, "question": "Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.", "sql": "select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the team_fifa_api_id of teams with more than 50 but less than 60 build-up play speed.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select distinct team_attributes.team_fifa_api_id from team inner join team_attributes on team.team_fifa_api_id = team_attributes.team_api_id where team_attributes.buildupplayspeed between 51 and 59\n\nIs the SQL semantically correct?"}
{"id": 826, "question": "Which user ID has the highest reputation?", "sql": "select id from users order by reputation desc limit 1", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user ID has the highest reputation?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select id from users order by reputation desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 700, "question": "For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.", "sql": "select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all cards illustrated by Jim Pavelec. and describe the text of the ruling of these cards. Do these cards have missing or degraded properties and values.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select rulings.text , cards.hascontentwarning from rulings inner join cards on rulings.uuid = cards.uuid where cards.artist = 'Jim Pavelec'\n\nIs the SQL semantically correct?"}
{"id": 1538, "question": "In the 2015–2016 season, how many games were played in the Italian Serie A league?", "sql": "select sum(case when match.season = '2015/2016' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.country_id = 'I' and league.name = 'Serie A'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the 2015–2016 season, how many games were played in the Italian Serie A league?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select sum(case when match.season = '2015/2016' then 1 else 0 end) from match inner join league on match.league_id = league.id where league.country_id = 'I' and league.name = 'Serie A'\n\nIs the SQL semantically correct?"}
{"id": 1295, "question": "From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?", "sql": "select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From 2000 to 2005, what percentage of drivers who were born before 1985 and the lap numbers were over 50?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when drivers.dob < 1985 then 1 else 0 end) as real) * 100 / count(drivers.driverid) from drivers inner join laptimes on drivers.driverid = laptimes.driverid where strftime('%Y' , laptimes.lap) between 2000 and 2005 and laptimes.lap > 50\n\nIs the SQL semantically correct?"}
{"id": 328, "question": "What is the percentage of carcinogenic molecules in triple type bonds?", "sql": "select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of carcinogenic molecules in triple type bonds?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when bond.bond_type = '#' then 1 else 0 end) as real) * 100 / count(bond.bond_id) from bond inner join molecule on bond.molecule_id = molecule.molecule_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 1283, "question": "What is the average time in seconds of champion for each year, before year 1975?", "sql": "SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average time in seconds of champion for each year, before year 1975?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT avg(cast(substr(results.time, 3, length(results.time) - 6) AS REAL)) FROM races INNER JOIN results ON races.raceid = results.raceid GROUP BY races.year\n\nIs the SQL semantically correct?"}
{"id": 625, "question": "Name the foreign name of the card that has boros watermark? List out the type of this card.", "sql": "SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the foreign name of the card that has boros watermark? List out the type of this card.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT foreign_data.name, cards.type FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE cards.watermark = 'boros'\n\nIs the SQL semantically correct?"}
{"id": 94, "question": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs", "sql": "SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.admfname1, schools.admlname1, schools.school, schools.city FROM schools INNER JOIN frpm ON schools.cdscode = frpm.`charter school number` WHERE frpm.`charter school number` = '00D2'\n\nIs the SQL semantically correct?"}
{"id": 1654, "question": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.", "sql": "SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT T1.Admission FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.SEX = 'F' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0) AND (strftime('%Y', 'now') - strftime('%Y', T1.Birthday)) >= 50\n\nIs the SQL semantically correct?"}
{"id": 179, "question": "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.", "sql": "select client.client_id , account.account_id , account.frequency from district inner join account on district.district_id = account.district_id inner join client on district.district_id = client.district_id where district.a3 = 'east Bohemia' and account.date between 1995 and 2000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id , account.account_id , account.frequency from district inner join account on district.district_id = account.district_id inner join client on district.district_id = client.district_id where district.a3 = 'east Bohemia' and account.date between 1995 and 2000\n\nIs the SQL semantically correct?"}
{"id": 1029, "question": "What is the percentage of blue female superheroes among all female superheroes?", "sql": "select cast(sum(case when colour.colour = 'Blue' then 1 else 0 end) as real) * 100 / count(*) from colour inner join superhero on colour.id = superhero.skin_colour_id inner join gender on superhero.gender_id = gender.id", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of blue female superheroes among all female superheroes?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select cast(sum(case when colour.colour = 'Blue' then 1 else 0 end) as real) * 100 / count(*) from colour inner join superhero on colour.id = superhero.skin_colour_id inner join gender on superhero.gender_id = gender.id\n\nIs the SQL semantically correct?"}
{"id": 12, "question": "Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.", "sql": "SELECT schools.school FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 > 500 AND schools.magnet = 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the schools with the SAT test takers of over 500, please list the schools that are magnet schools or offer a magnet program.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.school FROM schools INNER JOIN satscores ON schools.cdscode = satscores.cds WHERE satscores.numge1500 > 500 AND schools.magnet = 1\n\nIs the SQL semantically correct?"}
{"id": 611, "question": "How many sets are available just in Japanese and not in Magic: The Gathering Online?", "sql": "select count(sets.code) from sets inner join set_translations on sets.code = set_translations.setcode inner join foreign_data on set_translations.id = foreign_data.id where foreign_data.language = 'Japanese' and sets.mtgocode is null or sets.mtgocode = ''", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many sets are available just in Japanese and not in Magic: The Gathering Online?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select count(sets.code) from sets inner join set_translations on sets.code = set_translations.setcode inner join foreign_data on set_translations.id = foreign_data.id where foreign_data.language = 'Japanese' and sets.mtgocode is null or sets.mtgocode = ''\n\nIs the SQL semantically correct?"}
{"id": 460, "question": "How many bonds are created by bonding atoms with chlorine element?", "sql": "SELECT count(bond.bond_id) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bonds are created by bonding atoms with chlorine element?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(bond.bond_id) FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'cl'\n\nIs the SQL semantically correct?"}
{"id": 1187, "question": "Name the driver with the most winning. Mention his nationality and what is his maximum point scores.", "sql": "select drivers.nationality , drivers.surname , avg(driverstandings.points) from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid group by drivers.driverid order by count(driverstandings.wins) desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name the driver with the most winning. Mention his nationality and what is his maximum point scores.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.nationality , drivers.surname , avg(driverstandings.points) from drivers inner join driverstandings on drivers.driverid = driverstandings.driverid group by drivers.driverid order by count(driverstandings.wins) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 26, "question": "Which active district has the highest average score in Reading?", "sql": "select schools.district from schools inner join satscores on schools.cdscode = satscores.cds where schools.statustype = 'Active' and schools.admlname1 = 'Reading' order by satscores.avgscrread desc limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which active district has the highest average score in Reading?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.district from schools inner join satscores on schools.cdscode = satscores.cds where schools.statustype = 'Active' and schools.admlname1 = 'Reading' order by satscores.avgscrread desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1530, "question": "What percentage of players have a strength and stamina score of more than 80?", "sql": "select cast(sum(case when player_attributes.stamina > 80 then 1 else 0 end) as real) * 100 / count(player.player_name) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of players have a strength and stamina score of more than 80?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select cast(sum(case when player_attributes.stamina > 80 then 1 else 0 end) as real) * 100 / count(player.player_name) from player_attributes inner join player on player_attributes.player_api_id = player.player_api_id\n\nIs the SQL semantically correct?"}
{"id": 1772, "question": "How many majors are there in \"College of Humanities and Social Sciences\"?", "sql": "SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many majors are there in \"College of Humanities and Social Sciences\"?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT COUNT(major_id) FROM major WHERE college = 'College of Humanities and Social Sciences'\n\nIs the SQL semantically correct?"}
{"id": 1279, "question": "Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.", "sql": "select cast(sum(case when races.time is not null then 1 else 0 end) as real) * 100 / count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year between 2007 and 2009", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please calculate the race completion percentage of Japanese drivers from 2007 to 2009.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast(sum(case when races.time is not null then 1 else 0 end) as real) * 100 / count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where races.year between 2007 and 2009\n\nIs the SQL semantically correct?"}
{"id": 1367, "question": "Please list the lap records for the circuits in Italy.", "sql": "select laptimes.time from circuits inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy' order by laptimes.lap desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the lap records for the circuits in Italy.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select laptimes.time from circuits inner join races on circuits.circuitid = races.circuitid inner join laptimes on races.raceid = laptimes.raceid where circuits.country = 'Italy' order by laptimes.lap desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1572, "question": "How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?", "sql": "select count(*) from patient where strftime('%Y' , admission) = '1997' and sex = 'F' and description = 'Inpatient'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many female patients who came at the hospital in 1997 was immediately followed at the outpatient clinic?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(*) from patient where strftime('%Y' , admission) = '1997' and sex = 'F' and description = 'Inpatient'\n\nIs the SQL semantically correct?"}
{"id": 789, "question": "Give the number of \"Revival\" badges.", "sql": "SELECT count(id) FROM badges WHERE name = 'Revival'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the number of \"Revival\" badges.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(id) FROM badges WHERE name = 'Revival'\n\nIs the SQL semantically correct?"}
{"id": 165, "question": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?", "sql": "select client.birth_date from client inner join loan on client.district_id = loan.account_id where loan.amount = 98832 and loan.date = '1996-01-03'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.birth_date from client inner join loan on client.district_id = loan.account_id where loan.amount = 98832 and loan.date = '1996-01-03'\n\nIs the SQL semantically correct?"}
{"id": 1265, "question": "How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?", "sql": "select cast((races.time - results.time) as real) * 100 / results.driverid from results inner join races on results.raceid = races.raceid inner join driverstandings on results.driverid = driverstandings.driverid where races.year = 2008 and races.name = 'Australian Grand Prix' order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much faster in percentage is the champion than the driver who finished the race last in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select cast((races.time - results.time) as real) * 100 / results.driverid from results inner join races on results.raceid = races.raceid inner join driverstandings on results.driverid = driverstandings.driverid where races.year = 2008 and races.name = 'Australian Grand Prix' order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1938, "question": "What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?", "sql": "SELECT sum(CASE WHEN customers.segment = 'SME' THEN yearmonth.consumption ELSE 0 END) - sum(CASE WHEN customers.segment = 'LAM' THEN yearmonth.consumption ELSE 0 END) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'CZK' AND substr(yearmonth.date, 1, 4) = '2013'", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the difference in the annual average consumption of the customers with the least amount of consumption paid in CZK for 2013 between SME and LAM, LAM and KAM, and KAM and SME?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(CASE WHEN customers.segment = 'SME' THEN yearmonth.consumption ELSE 0 END) - sum(CASE WHEN customers.segment = 'LAM' THEN yearmonth.consumption ELSE 0 END) FROM customers INNER JOIN yearmonth ON customers.customerid = yearmonth.customerid WHERE customers.currency = 'CZK' AND substr(yearmonth.date, 1, 4) = '2013'\n\nIs the SQL semantically correct?"}
{"id": 1252, "question": "What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?", "sql": "select results.time from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and results.rank = 2 order by results.time desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the finish time for the driver who ranked second in 2008's AustChineseralian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select results.time from results inner join races on results.raceid = races.raceid where races.name = 'Australian Grand Prix' and results.rank = 2 order by results.time desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1628, "question": "Sort in descending order all patients by birthday for male patient with albumin not within range.", "sql": "select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.alb < 3.5 or laboratory.alb >= 5.5 order by patient.birthday asc", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Sort in descending order all patients by birthday for male patient with albumin not within range.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.birthday from patient inner join laboratory on patient.id = laboratory.id where patient.sex = 'M' and laboratory.alb < 3.5 or laboratory.alb >= 5.5 order by patient.birthday asc\n\nIs the SQL semantically correct?"}
{"id": 1250, "question": "Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?", "sql": "SELECT results.fastestlap FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was the fastest lap for Lewis Hamilton in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.fastestlap FROM drivers INNER JOIN results ON drivers.driverid = results.driverid INNER JOIN races ON results.raceid = races.raceid WHERE races.year = 2008 AND drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 512, "question": "State the alternative languages available for card named Annul numbered 29.", "sql": "select set_translations.language from cards inner join set_translations on cards.id = set_translations.id where cards.name = 'annul' and cards.number = 29", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the alternative languages available for card named Annul numbered 29.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select set_translations.language from cards inner join set_translations on cards.id = set_translations.id where cards.name = 'annul' and cards.number = 29\n\nIs the SQL semantically correct?"}
{"id": 112, "question": "Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.", "sql": "select county , sum(virtual) from schools where county in ('San Diego' , 'Santa Barbara') group by county order by count(virtual) desc limit 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Between San Diego and Santa Barbara, which county offers the most number of schools that does not offer physical building? Indicate the amount.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select county , sum(virtual) from schools where county in ('San Diego' , 'Santa Barbara') group by county order by count(virtual) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1662, "question": "For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.", "sql": "select distinct patient.id from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 50 and laboratory.plt > 100 and laboratory.plt <= 400", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For laboratory examinations take in 1984, list all patients below 50 years old with normal platelet level.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.id from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , laboratory.date) - strftime('%Y' , patient.birthday) < 50 and laboratory.plt > 100 and laboratory.plt <= 400\n\nIs the SQL semantically correct?"}
{"id": 1954, "question": "What percentage of KAM customers pay in euros?", "sql": "SELECT CAST(SUM(CASE WHEN Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Segment) FROM customers WHERE Segment = 'KAM'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of KAM customers pay in euros?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT CAST(SUM(CASE WHEN Currency = 'Euro' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(Segment) FROM customers WHERE Segment = 'KAM'\n\nIs the SQL semantically correct?"}
{"id": 303, "question": "What elements are in the TR004_8_9 bond atoms?", "sql": "SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR004_8_9'", "db_id": "toxicology", "label": true, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What elements are in the TR004_8_9 bond atoms?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T2.element FROM connected AS T1 INNER JOIN atom AS T2 ON T1.atom_id = T2.atom_id WHERE T1.bond_id = 'TR004_8_9'\n\nIs the SQL semantically correct?"}
{"id": 1112, "question": "Please list the year during which the race is held on circuits in Shanghai.", "sql": "select distinct races.year from races inner join circuits on races.circuitid = circuits.circuitid where circuits.location = 'Shanghai'", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the year during which the race is held on circuits in Shanghai.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.year from races inner join circuits on races.circuitid = circuits.circuitid where circuits.location = 'Shanghai'\n\nIs the SQL semantically correct?"}
{"id": 149, "question": "List out the accounts who have the earliest trading date in 1995 ?", "sql": "select account.account_id from account inner join trans on account.account_id = trans.account_id where strftime('%Y' , trans.date) = '1995' order by account.date asc limit 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the accounts who have the earliest trading date in 1995 ?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from account inner join trans on account.account_id = trans.account_id where strftime('%Y' , trans.date) = '1995' order by account.date asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 166, "question": "For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?", "sql": "SELECT T3.birth_date FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the client who applied 98832 USD loan in 1996/1/3, when was his/her birthday?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T3.birth_date FROM disp AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.amount = 98832 AND T2.date = '1996-01-03'\n\nIs the SQL semantically correct?"}
{"id": 1985, "question": "Which customer paid the most in 2012/8/25?", "sql": "select customerid from transactions_1k where date = '2012-08-25' order by amount desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which customer paid the most in 2012/8/25?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customerid from transactions_1k where date = '2012-08-25' order by amount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 224, "question": "What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?", "sql": "select avg(district.a15) from account inner join district on account.district_id = district.district_id where district.a3 between 4000 and 4999 and account.date between 1997 and 2000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average number of crimes committed in 1995 in regions where the number exceeds 4000 and the region has accounts that are opened starting from the year 1997?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select avg(district.a15) from account inner join district on account.district_id = district.district_id where district.a3 between 4000 and 4999 and account.date between 1997 and 2000\n\nIs the SQL semantically correct?"}
{"id": 389, "question": "What is the composition of element chlorine in percentage among the single bond molecules?", "sql": "SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the composition of element chlorine in percentage among the single bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.element = 'cl' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id INNER JOIN bond AS T3 ON T2.bond_id = T3.bond_id WHERE T3.bond_type = '-'\n\nIs the SQL semantically correct?"}
{"id": 79, "question": "Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.", "sql": "select mailzip from schools where admfname1 = 'Avetik' and admlname2 = 'Atoian'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please specify all of the schools and their related mailing zip codes that are under Avetik Atoian's administration.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select mailzip from schools where admfname1 = 'Avetik' and admlname2 = 'Atoian'\n\nIs the SQL semantically correct?"}
{"id": 1429, "question": "Who has the highest average finishing rate between the highest and shortest football player?", "sql": "SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) AND T2.finishing IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who has the highest average finishing rate between the highest and shortest football player?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_api_id FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T1.height IN (SELECT MAX(height) FROM Player UNION SELECT MIN(height) FROM Player) AND T2.finishing IS NOT NULL GROUP BY T1.player_api_id ORDER BY AVG(T2.finishing) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1603, "question": "What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?", "sql": "SELECT count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 2 AND examination.`ana pattern` = 'S' AND examination.`acl igm` * 1.2 > ( SELECT avg(examination.`acl igm`) FROM patient INNER JOIN examination ON patient.id = examination.id )", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What number of patients with a degree of thrombosis level 2 and ANA pattern of only S, have a level of anti-Cardiolip in antibody (IgM) 20% higher than average?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(patient.id) FROM patient INNER JOIN examination ON patient.id = examination.id WHERE examination.thrombosis = 2 AND examination.`ana pattern` = 'S' AND examination.`acl igm` * 1.2 > ( SELECT avg(examination.`acl igm`) FROM patient INNER JOIN examination ON patient.id = examination.id )\n\nIs the SQL semantically correct?"}
{"id": 115, "question": "What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.", "sql": "select school type , school name , latitude from schools where latitude = ( select max(latitude) from schools )", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the school type of the school with the highest latitude? Indicate the name of the school as well as the latitude coordinates.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select school type , school name , latitude from schools where latitude = ( select max(latitude) from schools )\n\nIs the SQL semantically correct?"}
{"id": 1892, "question": "Among the members who incurred expenses in more than one event, who paid the most amount?", "sql": "select member.first_name , member.last_name from event inner join attendance on event.event_id = attendance.link_to_event inner join member on attendance.link_to_member = member.member_id group by member.first_name , member.last_name order by count(attendance.link_to_member) desc limit 1", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the members who incurred expenses in more than one event, who paid the most amount?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name from event inner join attendance on event.event_id = attendance.link_to_event inner join member on attendance.link_to_member = member.member_id group by member.first_name , member.last_name order by count(attendance.link_to_member) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1971, "question": "Please list the chains of the gas stations with transactions in euro.", "sql": "SELECT DISTINCT T3.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'Euro'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the chains of the gas stations with transactions in euro.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT DISTINCT T3.ChainID FROM customers AS T1 INNER JOIN transactions_1k AS T2 ON T1.CustomerID = T2.CustomerID INNER JOIN gasstations AS T3 ON T2.GasStationID = T3.GasStationID WHERE T1.Currency = 'Euro'\n\nIs the SQL semantically correct?"}
{"id": 980, "question": "Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?", "sql": "SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the superheroes with blue eyes, how many of them have the super power of \"Agility\"?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT COUNT(T1.id) FROM superhero AS T1 INNER JOIN colour AS T2 ON T1.eye_colour_id = T2.id INNER JOIN hero_power AS T3 ON T1.id = T3.hero_id INNER JOIN superpower AS T4 ON T3.power_id = T4.id WHERE T2.colour = 'Blue' AND T4.power_name = 'Agility'\n\nIs the SQL semantically correct?"}
{"id": 1456, "question": "Which player is older, Aaron Lennon or Abdelaziz Barrada?", "sql": "SELECT player_name FROM player WHERE birthday = ( SELECT max(birthday) FROM player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' )", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which player is older, Aaron Lennon or Abdelaziz Barrada?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_name FROM player WHERE birthday = ( SELECT max(birthday) FROM player WHERE player_name = 'Aaron Lennon' OR player_name = 'Abdelaziz Barrada' )\n\nIs the SQL semantically correct?"}
{"id": 1696, "question": "Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?", "sql": "select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.sex = 'M' and laboratory.sc170 in ('-' , '+-') and examination.symptoms = 'vertigo'", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who has a normal anti-scl70, how many of them are female and does not have any symptom?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select count(distinct patient.id) from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where patient.sex = 'M' and laboratory.sc170 in ('-' , '+-') and examination.symptoms = 'vertigo'\n\nIs the SQL semantically correct?"}
{"id": 1514, "question": "Locate players with vision scores of 90 and above, state the country of these players.", "sql": "SELECT T1.player_name, T2.vision FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.vision > 89", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Locate players with vision scores of 90 and above, state the country of these players.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_name, T2.vision FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.vision > 89\n\nIs the SQL semantically correct?"}
{"id": 890, "question": "Describe the last accessed date and location of the users who received the outliers badge.", "sql": "SELECT users.lastaccessdate, users.location FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.name = 'Outliers'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Describe the last accessed date and location of the users who received the outliers badge.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT users.lastaccessdate, users.location FROM users INNER JOIN badges ON users.id = badges.userid WHERE badges.name = 'Outliers'\n\nIs the SQL semantically correct?"}
{"id": 87, "question": "What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.", "sql": "select phone , ext from schools where zip = '95203-3704'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the phone number and extension number for the school with the zip code 95203-3704? Indicate the school's name.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select phone , ext from schools where zip = '95203-3704'\n\nIs the SQL semantically correct?"}
{"id": 1788, "question": "What percentage was the budget for Parking to the total budget for the \"November Speaker\"?", "sql": "select cast(sum(case when budget.category = 'Parking' then budget.amount else 0 end) as real) * 100 / sum(budget.amount) from budget inner join event on budget.link_to_event = event.event_id", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage was the budget for Parking to the total budget for the \"November Speaker\"?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select cast(sum(case when budget.category = 'Parking' then budget.amount else 0 end) as real) * 100 / sum(budget.amount) from budget inner join event on budget.link_to_event = event.event_id\n\nIs the SQL semantically correct?"}
{"id": 621, "question": "List out the set name of the set code \"ALL\".", "sql": "select distinct sets.name from cards inner join set_translations on cards.id = set_translations.id inner join sets on set_translations.setcode = sets.code where set_translations.setcode = 'ALL'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the set name of the set code \"ALL\".\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct sets.name from cards inner join set_translations on cards.id = set_translations.id inner join sets on set_translations.setcode = sets.code where set_translations.setcode = 'ALL'\n\nIs the SQL semantically correct?"}
{"id": 89, "question": "What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?", "sql": "select website from schools where admfname1 = 'Mike' and admlname1 = 'Dante'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the website for the schools under the administrations of Mike Larson and Dante Alvarez?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select website from schools where admfname1 = 'Mike' and admlname1 = 'Dante'\n\nIs the SQL semantically correct?"}
{"id": 784, "question": "What is the average score of the posts owned by the user csgillespie?", "sql": "SELECT avg(posts.score) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average score of the posts owned by the user csgillespie?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT avg(posts.score) FROM users INNER JOIN posts ON users.id = posts.owneruserid WHERE users.displayname = 'csgillespie'\n\nIs the SQL semantically correct?"}
{"id": 445, "question": "What atoms comprise TR186?", "sql": "SELECT element FROM atom WHERE molecule_id = 'TR186'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What atoms comprise TR186?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT element FROM atom WHERE molecule_id = 'TR186'\n\nIs the SQL semantically correct?"}
{"id": 1408, "question": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.", "sql": "SELECT team.team_long_name FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date LIKE '2014%' AND team_attributes.buildupplaydribblingclass = 'Normal' ORDER BY team_attributes.chancecreationpassing DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT team.team_long_name FROM team_attributes INNER JOIN team ON team_attributes.team_api_id = team.team_api_id WHERE team_attributes.date LIKE '2014%' AND team_attributes.buildupplaydribblingclass = 'Normal' ORDER BY team_attributes.chancecreationpassing DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 413, "question": "Identify whether the chemical compound that contains Calcium is carcinogenic.", "sql": "select case when molecule.label = '+' then 'YES' else 'NO' end as yorn from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'ca'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify whether the chemical compound that contains Calcium is carcinogenic.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select case when molecule.label = '+' then 'YES' else 'NO' end as yorn from molecule inner join atom on molecule.molecule_id = atom.molecule_id where atom.element = 'ca'\n\nIs the SQL semantically correct?"}
{"id": 846, "question": "What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?", "sql": "SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720 GROUP BY T1.PostHistoryTypeId", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the post history type IDs for post ID 3720 and how many unique users have commented on the post?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.PostHistoryTypeId, COUNT(DISTINCT T2.UserId) FROM postHistory AS T1 INNER JOIN comments AS T2 ON T1.PostId = T2.PostId WHERE T1.PostId = 3720 GROUP BY T1.PostHistoryTypeId\n\nIs the SQL semantically correct?"}
{"id": 817, "question": "List the title of posts which were edited by Vebjorn Ljosa.", "sql": "SELECT posts.title FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE posthistory.userdisplayname = 'Vebjorn Ljosa'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the title of posts which were edited by Vebjorn Ljosa.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT posts.title FROM posts INNER JOIN posthistory ON posts.id = posthistory.postid WHERE posthistory.userdisplayname = 'Vebjorn Ljosa'\n\nIs the SQL semantically correct?"}
{"id": 2005, "question": "For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?", "sql": "select cast(yearmonth.consumption as real) * 100 / yearmonth.consumption from yearmonth inner join transactions_1k on yearmonth.customerid = transactions_1k.customerid where transactions_1k.date = '2012-08-25' and transactions_1k.amount = 634.8", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 634.8 in 2012/8/25, what was the consumption decrease rate from Year 2012 to 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select cast(yearmonth.consumption as real) * 100 / yearmonth.consumption from yearmonth inner join transactions_1k on yearmonth.customerid = transactions_1k.customerid where transactions_1k.date = '2012-08-25' and transactions_1k.amount = 634.8\n\nIs the SQL semantically correct?"}
{"id": 1103, "question": "In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.", "sql": "SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Brown' AND superhero.weight_kg < 100", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In superheroes with weight less than 100, list the full name of the superheroes with brown eyes.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superhero.full_name FROM superhero INNER JOIN colour ON superhero.eye_colour_id = colour.id WHERE colour.colour = 'Brown' AND superhero.weight_kg < 100\n\nIs the SQL semantically correct?"}
{"id": 1398, "question": "List the players' api id who had the highest above average overall ratings in 2010.", "sql": "SELECT player_api_id FROM Player_Attributes WHERE date LIKE '2010%' AND overall_rating > ( SELECT AVG(overall_rating) FROM Player_Attributes WHERE date LIKE '2010%' )", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the players' api id who had the highest above average overall ratings in 2010.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_api_id FROM Player_Attributes WHERE date LIKE '2010%' AND overall_rating > ( SELECT AVG(overall_rating) FROM Player_Attributes WHERE date LIKE '2010%' )\n\nIs the SQL semantically correct?"}
{"id": 1821, "question": "Which event has the lowest cost?", "sql": "select event.event_name from expense inner join event on expense.expense_id = event.event_id order by expense.cost asc limit 1", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which event has the lowest cost?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select event.event_name from expense inner join event on expense.expense_id = event.event_id order by expense.cost asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1445, "question": "List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.", "sql": "select team.team_short_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.buildupplayspeed = 31 and team_attributes.buildupplaydribbling = 53 and team_attributes.buildupplaypassing = 32", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the football team that has a build up play speed of 31, build up plan dribbling of 53, and build up play passing of 32. Only indicate the short name of the team.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select team.team_short_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.buildupplayspeed = 31 and team_attributes.buildupplaydribbling = 53 and team_attributes.buildupplaypassing = 32\n\nIs the SQL semantically correct?"}
{"id": 35, "question": "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?", "sql": "SELECT count(schools.school) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'Los Angeles' AND frpm.`free meal count (k-12)` BETWEEN 500 AND 700", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT count(schools.school) FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE schools.city = 'Los Angeles' AND frpm.`free meal count (k-12)` BETWEEN 500 AND 700\n\nIs the SQL semantically correct?"}
{"id": 54, "question": "What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?", "sql": "SELECT schools.website FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.numtsttakr BETWEEN 2000 AND 3000", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the webpages for the Los Angeles County school that has between 2,000 and 3,000 test takers?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.website FROM satscores INNER JOIN schools ON satscores.cds = schools.cdscode WHERE satscores.numtsttakr BETWEEN 2000 AND 3000\n\nIs the SQL semantically correct?"}
{"id": 1726, "question": "Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.", "sql": "SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the patient's ID if he or she has an abnormal level of red blood cell and is followed at the outpatient clinic.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT DISTINCT T1.ID FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T1.Admission = '-' AND (T2.RBC <= 3.5 OR T2.RBC >= 6.0)\n\nIs the SQL semantically correct?"}
{"id": 820, "question": "What is the total score of the posts edited by Yevgeny and include the user's website URL.", "sql": "SELECT SUM(T2.Score), T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Yevgeny'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total score of the posts edited by Yevgeny and include the user's website URL.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT SUM(T2.Score), T1.WebsiteUrl FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.LastEditorUserId WHERE T1.DisplayName = 'Yevgeny'\n\nIs the SQL semantically correct?"}
{"id": 1213, "question": "Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?", "sql": "select circuits.name from circuits inner join races on circuits.circuitid = races.circuitid where circuits.name in ('Silverstone Circuit' , 'Hockenheimring' , 'Hungaroring') order by circuits.lat desc limit 1", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of these circuits is located at a higher latitude, Silverstone Circuit, Hockenheimring or Hungaroring?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select circuits.name from circuits inner join races on circuits.circuitid = races.circuitid where circuits.name in ('Silverstone Circuit' , 'Hockenheimring' , 'Hungaroring') order by circuits.lat desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1694, "question": "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.", "sql": "select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.sm in ('-' , '+-') order by patient.birthday desc limit 3", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select patient.id from patient inner join laboratory on patient.id = laboratory.id where laboratory.sm in ('-' , '+-') order by patient.birthday desc limit 3\n\nIs the SQL semantically correct?"}
{"id": 248, "question": "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?", "sql": "SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 > 10000", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.gender = 'F' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.gender) FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN account AS T3 ON T2.account_id = T3.account_id INNER JOIN district AS T4 ON T3.district_id = T4.district_id WHERE T4.A11 > 10000\n\nIs the SQL semantically correct?"}
{"id": 1062, "question": "What is the power ID of cryokinesis?", "sql": "select id from superpower where power_name = 'cryokinesis'", "db_id": "superhero", "label": false, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the power ID of cryokinesis?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select id from superpower where power_name = 'cryokinesis'\n\nIs the SQL semantically correct?"}
{"id": 37, "question": "Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?", "sql": "select schools.school , schools.fundingtype from schools inner join frpm on schools.cdscode = frpm.cdscode inner join satscores on satscores.cds = frpm.cdscode where satscores.cname = 'Riverside' and satscores.avgscrmath > 400 group by schools.school having avg(satscores.avgscrmath) > 400", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name schools in Riverside which the average of average math score for SAT is grater than 400, what is the funding type of these schools?\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.school , schools.fundingtype from schools inner join frpm on schools.cdscode = frpm.cdscode inner join satscores on satscores.cds = frpm.cdscode where satscores.cname = 'Riverside' and satscores.avgscrmath > 400 group by schools.school having avg(satscores.avgscrmath) > 400\n\nIs the SQL semantically correct?"}
{"id": 778, "question": "How many badges has the user csgillespie obtained?", "sql": "SELECT count(badges.name) FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.displayname = 'csgillespie'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many badges has the user csgillespie obtained?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT count(badges.name) FROM users INNER JOIN badges ON users.id = badges.userid WHERE users.displayname = 'csgillespie'\n\nIs the SQL semantically correct?"}
{"id": 641, "question": "What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?", "sql": "select subtypes , supertypes from cards where name = 'Molimo , Maro-Sorcerer'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the list of all types for the card \"Molimo, Maro-Sorcerer\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select subtypes , supertypes from cards where name = 'Molimo , Maro-Sorcerer'\n\nIs the SQL semantically correct?"}
{"id": 1095, "question": "Identify the weakest attribute of the Black Panther.", "sql": "select attribute.attribute_name from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where superhero.superhero_name = 'Black Panther' order by hero_attribute.attribute_value asc limit 1", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the weakest attribute of the Black Panther.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select attribute.attribute_name from superhero inner join hero_attribute on superhero.id = hero_attribute.hero_id inner join attribute on attribute.id = hero_attribute.attribute_id where superhero.superhero_name = 'Black Panther' order by hero_attribute.attribute_value asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1543, "question": "Which top 4 leagues had the most games in the 2015-2016 season?", "sql": "SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which top 4 leagues had the most games in the 2015-2016 season?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T2.name FROM Match AS T1 INNER JOIN League AS T2 ON T1.league_id = T2.id WHERE T1.season = '2015/2016' GROUP BY T2.name ORDER BY COUNT(T1.id) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1605, "question": "What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?", "sql": "SELECT cast(sum(CASE WHEN laboratory.ua <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / count(laboratory.id) FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.`u-pro` BETWEEN 0 AND 30", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What percentage of patients with a proteinuria level within the normal range have a uric acid level below the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(CASE WHEN laboratory.ua <= 6.5 THEN 1 ELSE 0 END) AS REAL) * 100 / count(laboratory.id) FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.`u-pro` BETWEEN 0 AND 30\n\nIs the SQL semantically correct?"}
{"id": 517, "question": "List all the sets available in Italian translation. State the total number of cards per set.", "sql": "SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all the sets available in Italian translation. State the total number of cards per set.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT T1.name, T1.totalSetSize FROM sets AS T1 INNER JOIN set_translations AS T2 ON T1.code = T2.setCode WHERE T2.language = 'Italian'\n\nIs the SQL semantically correct?"}
{"id": 471, "question": "Among the molecules which contain \"c\" element, which of them are not carcinogenic?", "sql": "select molecule.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'C' and molecule.label = '-'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the molecules which contain \"c\" element, which of them are not carcinogenic?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select molecule.molecule_id from atom inner join molecule on atom.molecule_id = molecule.molecule_id where atom.element = 'C' and molecule.label = '-'\n\nIs the SQL semantically correct?"}
{"id": 695, "question": "For the set which had 'SS2' as the code, what is its magic card market id?", "sql": "SELECT mcmId FROM sets WHERE code = 'SS2'", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the set which had 'SS2' as the code, what is its magic card market id?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT mcmId FROM sets WHERE code = 'SS2'\n\nIs the SQL semantically correct?"}
{"id": 93, "question": "In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs", "sql": "select schools.admfname1 , schools.city from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.charternum = '00D2'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In chartered schools with charter number 00D2, what are the names of all the administrators? Include the name of the school and the city to which it belongs\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.admfname1 , schools.city from schools inner join frpm on schools.cdscode = frpm.cdscode where schools.charternum = '00D2'\n\nIs the SQL semantically correct?"}
{"id": 1348, "question": "As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.", "sql": "select drivers.forename , drivers.nationality , races.name from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid order by drivers.dob desc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: As of the present, what is the full name of the youngest racer? Indicate her nationality and the name of the race to which he/she first joined.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select drivers.forename , drivers.nationality , races.name from drivers inner join results on drivers.driverid = results.driverid inner join races on results.raceid = races.raceid order by drivers.dob desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1459, "question": "Which player is the tallest?", "sql": "SELECT id FROM Player ORDER BY height DESC LIMIT 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which player is the tallest?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT id FROM Player ORDER BY height DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 648, "question": "What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?", "sql": "select foreign_data.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Italian'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the Italian name of the set of cards with \"Ancestor's Chosen\" is in?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select foreign_data.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Ancestor''s Chosen' and foreign_data.language = 'Italian'\n\nIs the SQL semantically correct?"}
{"id": 144, "question": "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.", "sql": "SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE strftime('%Y', loan.date) = '1993' AND loan.duration > 12 ORDER BY loan.amount DESC LIMIT 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT account.account_id FROM loan INNER JOIN account ON loan.account_id = account.account_id WHERE strftime('%Y', loan.date) = '1993' AND loan.duration > 12 ORDER BY loan.amount DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1184, "question": "What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?", "sql": "select avg(laptimes.time) from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on results.raceid = races.raceid where drivers.forename = 'Sebastian' and drivers.surname = 'Vettel' and races.year = 2009", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average lap time for Lewis Hamilton in the 2009 Malaysian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select avg(laptimes.time) from drivers inner join results on drivers.driverid = results.driverid inner join laptimes on results.driverid = laptimes.driverid inner join races on results.raceid = races.raceid where drivers.forename = 'Sebastian' and drivers.surname = 'Vettel' and races.year = 2009\n\nIs the SQL semantically correct?"}
{"id": 862, "question": "List out the age of users who located in Vienna, Austria obtained the badge?", "sql": "select users.age from users inner join badges on users.id = badges.userid where users.location = 'Vienna , Austria'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List out the age of users who located in Vienna, Austria obtained the badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.age from users inner join badges on users.id = badges.userid where users.location = 'Vienna , Austria'\n\nIs the SQL semantically correct?"}
{"id": 324, "question": "Identify all the atoms that are connected to the atoms of the TR181 molecule.", "sql": "SELECT DISTINCT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify all the atoms that are connected to the atoms of the TR181 molecule.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT T2.atom_id2 FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.molecule_id = 'TR181'\n\nIs the SQL semantically correct?"}
{"id": 1968, "question": "Please list the countries of the gas stations with transactions taken place in June, 2013.", "sql": "select distinct gasstations.country from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where transactions_1k.date like '2013-06%'", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the countries of the gas stations with transactions taken place in June, 2013.\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select distinct gasstations.country from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid where transactions_1k.date like '2013-06%'\n\nIs the SQL semantically correct?"}
{"id": 1206, "question": "Which was Lewis Hamilton first race? What was his points recorded for his first race event?", "sql": "SELECT T3.year, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' ORDER BY T3.year LIMIT 1", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was Lewis Hamilton first race? What was his points recorded for his first race event?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.year, T1.points FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T2.surname = 'Hamilton' ORDER BY T3.year LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 2014, "question": "Which country had the gas station that sold the most expensive product id No.2 for one unit?", "sql": "SELECT gasstations.country FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid WHERE transactions_1k.productid = 2 ORDER BY transactions_1k.price DESC LIMIT 1", "db_id": "debit_card_specializing", "label": true, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which country had the gas station that sold the most expensive product id No.2 for one unit?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT gasstations.country FROM gasstations INNER JOIN transactions_1k ON gasstations.gasstationid = transactions_1k.gasstationid WHERE transactions_1k.productid = 2 ORDER BY transactions_1k.price DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 581, "question": "To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?", "sql": "select artist from cards where text = 'Das perfekte Gegenmittel zu einer dichten Formation.'", "db_id": "card_games", "label": false, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: To which artist does the card with the text \"Das perfekte Gegenmittel zu einer dichten Formation\" belong?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select artist from cards where text = 'Das perfekte Gegenmittel zu einer dichten Formation.'\n\nIs the SQL semantically correct?"}
{"id": 1260, "question": "How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?", "sql": "select sum(results.points) from results inner join driverstandings on results.driverid = driverstandings.driverid inner join drivers on driverstandings.driverid = drivers.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many points did Lewis Hamilton get in total in all the Formula_1 races he participated?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select sum(results.points) from results inner join driverstandings on results.driverid = driverstandings.driverid inner join drivers on driverstandings.driverid = drivers.driverid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis'\n\nIs the SQL semantically correct?"}
{"id": 1683, "question": "Please list the diseases of the patients born after 1985-1-1 and have a normal Rhuematoid Factor.", "sql": "select distinct patient.diagnosis from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , patient.birthday) >= '1995' and laboratory.ra in ('-' , '+-')", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the diseases of the patients born after 1985-1-1 and have a normal Rhuematoid Factor.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.diagnosis from patient inner join laboratory on patient.id = laboratory.id where strftime('%Y' , patient.birthday) >= '1995' and laboratory.ra in ('-' , '+-')\n\nIs the SQL semantically correct?"}
{"id": 1754, "question": "How much did the Student_Club members spend on food in September Meeting?", "sql": "SELECT sum(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'September Meeting' AND budget.category = 'Food' AND member.position = 'Member'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How much did the Student_Club members spend on food in September Meeting?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT sum(budget.spent) FROM budget INNER JOIN event ON budget.link_to_event = event.event_id INNER JOIN attendance ON event.event_id = attendance.link_to_event INNER JOIN member ON attendance.link_to_member = member.member_id WHERE event.event_name = 'September Meeting' AND budget.category = 'Food' AND member.position = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 1704, "question": "Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?", "sql": "SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the patients who have an abnormal level of glutamic oxaloacetic transaminase, when was the youngest of them born?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT MIN(T1.Birthday) FROM Patient AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.GOT >= 60\n\nIs the SQL semantically correct?"}
{"id": 282, "question": "How many clients who were born in 1920 stay in east Bohemia?", "sql": "SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'east Bohemia' AND client.birth_date LIKE '1920%'", "db_id": "financial", "label": true, "prediction": true, "response_raw": "yes", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many clients who were born in 1920 stay in east Bohemia?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT count(client.client_id) FROM client INNER JOIN district ON client.district_id = district.district_id WHERE district.a3 = 'east Bohemia' AND client.birth_date LIKE '1920%'\n\nIs the SQL semantically correct?"}
{"id": 1407, "question": "For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.", "sql": "select distinct team.team_long_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.chancecreationpassingclass = 'Normal' and team_attributes.date between '2014-01-01 00:00:00' and '2014-01-31 00:00:00' order by team_attributes.chancecreationpassing desc", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the teams with normal build-up play dribbling class in 2014, List the names of the teams with less than average chance creation passing, in descending order of chance creation passing.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select distinct team.team_long_name from team inner join team_attributes on team.id = team_attributes.team_api_id where team_attributes.chancecreationpassingclass = 'Normal' and team_attributes.date between '2014-01-01 00:00:00' and '2014-01-31 00:00:00' order by team_attributes.chancecreationpassing desc\n\nIs the SQL semantically correct?"}
{"id": 967, "question": "Among products comments with 0 score, what is the total number of users ages 40 years old?", "sql": "SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among products comments with 0 score, what is the total number of users ages 40 years old?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT COUNT(DISTINCT T1.UserId) FROM comments AS T1 INNER JOIN users AS T2 ON T1.UserId = T2.Id WHERE T1.Score = 0 AND T2.Age = 40\n\nIs the SQL semantically correct?"}
{"id": 1143, "question": "Who finished second in the San Marino Grand Prix in 2006?", "sql": "SELECT T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'San Marino Grand Prix' AND T3.year = 2006 AND T1.position = 2", "db_id": "formula_1", "label": false, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who finished second in the San Marino Grand Prix in 2006?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.surname FROM results AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId INNER JOIN races AS T3 ON T1.raceId = T3.raceId WHERE T3.name = 'San Marino Grand Prix' AND T3.year = 2006 AND T1.position = 2\n\nIs the SQL semantically correct?"}
{"id": 964, "question": "List the creation date and age of the user that commented with webiste.", "sql": "SELECT comments.creationdate, users.age FROM users INNER JOIN comments ON users.id = comments.userid WHERE users.websiteurl LIKE '%http://%'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the creation date and age of the user that commented with webiste.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT comments.creationdate, users.age FROM users INNER JOIN comments ON users.id = comments.userid WHERE users.websiteurl LIKE '%http://%'\n\nIs the SQL semantically correct?"}
{"id": 1182, "question": "What is the best lap time recorded? List the driver and race with such recorded lap time.", "sql": "SELECT laptimes.time, drivers.forename, drivers.surname, races.name FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid INNER JOIN races ON laptimes.raceid = races.raceid ORDER BY laptimes.time LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the best lap time recorded? List the driver and race with such recorded lap time.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT laptimes.time, drivers.forename, drivers.surname, races.name FROM laptimes INNER JOIN drivers ON laptimes.driverid = drivers.driverid INNER JOIN races ON laptimes.raceid = races.raceid ORDER BY laptimes.time LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1233, "question": "Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.", "sql": "SELECT races.url FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please give the link of the website that shows more information about the circuits the Spanish Grand Prix used in 2009.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT races.url FROM races INNER JOIN circuits ON races.circuitid = circuits.circuitid WHERE races.year = 2009 AND races.name = 'Spanish Grand Prix'\n\nIs the SQL semantically correct?"}
{"id": 1154, "question": "For the driver who set the fastest lap speed, what is his nationality?", "sql": "select distinct drivers.nationality from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.raceid = laptimes.raceid where results.raceid = 348", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the driver who set the fastest lap speed, what is his nationality?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct drivers.nationality from results inner join drivers on results.driverid = drivers.driverid inner join laptimes on results.raceid = laptimes.raceid where results.raceid = 348\n\nIs the SQL semantically correct?"}
{"id": 987, "question": "Which publisher published the slowest superhero?", "sql": "SELECT publisher.publisher_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which publisher published the slowest superhero?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT publisher.publisher_name FROM hero_attribute INNER JOIN superhero ON hero_attribute.hero_id = superhero.id INNER JOIN publisher ON superhero.publisher_id = publisher.id INNER JOIN attribute ON hero_attribute.attribute_id = attribute.id WHERE attribute.attribute_name = 'Speed' ORDER BY hero_attribute.attribute_value ASC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1948, "question": "Who among KAM's customers consumed the most? How much did it consume?", "sql": "select customers.customerid , yearmonth.consumption from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' group by customers.customerid order by sum(yearmonth.consumption) desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who among KAM's customers consumed the most? How much did it consume?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customers.customerid , yearmonth.consumption from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'KAM' group by customers.customerid order by sum(yearmonth.consumption) desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 818, "question": "What is the total score of the posts edited by Yevgeny and include the user's website URL.", "sql": "select sum(posts.score) , users.websiteurl from users inner join posts on users.id = posts.lasteditoruserid inner join comments on posts.id = comments.postid where users.displayname = 'Yevgeny'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the total score of the posts edited by Yevgeny and include the user's website URL.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select sum(posts.score) , users.websiteurl from users inner join posts on users.id = posts.lasteditoruserid inner join comments on posts.id = comments.postid where users.displayname = 'Yevgeny'\n\nIs the SQL semantically correct?"}
{"id": 1393, "question": "At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.", "sql": "select player.birthday - strftime('%Y' , player_attributes.date) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.sprint_speed >= 97 and player_attributes.date between '2013-01-01 00:00:00' and '2015-12-31 00:00:00'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: At present, calculate for the player's age who have a sprint speed of no less than 97 between 2013 to 2015.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.birthday - strftime('%Y' , player_attributes.date) from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.sprint_speed >= 97 and player_attributes.date between '2013-01-01 00:00:00' and '2015-12-31 00:00:00'\n\nIs the SQL semantically correct?"}
{"id": 1139, "question": "In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?", "sql": "SELECT T3.code FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.raceId = 45 AND T1.q3 = '0:01:33'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the race No. 45, for the driver who had the Q3 time as 0:01:33, what is his abbreviated code?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T3.code FROM qualifying AS T1 INNER JOIN races AS T2 ON T1.raceId = T2.raceId INNER JOIN drivers AS T3 ON T1.driverId = T3.driverId WHERE T2.raceId = 45 AND T1.q3 = '0:01:33'\n\nIs the SQL semantically correct?"}
{"id": 162, "question": "How many clients opened their accounts in Jesenik branch were women?", "sql": "SELECT COUNT(T1.district_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.A2 = 'Jesenik' AND T4.gender = 'F'", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many clients opened their accounts in Jesenik branch were women?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT COUNT(T1.district_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T1.A2 = 'Jesenik' AND T4.gender = 'F'\n\nIs the SQL semantically correct?"}
{"id": 1115, "question": "How many races in the year 2010 are held on grand prixs outside Asia and Europe?", "sql": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Asia', 'Europe')", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many races in the year 2010 are held on grand prixs outside Asia and Europe?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN circuits AS T2 ON T1.circuitId = T2.circuitId WHERE T1.year = 2010 AND T2.country NOT IN ('Asia', 'Europe')\n\nIs the SQL semantically correct?"}
{"id": 561, "question": "What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?", "sql": "select manacost from cards where frameversion = 2003 and availability = 'mtgo' and layout = 'normal' and bordercolor = 'black'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the mana cost of cards with a normal layout, a 2003 frame version, with a black border color, and available in paper and mtgo?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select manacost from cards where frameversion = 2003 and availability = 'mtgo' and layout = 'normal' and bordercolor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 770, "question": "Among the posts owned by csgillespie, how many of them are root posts?", "sql": "select count(posts.parentid) from posts inner join users on posts.owneruserid = users.id where users.displayname = 'csgillespie' and posts.parentid is null", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the posts owned by csgillespie, how many of them are root posts?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(posts.parentid) from posts inner join users on posts.owneruserid = users.id where users.displayname = 'csgillespie' and posts.parentid is null\n\nIs the SQL semantically correct?"}
{"id": 990, "question": "How many superheroes with blonde hair are there?", "sql": "SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many superheroes with blonde hair are there?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT count(superhero.id) FROM superhero INNER JOIN colour ON superhero.hair_colour_id = colour.id WHERE colour.colour = 'Blond'\n\nIs the SQL semantically correct?"}
{"id": 1351, "question": "What was the longest time a driver had ever spent at a pit stop?", "sql": "select max(pitstops.duration) from drivers inner join pitstops on drivers.driverid = pitstops.driverid", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the longest time a driver had ever spent at a pit stop?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select max(pitstops.duration) from drivers inner join pitstops on drivers.driverid = pitstops.driverid\n\nIs the SQL semantically correct?"}
{"id": 1991, "question": "For the earliest customer, what segment did he/she have?", "sql": "select segment from customers where customerid = ( select customerid from customers order by customerid asc limit 1 )", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the earliest customer, what segment did he/she have?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select segment from customers where customerid = ( select customerid from customers order by customerid asc limit 1 )\n\nIs the SQL semantically correct?"}
{"id": 1486, "question": "For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.", "sql": "select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating = 77 and player_attributes.date = '2016-06-23%' order by player.birthday asc limit 1", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the players who had a 77 points overall rating on 2016/6/23, who was the oldest? Give the name of the player.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select player.player_name from player inner join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating = 77 and player_attributes.date = '2016-06-23%' order by player.birthday asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1264, "question": "What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?", "sql": "SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 4, 2) AS REAL) * 60 + CAST(SUBSTR(T2.fastestLapTime, 7) AS REAL)) AS average_fastest_lap_time_seconds FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average fastest lap time in seconds for Lewis Hamilton in all the Formula_1 races?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT AVG(CAST(SUBSTR(T2.fastestLapTime, 4, 2) AS REAL) * 60 + CAST(SUBSTR(T2.fastestLapTime, 7) AS REAL)) AS average_fastest_lap_time_seconds FROM drivers AS T1 INNER JOIN results AS T2 ON T1.driverId = T2.driverId WHERE T1.forename = 'Lewis' AND T1.surname = 'Hamilton'\n\nIs the SQL semantically correct?"}
{"id": 1321, "question": "List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.", "sql": "SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 23 AND T1.q2 IS NOT NULL", "db_id": "formula_1", "label": true, "prediction": true, "response_raw": "yes", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the reference name of the drivers who passed the second qualifying lap during race no. 23. Indicate their nationality and birthday.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T2.driverRef, T2.nationality, T2.dob FROM qualifying AS T1 INNER JOIN drivers AS T2 ON T1.driverId = T2.driverId WHERE T1.raceId = 23 AND T1.q2 IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 212, "question": "What are the accounts that have gold credit cards?", "sql": "select account.account_id from account inner join disp on account.account_id = disp.account_id inner join card on disp.disp_id = card.disp_id where card.type in ('gold' , 'junior') group by account.account_id", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the accounts that have gold credit cards?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select account.account_id from account inner join disp on account.account_id = disp.account_id inner join card on disp.disp_id = card.disp_id where card.type in ('gold' , 'junior') group by account.account_id\n\nIs the SQL semantically correct?"}
{"id": 640, "question": "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.", "sql": "SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL GROUP BY name", "db_id": "card_games", "label": true, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT name FROM cards WHERE isPromo = 1 AND side IS NOT NULL GROUP BY name\n\nIs the SQL semantically correct?"}
{"id": 1648, "question": "For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?", "sql": "SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND strftime('%Y', patient.birthday) BETWEEN '1936' AND '1956' AND laboratory.cpk > 250", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For patient born between 1936-1956, how many male patients have creatinine phosphokinase beyond the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'M' AND strftime('%Y', patient.birthday) BETWEEN '1936' AND '1956' AND laboratory.cpk > 250\n\nIs the SQL semantically correct?"}
{"id": 308, "question": "Chlorine is in what type of bond?", "sql": "SELECT DISTINCT bond.bond_type FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'te'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Chlorine is in what type of bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT bond.bond_type FROM bond INNER JOIN atom ON bond.molecule_id = atom.molecule_id WHERE atom.element = 'te'\n\nIs the SQL semantically correct?"}
{"id": 607, "question": "Which Russian set of cards contains the most cards overall?", "sql": "select cards.name from cards inner join foreign_data on cards.uuid = foreign_data.uuid inner join set_translations on sets.code = set_translations.setcode inner join sets on set_translations.id = sets.code where foreign_data.language = 'Russian' order by sets.basesetsize desc limit 1", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which Russian set of cards contains the most cards overall?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name from cards inner join foreign_data on cards.uuid = foreign_data.uuid inner join set_translations on sets.code = set_translations.setcode inner join sets on set_translations.id = sets.code where foreign_data.language = 'Russian' order by sets.basesetsize desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 670, "question": "How many cards in the set Coldsnap have a black border color?", "sql": "SELECT count(cards.id) FROM cards INNER JOIN sets ON cards.cardkingdomid = sets.mcmid WHERE sets.name = 'Coldsnap' AND cards.bordercolor = 'black'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards in the set Coldsnap have a black border color?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(cards.id) FROM cards INNER JOIN sets ON cards.cardkingdomid = sets.mcmid WHERE sets.name = 'Coldsnap' AND cards.bordercolor = 'black'\n\nIs the SQL semantically correct?"}
{"id": 321, "question": "Identify all connected atoms with a triple bond.", "sql": "select connected.atom_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify all connected atoms with a triple bond.\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select connected.atom_id from bond inner join connected on bond.bond_id = connected.bond_id where bond.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 1030, "question": "What is the percentage of blue female superheroes among all female superheroes?", "sql": "SELECT CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of blue female superheroes among all female superheroes?\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT CAST(SUM(CASE WHEN T3.colour = 'Blue' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T2.gender) FROM superhero AS T1 INNER JOIN gender AS T2 ON T1.gender_id = T2.id INNER JOIN colour AS T3 ON T1.eye_colour_id = T3.id WHERE T2.gender = 'Female'\n\nIs the SQL semantically correct?"}
{"id": 1017, "question": "Among the male superheroes, list the super hero names of superheroes with weight greater than the 79% average weight of all superheroes.", "sql": "select superhero.full_name from superhero inner join gender on superhero.gender_id = gender.id where gender.gender = 'Male' and weight_kg > ( select avg(weight_kg) from superhero ) * 0.79", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the male superheroes, list the super hero names of superheroes with weight greater than the 79% average weight of all superheroes.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select superhero.full_name from superhero inner join gender on superhero.gender_id = gender.id where gender.gender = 'Male' and weight_kg > ( select avg(weight_kg) from superhero ) * 0.79\n\nIs the SQL semantically correct?"}
{"id": 1248, "question": "How many drivers managed to finish the race in the 2008 Australian Grand Prix?", "sql": "SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.time IS NOT NULL", "db_id": "formula_1", "label": true, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many drivers managed to finish the race in the 2008 Australian Grand Prix?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT COUNT(T1.raceId) FROM races AS T1 INNER JOIN results AS T2 ON T1.raceId = T2.raceId WHERE T1.year = 2008 AND T1.name = 'Australian Grand Prix' AND T2.time IS NOT NULL\n\nIs the SQL semantically correct?"}
{"id": 2004, "question": "What's the nationality of the customer who spent 548.4 in 2012/8/24?", "sql": "SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the nationality of the customer who spent 548.4 in 2012/8/24?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T1.Country FROM gasstations AS T1 INNER JOIN transactions_1k AS T2 ON T1.GasStationID = T2.GasStationID WHERE T2.Date = '2012-08-24' AND T2.Amount = 548.4\n\nIs the SQL semantically correct?"}
{"id": 1534, "question": "What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?", "sql": "select home_team_goal , away_team_goal from match where date like '2008-09-24%'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the final score for the match on September 24, 2008, in the Belgian Jupiler League between the home team and the away team?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: select home_team_goal , away_team_goal from match where date like '2008-09-24%'\n\nIs the SQL semantically correct?"}
{"id": 371, "question": "What are the atoms of the triple bond with the molecule \"TR041\"?", "sql": "SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR447' AND T2.bond_type = '#'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the atoms of the triple bond with the molecule \"TR041\"?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT T1.atom_id, T1.atom_id2 FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id WHERE T2.molecule_id = 'TR447' AND T2.bond_type = '#'\n\nIs the SQL semantically correct?"}
{"id": 1001, "question": "Give the publisher ID of Star Trek.", "sql": "SELECT t.id FROM publisher AS t WHERE t.publisher_name = 'Star Trek'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the publisher ID of Star Trek.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT t.id FROM publisher AS t WHERE t.publisher_name = 'Star Trek'\n\nIs the SQL semantically correct?"}
{"id": 1319, "question": "From race no. 50 to 100, how many finishers have been disqualified?", "sql": "SELECT count(results.driverid) FROM results INNER JOIN status ON results.statusid = status.statusid WHERE status.statusid = 2 AND results.raceid BETWEEN 50 AND 100", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: From race no. 50 to 100, how many finishers have been disqualified?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT count(results.driverid) FROM results INNER JOIN status ON results.statusid = status.statusid WHERE status.statusid = 2 AND results.raceid BETWEEN 50 AND 100\n\nIs the SQL semantically correct?"}
{"id": 1406, "question": "List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.", "sql": "SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY SUM(T2.heading_accuracy) / COUNT(T2.player_fifa_api_id) DESC LIMIT 10", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the top 10 players' names whose heights are above 180 in descending order of average heading accuracy.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_name FROM Player AS T1 INNER JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T1.height > 180 GROUP BY T1.player_name ORDER BY SUM(T2.heading_accuracy) / COUNT(T2.player_fifa_api_id) DESC LIMIT 10\n\nIs the SQL semantically correct?"}
{"id": 744, "question": "Find the uuid of cards in which the old school format is restricted or banned.", "sql": "select distinct legalities.uuid from legalities inner join cards on legalities.uuid = cards.uuid where legalities.format = 'oldschool' and legalities.status = 'Banned' or legalities.status = 'Restricted'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Find the uuid of cards in which the old school format is restricted or banned.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select distinct legalities.uuid from legalities inner join cards on legalities.uuid = cards.uuid where legalities.format = 'oldschool' and legalities.status = 'Banned' or legalities.status = 'Restricted'\n\nIs the SQL semantically correct?"}
{"id": 1204, "question": "Which was Lewis Hamilton first race? What was his points recorded for his first race event?", "sql": "select races.name , results.points from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' order by races.year asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which was Lewis Hamilton first race? What was his points recorded for his first race event?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.name , results.points from results inner join drivers on results.driverid = drivers.driverid inner join driverstandings on drivers.driverid = driverstandings.driverid inner join races on driverstandings.raceid = races.raceid where drivers.surname = 'Hamilton' and drivers.forename = 'Lewis' order by races.year asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 922, "question": "Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?", "sql": "SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the users located in United Kingdom, how many users whose post have a total favorite amount of 4 or more?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT COUNT(DISTINCT T1.Id) FROM users AS T1 INNER JOIN posts AS T2 ON T1.Id = T2.OwnerUserId WHERE T1.Location = 'United Kingdom' AND T2.FavoriteCount >= 4\n\nIs the SQL semantically correct?"}
{"id": 1934, "question": "What was the gas consumption peak month for SME customers in 2013?", "sql": "select yearmonth.date from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and strftime('%Y' , yearmonth.date) = '2013' order by yearmonth.consumption desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the gas consumption peak month for SME customers in 2013?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select yearmonth.date from customers inner join yearmonth on customers.customerid = yearmonth.customerid where customers.segment = 'SME' and strftime('%Y' , yearmonth.date) = '2013' order by yearmonth.consumption desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 589, "question": "How many cards are oversized, reprinted, and printed for promotions?", "sql": "SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards are oversized, reprinted, and printed for promotions?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT COUNT(id) FROM cards WHERE isOversized = 1 AND isReprint = 1 AND isPromo = 1\n\nIs the SQL semantically correct?"}
{"id": 362, "question": "What are the bonds that have phosphorus and nitrogen as their atom elements?", "sql": "select distinct bond.bond_id from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'p' or atom.element = 'n'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the bonds that have phosphorus and nitrogen as their atom elements?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select distinct bond.bond_id from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = atom.molecule_id where atom.element = 'p' or atom.element = 'n'\n\nIs the SQL semantically correct?"}
{"id": 1288, "question": "How many Italian drivers haven't finished the race?", "sql": "select count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where drivers.nationality = 'Italian' and races.time is null", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many Italian drivers haven't finished the race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(drivers.driverid) from results inner join drivers on results.driverid = drivers.driverid inner join races on results.raceid = races.raceid where drivers.nationality = 'Italian' and races.time is null\n\nIs the SQL semantically correct?"}
{"id": 4, "question": "Please list the zip code of all the charter schools in Fresno County Office of Education.", "sql": "SELECT schools.zip FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE frpm.`charter school (y/n)` = 1 AND schools.county = 'Fresno'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the zip code of all the charter schools in Fresno County Office of Education.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT schools.zip FROM schools INNER JOIN frpm ON schools.cdscode = frpm.cdscode WHERE frpm.`charter school (y/n)` = 1 AND schools.county = 'Fresno'\n\nIs the SQL semantically correct?"}
{"id": 262, "question": "What is the amount of debt that client number 992 has, and how is this client doing with payments?", "sql": "select loan.amount , loan.status from client inner join loan on client.client_id = loan.account_id where client.client_id = 992", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the amount of debt that client number 992 has, and how is this client doing with payments?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select loan.amount , loan.status from client inner join loan on client.client_id = loan.account_id where client.client_id = 992\n\nIs the SQL semantically correct?"}
{"id": 1040, "question": "Provide the eye colours of the heroes whose skin colours are gold.", "sql": "select superhero.eye_colour_id from superhero inner join colour on colour.id = superhero.skin_colour_id where colour.colour = 'Gold'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Provide the eye colours of the heroes whose skin colours are gold.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: select superhero.eye_colour_id from superhero inner join colour on colour.id = superhero.skin_colour_id where colour.colour = 'Gold'\n\nIs the SQL semantically correct?"}
{"id": 1928, "question": "Which year recorded the most gas use paid in EUR?", "sql": "SELECT strftime('%Y', `date`) FROM transactions_1k WHERE price > 0 GROUP BY strftime('%Y', `date`) ORDER BY sum(price) DESC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which year recorded the most gas use paid in EUR?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT strftime('%Y', `date`) FROM transactions_1k WHERE price > 0 GROUP BY strftime('%Y', `date`) ORDER BY sum(price) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1055, "question": "State all of 3-D Man's attributes along with their values.", "sql": "SELECT T2.attribute_name, T1.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = '3-D Man'", "db_id": "superhero", "label": true, "prediction": true, "response_raw": "yes", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State all of 3-D Man's attributes along with their values.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT T2.attribute_name, T1.attribute_value FROM hero_attribute AS T1 INNER JOIN attribute AS T2 ON T1.attribute_id = T2.id INNER JOIN superhero AS T3 ON T1.hero_id = T3.id WHERE T3.superhero_name = '3-D Man'\n\nIs the SQL semantically correct?"}
{"id": 895, "question": "List the post IDs and badge names of the user Samuel in 2013.", "sql": "SELECT T1.Id, T3.Name FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN badges AS T3 ON T2.Id = T3.UserId WHERE T2.DisplayName = 'Samuel' AND STRFTIME('%Y', T3.Date) = '2013'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the post IDs and badge names of the user Samuel in 2013.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.Id, T3.Name FROM posts AS T1 INNER JOIN users AS T2 ON T1.OwnerUserId = T2.Id INNER JOIN badges AS T3 ON T2.Id = T3.UserId WHERE T2.DisplayName = 'Samuel' AND STRFTIME('%Y', T3.Date) = '2013'\n\nIs the SQL semantically correct?"}
{"id": 829, "question": "How many users are awarded with more than 5 badges?", "sql": "select count(userid) from badges where name in ( select name from badges group by name having count(name) > 5 )", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many users are awarded with more than 5 badges?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(userid) from badges where name in ( select name from badges group by name having count(name) > 5 )\n\nIs the SQL semantically correct?"}
{"id": 1306, "question": "How many British drivers who were born in 1980?", "sql": "select count(driverid) from drivers where nationality = 'Australian' and strftime('%Y' , dob) = '1980'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many British drivers who were born in 1980?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select count(driverid) from drivers where nationality = 'Australian' and strftime('%Y' , dob) = '1980'\n\nIs the SQL semantically correct?"}
{"id": 1087, "question": "Identify the gender of the superhero who has the ability of Phoenix Force.", "sql": "SELECT superhero.gender_id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the gender of the superhero who has the ability of Phoenix Force.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT superhero.gender_id FROM superhero INNER JOIN hero_power ON superhero.id = hero_power.hero_id INNER JOIN superpower ON hero_power.power_id = superpower.id WHERE superpower.power_name = 'Phoenix Force'\n\nIs the SQL semantically correct?"}
{"id": 970, "question": "What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?", "sql": "SELECT T1.Id, T2.Comment FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the post ID and the comments commented in the post titled by \"Group differences on a five point Likert item\"?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T1.Id, T2.Comment FROM posts AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.PostId WHERE T1.Title = 'Group differences on a five point Likert item'\n\nIs the SQL semantically correct?"}
{"id": 537, "question": "How many cards that illusrtated in German have been reprinted?", "sql": "SELECT count(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isreprint = 1", "db_id": "card_games", "label": true, "prediction": true, "response_raw": "yes", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many cards that illusrtated in German have been reprinted?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT count(cards.id) FROM cards INNER JOIN foreign_data ON cards.uuid = foreign_data.uuid WHERE foreign_data.language = 'German' AND cards.isreprint = 1\n\nIs the SQL semantically correct?"}
{"id": 797, "question": "For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?", "sql": "select count(posts.owneruserid) from users inner join posts on users.id = posts.owneruserid inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Tiago Pasqualini'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the user with the display name of \"Tiago Pasqualini\", how many posts did he/she own?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(posts.owneruserid) from users inner join posts on users.id = posts.owneruserid inner join posthistory on posts.id = posthistory.postid where users.displayname = 'Tiago Pasqualini'\n\nIs the SQL semantically correct?"}
{"id": 398, "question": "What is the percentage of element chlorine in carcinogenic molecules?", "sql": "select cast(sum(case when atom.element = 'pb' then 1 else 0 end) as real) * 100 / count(atom.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of element chlorine in carcinogenic molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select cast(sum(case when atom.element = 'pb' then 1 else 0 end) as real) * 100 / count(atom.molecule_id) from atom inner join molecule on atom.molecule_id = molecule.molecule_id where molecule.label = '+'\n\nIs the SQL semantically correct?"}
{"id": 72, "question": "What is the postal street address for the school with the 7th highest Math average? Indicate the school's name.", "sql": "select schools.mailstreet , schools.school from schools inner join satscores on schools.cdscode = satscores.cds order by satscores.avgscrmath desc limit 5 , 1", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the postal street address for the school with the 7th highest Math average? Indicate the school's name.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: select schools.mailstreet , schools.school from schools inner join satscores on schools.cdscode = satscores.cds order by satscores.avgscrmath desc limit 5 , 1\n\nIs the SQL semantically correct?"}
{"id": 837, "question": "Which user have only one post history per post and having at least 1000 views?", "sql": "SELECT T2.UserId FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId WHERE T1.Views >= 1000 GROUP BY T2.UserId HAVING COUNT(DISTINCT T2.PostId) = 1", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which user have only one post history per post and having at least 1000 views?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT T2.UserId FROM users AS T1 INNER JOIN postHistory AS T2 ON T1.Id = T2.UserId WHERE T1.Views >= 1000 GROUP BY T2.UserId HAVING COUNT(DISTINCT T2.PostId) = 1\n\nIs the SQL semantically correct?"}
{"id": 1875, "question": "Please provide links to events for members who have paid more than 50 dollar.", "sql": "SELECT DISTINCT T1.link_to_event FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.cost > 50", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide links to events for members who have paid more than 50 dollar.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT DISTINCT T1.link_to_event FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget WHERE T2.cost > 50\n\nIs the SQL semantically correct?"}
{"id": 950, "question": "When did the user known as 'IrishStat' create his or her account?", "sql": "SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: When did the user known as 'IrishStat' create his or her account?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT CreationDate FROM users WHERE DisplayName = 'IrishStat'\n\nIs the SQL semantically correct?"}
{"id": 1908, "question": "Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.", "sql": "select member.first_name , member.last_name , income.amount from income inner join member on income.link_to_member = member.member_id where income.date_received = '9/9/2019'", "db_id": "student_club", "label": false, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write the full names of students who received funds on the date of 9/9/2019 and include the amount received.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select member.first_name , member.last_name , income.amount from income inner join member on income.link_to_member = member.member_id where income.date_received = '9/9/2019'\n\nIs the SQL semantically correct?"}
{"id": 705, "question": "What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?", "sql": "select set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Tendo Ice Bridge' and foreign_data.language = 'French'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What's the French name of the set of cards with \"Tendo Ice Bridge\" is in?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select set_translations.translation from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on set_translations.id = foreign_data.id where cards.name = 'Tendo Ice Bridge' and foreign_data.language = 'French'\n\nIs the SQL semantically correct?"}
{"id": 1191, "question": "How old is the youngest Japanese driver? What is his name?", "sql": "SELECT 2022 - strftime('%Y', dob) FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How old is the youngest Japanese driver? What is his name?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT 2022 - strftime('%Y', dob) FROM drivers WHERE nationality = 'Japanese' ORDER BY dob DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 851, "question": "How many posts have a score of 10 on the list?", "sql": "select count(postid) from comments where score = 10", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many posts have a score of 10 on the list?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(postid) from comments where score = 10\n\nIs the SQL semantically correct?"}
{"id": 1687, "question": "How many patients with a normal RF don't have thrombosis?", "sql": "SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many patients with a normal RF don't have thrombosis?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT COUNT(T1.ID) FROM Examination AS T1 INNER JOIN Laboratory AS T2 ON T1.ID = T2.ID WHERE T2.RF < 20 AND T1.Thrombosis = 0\n\nIs the SQL semantically correct?"}
{"id": 1505, "question": "What are the player api id of 10 heaviest players?", "sql": "SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the player api id of 10 heaviest players?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT player_api_id FROM Player ORDER BY weight DESC LIMIT 10\n\nIs the SQL semantically correct?"}
{"id": 1564, "question": "State the ID and age of patient with positive degree of coagulation.", "sql": "SELECT T1.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State the ID and age of patient with positive degree of coagulation.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID, strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', T1.Birthday) AS age FROM Patient AS T1 INNER JOIN Examination AS T2 ON T1.ID = T2.ID WHERE T2.RVVT = '+'\n\nIs the SQL semantically correct?"}
{"id": 123, "question": "What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.", "sql": "SELECT T2.`Percent (%) Eligible Free (K-12)`, T1.DOC AS `District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Alusine'", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the Percent (%) Eligible Free (K-12) in the school administered by an administrator whose first name is Alusine. List the district code of the school.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT T2.`Percent (%) Eligible Free (K-12)`, T1.DOC AS `District Code` FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T1.AdmFName1 = 'Alusine'\n\nIs the SQL semantically correct?"}
{"id": 514, "question": "Name all the cards which have alternative language in Japanese.", "sql": "select cards.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'Japanese'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Name all the cards which have alternative language in Japanese.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cards.name from cards inner join set_translations on cards.id = set_translations.id inner join foreign_data on cards.uuid = foreign_data.uuid where foreign_data.language = 'Japanese'\n\nIs the SQL semantically correct?"}
{"id": 1293, "question": "Which race has the shortest actual finishing time? Please give the name and year.", "sql": "select distinct races.name , races.year from results inner join races on results.raceid = races.raceid where results.milliseconds is null order by results.milliseconds asc limit 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which race has the shortest actual finishing time? Please give the name and year.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select distinct races.name , races.year from results inner join races on results.raceid = races.raceid where results.milliseconds is null order by results.milliseconds asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 688, "question": "What is the percentage of incredibly powerful cards in the set Coldsnap?", "sql": "select cast(sum(case when cards.power is not null then 1 else 0 end) as real) * 100 / count(cards.power) from cards inner join sets on cards.cardkingdomid = sets.id where sets.name = 'Coldsnap' and cards.cardkingdomid is not null", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of incredibly powerful cards in the set Coldsnap?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select cast(sum(case when cards.power is not null then 1 else 0 end) as real) * 100 / count(cards.power) from cards inner join sets on cards.cardkingdomid = sets.id where sets.name = 'Coldsnap' and cards.cardkingdomid is not null\n\nIs the SQL semantically correct?"}
{"id": 465, "question": "How many molecules without sulphur element is not having double bond?", "sql": "SELECT count(molecule.molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type != ' = ' AND atom.element != 's'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many molecules without sulphur element is not having double bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT count(molecule.molecule_id) FROM molecule INNER JOIN bond ON molecule.molecule_id = bond.molecule_id INNER JOIN connected ON bond.bond_id = connected.bond_id INNER JOIN atom ON connected.atom_id = atom.atom_id WHERE bond.bond_type != ' = ' AND atom.element != 's'\n\nIs the SQL semantically correct?"}
{"id": 1949, "question": "Who among KAM's customers consumed the most? How much did it consume?", "sql": "SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' ORDER BY T2.Consumption DESC LIMIT 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who among KAM's customers consumed the most? How much did it consume?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT T1.CustomerID, T2.Consumption FROM customers AS T1 INNER JOIN yearmonth AS T2 ON T1.CustomerID = T2.CustomerID WHERE T1.Segment = 'KAM' ORDER BY T2.Consumption DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 192, "question": "Which district has highest active loan?", "sql": "SELECT T3.A2 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'C' OR T1.status = 'D' GROUP BY T3.A2 ORDER BY COUNT(T1.loan_id) DESC LIMIT 1", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which district has highest active loan?\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: SELECT T3.A2 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'C' OR T1.status = 'D' GROUP BY T3.A2 ORDER BY COUNT(T1.loan_id) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 404, "question": "What are the toxicology elements associated with bond ID TR000_1_2?", "sql": "select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR005_16_26'", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the toxicology elements associated with bond ID TR000_1_2?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: select atom.element from atom inner join connected on atom.atom_id = connected.atom_id inner join bond on bond.molecule_id = connected.atom_id where bond.bond_id = 'TR005_16_26'\n\nIs the SQL semantically correct?"}
{"id": 1665, "question": "List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.", "sql": "SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE strftime('%Y', laboratory.`date`) > '1992' AND laboratory.pt < 14", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List all patients who first came to the hospital after year 1992 with prothrombin time (PT) level that are normal.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE strftime('%Y', laboratory.`date`) > '1992' AND laboratory.pt < 14\n\nIs the SQL semantically correct?"}
{"id": 1550, "question": "Are there more in-patient or outpatient who were male? What is the deviation in percentage?", "sql": "select case when sum(case when admission = '+' then 1 else 0 end) > sum(case when admission = '-' then 1 else 0 end) then 'in-patient' else 'outpatient' end from patient", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Are there more in-patient or outpatient who were male? What is the deviation in percentage?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select case when sum(case when admission = '+' then 1 else 0 end) > sum(case when admission = '-' then 1 else 0 end) then 'in-patient' else 'outpatient' end from patient\n\nIs the SQL semantically correct?"}
{"id": 2008, "question": "Which gas station has the highest amount of revenue?", "sql": "select gasstations.gasstationid from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid order by transactions_1k.amount desc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which gas station has the highest amount of revenue?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select gasstations.gasstationid from gasstations inner join transactions_1k on gasstations.gasstationid = transactions_1k.gasstationid order by transactions_1k.amount desc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1695, "question": "For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.", "sql": "SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SM NOT IN ('-', '+-') AND T1.SM IS NOT NULL ORDER BY T2.Birthday DESC LIMIT 3", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients with an abnormal anti-SM, please list the IDs of the three youngest ones.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT T1.ID FROM Laboratory AS T1 INNER JOIN Patient AS T2 ON T1.ID = T2.ID WHERE T1.SM NOT IN ('-', '+-') AND T1.SM IS NOT NULL ORDER BY T2.Birthday DESC LIMIT 3\n\nIs the SQL semantically correct?"}
{"id": 1907, "question": "List the event names which were budgeted for the food.", "sql": "select event.event_name from event inner join budget on event.event_id = budget.link_to_event where budget.category = 'Food'", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List the event names which were budgeted for the food.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select event.event_name from event inner join budget on event.event_id = budget.link_to_event where budget.category = 'Food'\n\nIs the SQL semantically correct?"}
{"id": 121, "question": "What are the two most common first names among the school administrators? Indicate the district to which they administer.", "sql": "SELECT AdmFName, District, COUNT(*) AS NameCount FROM (SELECT AdmFName1 AS AdmFName, District FROM schools WHERE AdmFName1 IS NOT NULL UNION ALL SELECT AdmFName2, District FROM schools WHERE AdmFName2 IS NOT NULL UNION ALL SELECT AdmFName3, District FROM schools WHERE AdmFName3 IS NOT NULL) GROUP BY AdmFName, District ORDER BY NameCount DESC LIMIT 2", "db_id": "california_schools", "label": false, "prediction": false, "response_raw": "no", "schema": "frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the two most common first names among the school administrators? Indicate the district to which they administer.\n\nSchema: frpm(CDSCode, Academic Year, County Code, District Code, School Code, County Name, District Name, School Name, District Type, School Type, Educational Option Type, NSLP Provision Status, Charter School (Y/N), Charter School Number, Charter Funding Type, IRC, Low Grade, High Grade, Enrollment (K-12), Free Meal Count (K-12), Percent (%) Eligible Free (K-12), FRPM Count (K-12), Percent (%) Eligible FRPM (K-12), Enrollment (Ages 5-17), Free Meal Count (Ages 5-17), Percent (%) Eligible Free (Ages 5-17), FRPM Count (Ages 5-17), Percent (%) Eligible FRPM (Ages 5-17), 2013-14 CALPADS Fall 1 Certification Status) | satscores(cds, rtype, sname, dname, cname, enroll12, NumTstTakr, AvgScrRead, AvgScrMath, AvgScrWrite, NumGE1500) | schools(CDSCode, NCESDist, NCESSchool, StatusType, County, District, School, Street, StreetAbr, City, Zip, State, MailStreet, MailStrAbr, MailCity, MailZip, MailState, Phone, Ext, Website, OpenDate, ClosedDate, Charter, CharterNum, FundingType, DOC, DOCType, SOC, SOCType, EdOpsCode, EdOpsName, EILCode, EILName, GSoffered, GSserved, Virtual, Magnet, Latitude, Longitude, AdmFName1, AdmLName1, AdmEmail1, AdmFName2, AdmLName2, AdmEmail2, AdmFName3, AdmLName3, AdmEmail3, LastUpdate)\n\nSQL: SELECT AdmFName, District, COUNT(*) AS NameCount FROM (SELECT AdmFName1 AS AdmFName, District FROM schools WHERE AdmFName1 IS NOT NULL UNION ALL SELECT AdmFName2, District FROM schools WHERE AdmFName2 IS NOT NULL UNION ALL SELECT AdmFName3, District FROM schools WHERE AdmFName3 IS NOT NULL) GROUP BY AdmFName, District ORDER BY NameCount DESC LIMIT 2\n\nIs the SQL semantically correct?"}
{"id": 868, "question": "How many elders obtained the \"Supporter\" badge?", "sql": "select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and users.age > 65", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many elders obtained the \"Supporter\" badge?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(users.id) from users inner join badges on users.id = badges.userid where badges.name = 'Supporter' and users.age > 65\n\nIs the SQL semantically correct?"}
{"id": 998, "question": "What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.", "sql": "SELECT CAST(SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage_bad, SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS count_bad FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T1.publisher_name = 'Marvel Comics'", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of superheroes who act in their own self-interest or make decisions based on their own moral code? Indicate how many of the said superheroes were published by Marvel Comics.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT CAST(SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.id) AS percentage_bad, SUM(CASE WHEN T3.alignment = 'Bad' THEN 1 ELSE 0 END) AS count_bad FROM publisher AS T1 INNER JOIN superhero AS T2 ON T1.id = T2.publisher_id INNER JOIN alignment AS T3 ON T2.alignment_id = T3.id WHERE T1.publisher_name = 'Marvel Comics'\n\nIs the SQL semantically correct?"}
{"id": 1365, "question": "What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?", "sql": "SELECT results.position FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.time desc LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What was the position of the circuits during Lewis Hamilton's fastest lap in a Formula_1 race?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.position FROM results INNER JOIN drivers ON results.driverid = drivers.driverid WHERE drivers.forename = 'Lewis' AND drivers.surname = 'Hamilton' ORDER BY results.time desc LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1080, "question": "In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.", "sql": "SELECT sum(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - sum(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero", "db_id": "superhero", "label": false, "prediction": false, "response_raw": "no", "schema": "alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In superheroes with missing weight data, calculate the difference between the number of superheroes with blue eyes and no eye color.\n\nSchema: alignment(id, alignment) | attribute(id, attribute_name) | colour(id, colour) | gender(id, gender) | publisher(id, publisher_name) | race(id, race) | superhero(id, superhero_name, full_name, gender_id, eye_colour_id, hair_colour_id, skin_colour_id, race_id, publisher_id, alignment_id, height_cm, weight_kg) | hero_attribute(hero_id, attribute_id, attribute_value) | superpower(id, power_name) | hero_power(hero_id, power_id)\n\nSQL: SELECT sum(CASE WHEN eye_colour_id = 7 THEN 1 ELSE 0 END) - sum(CASE WHEN eye_colour_id = 1 THEN 1 ELSE 0 END) FROM superhero\n\nIs the SQL semantically correct?"}
{"id": 1912, "question": "Where is the hometown of Garrett Gerke?", "sql": "select zip_code.city from member inner join zip_code on member.zip = zip_code.zip_code where member.first_name = 'Garrett' and member.last_name = 'Girke'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Where is the hometown of Garrett Gerke?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select zip_code.city from member inner join zip_code on member.zip = zip_code.zip_code where member.first_name = 'Garrett' and member.last_name = 'Girke'\n\nIs the SQL semantically correct?"}
{"id": 1198, "question": "Which race was Alex Yoong in when he was in track number less than 20?", "sql": "select races.name from results inner join races on results.raceid = races.raceid inner join drivers on results.driverid = drivers.driverid where drivers.surname = 'Yoong' and drivers.forename = 'Alex' and results.position < 10", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which race was Alex Yoong in when he was in track number less than 20?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select races.name from results inner join races on results.raceid = races.raceid inner join drivers on results.driverid = drivers.driverid where drivers.surname = 'Yoong' and drivers.forename = 'Alex' and results.position < 10\n\nIs the SQL semantically correct?"}
{"id": 1387, "question": "Who are the top 5 players who perform better in crossing actions? Indicate their player id.", "sql": "SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.crossing IS NOT NULL ORDER BY T1.crossing DESC LIMIT 5", "db_id": "european_football_2", "label": false, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who are the top 5 players who perform better in crossing actions? Indicate their player id.\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT T1.player_api_id FROM Player_Attributes AS T1 WHERE T1.crossing IS NOT NULL ORDER BY T1.crossing DESC LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 1653, "question": "For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.", "sql": "SELECT patient.id, patient.admission FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50 AND (laboratory.rbc < 3.5 OR laboratory.rbc > 6)", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For all the female patient age 50 and above, who has abnormal red blood cell count. State if they were admitted to hospital.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT patient.id, patient.admission FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F' AND strftime('%Y', CURRENT_TIMESTAMP) - strftime('%Y', patient.birthday) > 50 AND (laboratory.rbc < 3.5 OR laboratory.rbc > 6)\n\nIs the SQL semantically correct?"}
{"id": 1881, "question": "How many members have education major in the College of Education & Human Services?", "sql": "select count(*) from member inner join major on member.link_to_major = major.major_id where major.college = 'College of Education & Human Services' and major.major_name = 'Education' and member.position = 'Member'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many members have education major in the College of Education & Human Services?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: select count(*) from member inner join major on member.link_to_major = major.major_id where major.college = 'College of Education & Human Services' and major.major_name = 'Education' and member.position = 'Member'\n\nIs the SQL semantically correct?"}
{"id": 272, "question": "Please provide the IDs of the 3 female clients with the largest loans.", "sql": "select client.client_id from client inner join loan on client.client_id = loan.loan_id where client.gender = 'F' order by loan.amount desc limit 3", "db_id": "financial", "label": false, "prediction": false, "response_raw": "no", "schema": "account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please provide the IDs of the 3 female clients with the largest loans.\n\nSchema: account(account_id, district_id, frequency, date) | card(card_id, disp_id, type, issued) | client(client_id, gender, birth_date, district_id) | disp(disp_id, client_id, account_id, type) | district(district_id, A2, A3, A4, A5, A6, A7, A8, A9, A10, A11, A12, A13, A14, A15, A16) | loan(loan_id, account_id, date, amount, duration, payments, status) | order(order_id, account_id, bank_to, account_to, amount, k_symbol) | trans(trans_id, account_id, date, type, operation, amount, balance, k_symbol, bank, account)\n\nSQL: select client.client_id from client inner join loan on client.client_id = loan.loan_id where client.gender = 'F' order by loan.amount desc limit 3\n\nIs the SQL semantically correct?"}
{"id": 1700, "question": "For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.", "sql": "select distinct patient.diagnosis from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.dna >= 8", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the patients who have an abnormal level of anti-DNA, please list the diseases they are diagnosed with.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select distinct patient.diagnosis from patient inner join examination on patient.id = examination.id inner join laboratory on examination.id = laboratory.id where laboratory.dna >= 8\n\nIs the SQL semantically correct?"}
{"id": 395, "question": "How many bond id have element iodine?", "sql": "SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: How many bond id have element iodine?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT COUNT(DISTINCT T2.bond_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'\n\nIs the SQL semantically correct?"}
{"id": 1577, "question": "What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.", "sql": "select examination.symptoms , patient.diagnosis from patient inner join examination on patient.id = examination.id order by patient.birthday asc limit 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What are the symptoms observed by the youngest patient to ever did a medical examination? Identify their diagnosis.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: select examination.symptoms , patient.diagnosis from patient inner join examination on patient.id = examination.id order by patient.birthday asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 296, "question": "What is the percentage of carbon in double-bond molecules?", "sql": "SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T2.bond_type = '='", "db_id": "toxicology", "label": false, "prediction": false, "response_raw": "no", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of carbon in double-bond molecules?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT CAST(SUM(CASE WHEN T1.element = 'c' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.atom_id) AS percentage FROM atom AS T1 INNER JOIN connected AS T3 ON T1.atom_id = T3.atom_id INNER JOIN bond AS T2 ON T3.bond_id = T2.bond_id WHERE T2.bond_type = '='\n\nIs the SQL semantically correct?"}
{"id": 1996, "question": "For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?", "sql": "SELECT sum(yearmonth.consumption), yearmonth.date FROM `yearmonth` INNER JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid WHERE transactions_1k.date = '2012-08-24' AND transactions_1k.price = 124.05", "db_id": "debit_card_specializing", "label": false, "prediction": false, "response_raw": "no", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: For the customer who paid 124.05 in 2012/8/24, how much did he/she spend during the January of 2012? And what is the date and expenses exactly?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: SELECT sum(yearmonth.consumption), yearmonth.date FROM `yearmonth` INNER JOIN transactions_1k ON yearmonth.customerid = transactions_1k.customerid WHERE transactions_1k.date = '2012-08-24' AND transactions_1k.price = 124.05\n\nIs the SQL semantically correct?"}
{"id": 780, "question": "Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?", "sql": "select count(badges.userid) from users inner join badges on users.id = badges.userid where users.displayname = 'csgillespie' and badges.date = '2011'", "db_id": "codebase_community", "label": false, "prediction": false, "response_raw": "no", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the badges obtained by csgillespie, how many of them were obtained in the year 2011?\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select count(badges.userid) from users inner join badges on users.id = badges.userid where users.displayname = 'csgillespie' and badges.date = '2011'\n\nIs the SQL semantically correct?"}
{"id": 1255, "question": "Who was the champion of 2008's Australian Grand Prix and where can I know more about him?", "sql": "SELECT results.time, races.url FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' ORDER BY results.points DESC LIMIT 1", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Who was the champion of 2008's Australian Grand Prix and where can I know more about him?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT results.time, races.url FROM races INNER JOIN results ON races.raceid = results.raceid WHERE races.year = 2008 AND races.name = 'Australian Grand Prix' ORDER BY results.points DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1302, "question": "State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?", "sql": "select code from drivers where nationality = 'Dutch' order by dob asc limit 3", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: State code numbers of top 3 yougest drivers. How many Netherlandic drivers among them?\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select code from drivers where nationality = 'Dutch' order by dob asc limit 3\n\nIs the SQL semantically correct?"}
{"id": 305, "question": "What elements are in a double type bond?", "sql": "SELECT DISTINCT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '='", "db_id": "toxicology", "label": false, "prediction": true, "response_raw": "yes", "schema": "atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What elements are in a double type bond?\n\nSchema: atom(atom_id, molecule_id, element) | bond(bond_id, molecule_id, bond_type) | connected(atom_id, atom_id2, bond_id) | molecule(molecule_id, label)\n\nSQL: SELECT DISTINCT T3.element FROM connected AS T1 INNER JOIN bond AS T2 ON T1.bond_id = T2.bond_id INNER JOIN atom AS T3 ON T1.atom_id = T3.atom_id WHERE T2.bond_type = '='\n\nIs the SQL semantically correct?"}
{"id": 1705, "question": "When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.", "sql": "SELECT laboratory.`date` FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.ldh >= 500 ORDER BY patient.`first date` DESC LIMIT 1", "db_id": "thrombosis_prediction", "label": false, "prediction": false, "response_raw": "no", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: When is the latest patient's medical data recorded? This patient should have an abnormal level of lactate dehydrogenase.\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT laboratory.`date` FROM laboratory INNER JOIN patient ON laboratory.id = patient.id WHERE laboratory.ldh >= 500 ORDER BY patient.`first date` DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1539, "question": "In the 2015–2016 season, how many games were played in the Italian Serie A league?", "sql": "SELECT count(match_api_id) FROM `match` WHERE season = '2015/2016'", "db_id": "european_football_2", "label": false, "prediction": false, "response_raw": "no", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In the 2015–2016 season, how many games were played in the Italian Serie A league?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT count(match_api_id) FROM `match` WHERE season = '2015/2016'\n\nIs the SQL semantically correct?"}
{"id": 525, "question": "What is the border color of card \"Ancestor's Chosen\"?", "sql": "SELECT colors FROM cards WHERE name = 'Ancestor''s Chosen'", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the border color of card \"Ancestor's Chosen\"?\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: SELECT colors FROM cards WHERE name = 'Ancestor''s Chosen'\n\nIs the SQL semantically correct?"}
{"id": 805, "question": "Write the contents of comments with a score of 17.", "sql": "SELECT text FROM comments WHERE score = 17", "db_id": "codebase_community", "label": true, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Write the contents of comments with a score of 17.\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: SELECT text FROM comments WHERE score = 17\n\nIs the SQL semantically correct?"}
{"id": 1569, "question": "What is the percentage of female patient had total protein not within the normal range?", "sql": "SELECT cast(sum(iif(laboratory.tp < 6.0 OR laboratory.tp > 8.5, 1, 0)) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F'", "db_id": "thrombosis_prediction", "label": true, "prediction": true, "response_raw": "yes", "schema": "Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the percentage of female patient had total protein not within the normal range?\n\nSchema: Examination(ID, Examination Date, aCL IgG, aCL IgM, ANA, ANA Pattern, aCL IgA, Diagnosis, KCT, RVVT, LAC, Symptoms, Thrombosis) | Patient(ID, SEX, Birthday, Description, First Date, Admission, Diagnosis) | Laboratory(ID, Date, GOT, GPT, LDH, ALP, TP, ALB, UA, UN, CRE, T-BIL, T-CHO, TG, CPK, GLU, WBC, RBC, HGB, HCT, PLT, PT, APTT, FG, PIC, TAT, TAT2, U-PRO, IGG, IGA, IGM, CRP, RA, RF, C3, C4, RNP, SM, SC170, SSA, SSB, CENTROMEA, DNA, DNA-II)\n\nSQL: SELECT cast(sum(iif(laboratory.tp < 6.0 OR laboratory.tp > 8.5, 1, 0)) AS REAL) * 100 / count(patient.id) FROM patient INNER JOIN laboratory ON patient.id = laboratory.id WHERE patient.sex = 'F'\n\nIs the SQL semantically correct?"}
{"id": 1917, "question": "In 2012, who had the least consumption in LAM?", "sql": "select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date >= 201201 and yearmonth.date <= 201212 and customers.segment = 'LAM' order by yearmonth.consumption asc limit 1", "db_id": "debit_card_specializing", "label": false, "prediction": true, "response_raw": "yes", "schema": "customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: In 2012, who had the least consumption in LAM?\n\nSchema: customers(CustomerID, Segment, Currency) | gasstations(GasStationID, ChainID, Country, Segment) | products(ProductID, Description) | transactions_1k(TransactionID, Date, Time, CustomerID, CardID, GasStationID, ProductID, Amount, Price) | yearmonth(CustomerID, Date, Consumption)\n\nSQL: select customers.customerid from customers inner join yearmonth on customers.customerid = yearmonth.customerid where yearmonth.date >= 201201 and yearmonth.date <= 201212 and customers.segment = 'LAM' order by yearmonth.consumption asc limit 1\n\nIs the SQL semantically correct?"}
{"id": 1448, "question": "What is the average overall rating of the football player Aaron Doran?", "sql": "SELECT avg(player_attributes.overall_rating) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Aaron Doran'", "db_id": "european_football_2", "label": true, "prediction": true, "response_raw": "yes", "schema": "Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: What is the average overall rating of the football player Aaron Doran?\n\nSchema: Player_Attributes(id, player_fifa_api_id, player_api_id, date, overall_rating, potential, preferred_foot, attacking_work_rate, defensive_work_rate, crossing, finishing, heading_accuracy, short_passing, volleys, dribbling, curve, free_kick_accuracy, long_passing, ball_control, acceleration, sprint_speed, agility, reactions, balance, shot_power, jumping, stamina, strength, long_shots, aggression, interceptions, positioning, vision, penalties, marking, standing_tackle, sliding_tackle, gk_diving, gk_handling, gk_kicking, gk_positioning, gk_reflexes) | Player(id, player_api_id, player_name, player_fifa_api_id, birthday, height, weight) | League(id, country_id, name) | Country(id, name) | Team(id, team_api_id, team_fifa_api_id, team_long_name, team_short_name) | Team_Attributes(id, team_fifa_api_id, team_api_id, date, buildUpPlaySpeed, buildUpPlaySpeedClass, buildUpPlayDribbling, buildUpPlayDribblingClass, buildUpPlayPassing, buildUpPlayPassingClass, buildUpPlayPositioningClass, chanceCreationPassing, chanceCreationPassingClass, chanceCreationCrossing, chanceCreationCrossingClass, chanceCreationShooting, chanceCreationShootingClass, chanceCreationPositioningClass, defencePressure, defencePressureClass, defenceAggression, defenceAggressionClass, defenceTeamWidth, defenceTeamWidthClass, defenceDefenderLineClass) | Match(id, country_id, league_id, season, stage, date, match_api_id, home_team_api_id, away_team_api_id, home_team_goal, away_team_goal, home_player_X1, home_player_X2, home_player_X3, home_player_X4, home_player_X5, home_player_X6, home_player_X7, home_player_X8, home_player_X9, home_player_X10, home_player_X11, away_player_X1, away_player_X2, away_player_X3, away_player_X4, away_player_X5, away_player_X6, away_player_X7, away_player_X8, away_player_X9, away_player_X10, away_player_X11, home_player_Y1, home_player_Y2, home_player_Y3, home_player_Y4, home_player_Y5, home_player_Y6, home_player_Y7, home_player_Y8, home_player_Y9, home_player_Y10, home_player_Y11, away_player_Y1, away_player_Y2, away_player_Y3, away_player_Y4, away_player_Y5, away_player_Y6, away_player_Y7, away_player_Y8, away_player_Y9, away_player_Y10, away_player_Y11, home_player_1, home_player_2, home_player_3, home_player_4, home_player_5, home_player_6, home_player_7, home_player_8, home_player_9, home_player_10, home_player_11, away_player_1, away_player_2, away_player_3, away_player_4, away_player_5, away_player_6, away_player_7, away_player_8, away_player_9, away_player_10, away_player_11, goal, shoton, shotoff, foulcommit, card, cross, corner, possession, B365H, B365D, B365A, BWH, BWD, BWA, IWH, IWD, IWA, LBH, LBD, LBA, PSH, PSD, PSA, WHH, WHD, WHA, SJH, SJD, SJA, VCH, VCD, VCA, GBH, GBD, GBA, BSH, BSD, BSA)\n\nSQL: SELECT avg(player_attributes.overall_rating) FROM player INNER JOIN player_attributes ON player.player_api_id = player_attributes.player_api_id WHERE player.player_name = 'Aaron Doran'\n\nIs the SQL semantically correct?"}
{"id": 1221, "question": "Please list the surnames of all the Italian drivers.", "sql": "select surname from drivers where nationality = 'italian'", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Please list the surnames of all the Italian drivers.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: select surname from drivers where nationality = 'italian'\n\nIs the SQL semantically correct?"}
{"id": 639, "question": "Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.", "sql": "select name from cards where side is not null and ispromo = ( select ispromo from cards where side != 0 )", "db_id": "card_games", "label": false, "prediction": false, "response_raw": "no", "schema": "cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Which of the cards that are a promotional painting have multiple faces on the same card? Please list their names.\n\nSchema: cards(id, artist, asciiName, availability, borderColor, cardKingdomFoilId, cardKingdomId, colorIdentity, colorIndicator, colors, convertedManaCost, duelDeck, edhrecRank, faceConvertedManaCost, faceName, flavorName, flavorText, frameEffects, frameVersion, hand, hasAlternativeDeckLimit, hasContentWarning, hasFoil, hasNonFoil, isAlternative, isFullArt, isOnlineOnly, isOversized, isPromo, isReprint, isReserved, isStarter, isStorySpotlight, isTextless, isTimeshifted, keywords, layout, leadershipSkills, life, loyalty, manaCost, mcmId, mcmMetaId, mtgArenaId, mtgjsonV4Id, mtgoFoilId, mtgoId, multiverseId, name, number, originalReleaseDate, originalText, originalType, otherFaceIds, power, printings, promoTypes, purchaseUrls, rarity, scryfallId, scryfallIllustrationId, scryfallOracleId, setCode, side, subtypes, supertypes, tcgplayerProductId, text, toughness, type, types, uuid, variations, watermark) | foreign_data(id, flavorText, language, multiverseid, name, text, type, uuid) | legalities(id, format, status, uuid) | sets(id, baseSetSize, block, booster, code, isFoilOnly, isForeignOnly, isNonFoilOnly, isOnlineOnly, isPartialPreview, keyruneCode, mcmId, mcmIdExtras, mcmName, mtgoCode, name, parentCode, releaseDate, tcgplayerGroupId, totalSetSize, type) | set_translations(id, language, setCode, translation) | rulings(id, date, text, uuid)\n\nSQL: select name from cards where side is not null and ispromo = ( select ispromo from cards where side != 0 )\n\nIs the SQL semantically correct?"}
{"id": 1331, "question": "List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.", "sql": "SELECT T1.driverId FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY SUM(T2.duration) / COUNT(T2.duration) LIMIT 5", "db_id": "formula_1", "label": false, "prediction": false, "response_raw": "no", "schema": "circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: List down top 3 German drivers who has the shortest average pit stop duration and were born between 1980-1985.\n\nSchema: circuits(circuitId, circuitRef, name, location, country, lat, lng, alt, url) | constructors(constructorId, constructorRef, name, nationality, url) | drivers(driverId, driverRef, number, code, forename, surname, dob, nationality, url) | seasons(year, url) | races(raceId, year, round, circuitId, name, date, time, url) | constructorResults(constructorResultsId, raceId, constructorId, points, status) | constructorStandings(constructorStandingsId, raceId, constructorId, points, position, positionText, wins) | driverStandings(driverStandingsId, raceId, driverId, points, position, positionText, wins) | lapTimes(raceId, driverId, lap, position, time, milliseconds) | pitStops(raceId, driverId, stop, lap, time, duration, milliseconds) | qualifying(qualifyId, raceId, driverId, constructorId, number, position, q1, q2, q3) | status(statusId, status) | results(resultId, raceId, driverId, constructorId, number, grid, position, positionText, positionOrder, points, laps, time, milliseconds, fastestLap, rank, fastestLapTime, fastestLapSpeed, statusId)\n\nSQL: SELECT T1.driverId FROM drivers AS T1 INNER JOIN pitStops AS T2 ON T1.driverId = T2.driverId WHERE T1.nationality = 'German' AND T1.dob BETWEEN '1980-01-01' AND '1985-12-31' GROUP BY T1.driverId ORDER BY SUM(T2.duration) / COUNT(T2.duration) LIMIT 5\n\nIs the SQL semantically correct?"}
{"id": 958, "question": "Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".", "sql": "select users.reputation , users.upvotes from comments inner join users on comments.userid = users.id where comments.text = 'fine , you win :)'", "db_id": "codebase_community", "label": false, "prediction": true, "response_raw": "yes", "schema": "badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Give the user's reputation and up vote number of the user that commented \"fine, you win :)\".\n\nSchema: badges(Id, UserId, Name, Date) | comments(Id, PostId, Score, Text, CreationDate, UserId, UserDisplayName) | postHistory(Id, PostHistoryTypeId, PostId, RevisionGUID, CreationDate, UserId, Text, Comment, UserDisplayName) | postLinks(Id, CreationDate, PostId, RelatedPostId, LinkTypeId) | posts(Id, PostTypeId, AcceptedAnswerId, CreaionDate, Score, ViewCount, Body, OwnerUserId, LasActivityDate, Title, Tags, AnswerCount, CommentCount, FavoriteCount, LastEditorUserId, LastEditDate, CommunityOwnedDate, ParentId, ClosedDate, OwnerDisplayName, LastEditorDisplayName) | tags(Id, TagName, Count, ExcerptPostId, WikiPostId) | users(Id, Reputation, CreationDate, DisplayName, LastAccessDate, WebsiteUrl, Location, AboutMe, Views, UpVotes, DownVotes, AccountId, Age, ProfileImageUrl) | votes(Id, PostId, VoteTypeId, CreationDate, UserId, BountyAmount)\n\nSQL: select users.reputation , users.upvotes from comments inner join users on comments.userid = users.id where comments.text = 'fine , you win :)'\n\nIs the SQL semantically correct?"}
{"id": 1894, "question": "Among the members who incurred expenses in more than one event, who paid the most amount?", "sql": "SELECT T1.member_id FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T2.cost) DESC LIMIT 1", "db_id": "student_club", "label": true, "prediction": true, "response_raw": "yes", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Among the members who incurred expenses in more than one event, who paid the most amount?\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T1.member_id FROM member AS T1 INNER JOIN expense AS T2 ON T1.member_id = T2.link_to_member INNER JOIN budget AS T3 ON T2.link_to_budget = T3.budget_id INNER JOIN event AS T4 ON T3.link_to_event = T4.event_id GROUP BY T1.member_id HAVING COUNT(DISTINCT T4.event_id) > 1 ORDER BY SUM(T2.cost) DESC LIMIT 1\n\nIs the SQL semantically correct?"}
{"id": 1838, "question": "Identify the type of expenses and their total value approved for 'October Meeting' event.", "sql": "SELECT T3.event_name, SUM(T2.cost) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T2.approved = 'true'", "db_id": "student_club", "label": false, "prediction": false, "response_raw": "no", "schema": "event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)", "prompt": "You are a database expert.\n\nGiven the following natural language question, SQL query, and database schema, please determine whether the SQL is semantically correct with respect to the question.\n\nAnswer with \"Yes\" or \"No\" only.\n\nQuestion: Identify the type of expenses and their total value approved for 'October Meeting' event.\n\nSchema: event(event_id, event_name, event_date, type, notes, location, status) | major(major_id, major_name, department, college) | zip_code(zip_code, type, city, county, state, short_state) | attendance(link_to_event, link_to_member) | budget(budget_id, category, spent, remaining, amount, event_status, link_to_event) | expense(expense_id, expense_description, expense_date, cost, approved, link_to_member, link_to_budget) | income(income_id, date_received, amount, source, notes, link_to_member) | member(member_id, first_name, last_name, email, position, t_shirt_size, phone, zip, link_to_major)\n\nSQL: SELECT T3.event_name, SUM(T2.cost) FROM budget AS T1 INNER JOIN expense AS T2 ON T1.budget_id = T2.link_to_budget INNER JOIN event AS T3 ON T1.link_to_event = T3.event_id WHERE T3.event_name = 'October Meeting' AND T2.approved = 'true'\n\nIs the SQL semantically correct?"}
